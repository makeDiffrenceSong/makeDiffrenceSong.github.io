<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Make a difference</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-11T13:06:23.924Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SongSong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AMS-03-车载模块应用启动流程（Launcher--&gt;AMS--&gt;zygote）</title>
    <link href="http://example.com/2020/11/10/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2020/11/10/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</id>
    <published>2020-11-10T13:28:31.000Z</published>
    <updated>2020-11-11T13:06:23.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-应用启动流程总览"><a href="#1-应用启动流程总览" class="headerlink" title="1.应用启动流程总览"></a>1.应用启动流程总览</h1><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/AMS-startActivity.bmp" alt="AMS-startActivity"></p><h2 id="1-1-APP进程调用到AMS进程"><a href="#1-1-APP进程调用到AMS进程" class="headerlink" title="1.1 APP进程调用到AMS进程"></a>1.1 APP进程调用到AMS进程</h2><h2 id="1-2-AMS进程调到zygote进程"><a href="#1-2-AMS进程调到zygote进程" class="headerlink" title="1.2 AMS进程调到zygote进程"></a>1.2 AMS进程调到zygote进程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">startActivityAsUser</span><span class="params">(IApplicationThread caller, String callingPackage,</span></span></span><br><span class="line"><span class="function"><span class="params">            Intent intent, String resolvedType, IBinder resultTo, String resultWho, <span class="keyword">int</span> requestCode,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">int</span> startFlags, ProfilerInfo profilerInfo, Bundle bOptions, <span class="keyword">int</span> userId,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> validateIncomingUser)</span> </span>&#123;</span><br><span class="line">        enforceNotIsolatedCaller(<span class="string">&quot;startActivity&quot;</span>);</span><br><span class="line"></span><br><span class="line">        userId = mActivityStartController.checkTargetUser(userId, validateIncomingUser,</span><br><span class="line">                Binder.getCallingPid(), Binder.getCallingUid(), <span class="string">&quot;startActivityAsUser&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Switch to user app stacks here.</span></span><br><span class="line">        <span class="keyword">return</span> mActivityStartController.obtainStarter(intent, <span class="string">&quot;startActivityAsUser&quot;</span>)<span class="comment">//通过传入intent</span></span><br><span class="line">                .setCaller(caller)<span class="comment">//</span></span><br><span class="line">                .setCallingPackage(callingPackage)<span class="comment">//com.android.car.carlauncher</span></span><br><span class="line">                .setResolvedType(resolvedType)</span><br><span class="line">                .setResultTo(resultTo)</span><br><span class="line">                .setResultWho(resultWho)</span><br><span class="line">                .setRequestCode(requestCode)</span><br><span class="line">                .setStartFlags(startFlags)</span><br><span class="line">                .setProfilerInfo(profilerInfo)</span><br><span class="line">                .setActivityOptions(bOptions)</span><br><span class="line">                .setMayWait(userId)<span class="comment">//null</span></span><br><span class="line">                .execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">ActivityStarter <span class="title">setMayWait</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">        mRequest.mayWait = <span class="keyword">true</span>;<span class="comment">//这里会配置为true</span></span><br><span class="line">        mRequest.userId = userId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>根据调试信息，可以得到，调用mActivityStartController的obtainStarter后会通过ActivityStarter来配置一系列的参数，最终调用其execute方法。</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111155120779.png" alt="image-20201111155120779"></p><p>由于前面mRequest.mayWait = true;所以这里会调用startActivityMayWait方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// TODO(b/64750076): Look into passing request directly to these methods to allow</span></span><br><span class="line">        <span class="comment">// for transactional diffs and preprocessing.</span></span><br><span class="line">        <span class="keyword">if</span> (mRequest.mayWait) &#123;</span><br><span class="line">            <span class="keyword">return</span> startActivityMayWait(mRequest.caller, mRequest.callingUid,</span><br><span class="line">                                        mRequest.callingPackage, mRequest.intent, mRequest.resolvedType,</span><br><span class="line">                                        mRequest.voiceSession, mRequest.voiceInteractor, mRequest.resultTo,</span><br><span class="line">                                        mRequest.resultWho, mRequest.requestCode, mRequest.startFlags,</span><br><span class="line">                                        mRequest.profilerInfo, mRequest.waitResult, mRequest.globalConfig,</span><br><span class="line">                                        mRequest.activityOptions, mRequest.ignoreTargetSecurity, mRequest.userId,</span><br><span class="line">                                        mRequest.inTask, mRequest.reason,</span><br><span class="line">                                        mRequest.allowPendingRemoteAnimationRegistryLookup,</span><br><span class="line">                                        mRequest.originatingPendingIntent);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> startActivity(mRequest.caller, mRequest.intent, mRequest.ephemeralIntent,</span><br><span class="line">                                 mRequest.resolvedType, mRequest.activityInfo, mRequest.resolveInfo,</span><br><span class="line">                                 mRequest.voiceSession, mRequest.voiceInteractor, mRequest.resultTo,</span><br><span class="line">                                 mRequest.resultWho, mRequest.requestCode, mRequest.callingPid,</span><br><span class="line">                                 mRequest.callingUid, mRequest.callingPackage, mRequest.realCallingPid,</span><br><span class="line">                                 mRequest.realCallingUid, mRequest.startFlags, mRequest.activityOptions,</span><br><span class="line">                                 mRequest.ignoreTargetSecurity, mRequest.componentSpecified,</span><br><span class="line">                                 mRequest.outActivity, mRequest.inTask, mRequest.reason,</span><br><span class="line">                                 mRequest.allowPendingRemoteAnimationRegistryLookup,</span><br><span class="line">                                 mRequest.originatingPendingIntent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        onExecutionComplete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据调试信息，可以知道传入的各个参数的值如下图所示：</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111155918810.png" alt="image-20201111155918810"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">startActivityMayWait</span><span class="params">(IApplicationThread caller, <span class="keyword">int</span> callingUid,</span></span></span><br><span class="line"><span class="function"><span class="params">           String callingPackage, Intent intent, String resolvedType,</span></span></span><br><span class="line"><span class="function"><span class="params">           IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,</span></span></span><br><span class="line"><span class="function"><span class="params">           IBinder resultTo, String resultWho, <span class="keyword">int</span> requestCode, <span class="keyword">int</span> startFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">           ProfilerInfo profilerInfo, WaitResult outResult,</span></span></span><br><span class="line"><span class="function"><span class="params">           Configuration globalConfig, SafeActivityOptions options, <span class="keyword">boolean</span> ignoreTargetSecurity,</span></span></span><br><span class="line"><span class="function"><span class="params">           <span class="keyword">int</span> userId, TaskRecord inTask, String reason,</span></span></span><br><span class="line"><span class="function"><span class="params">           <span class="keyword">boolean</span> allowPendingRemoteAnimationRegistryLookup,</span></span></span><br><span class="line"><span class="function"><span class="params">           PendingIntentRecord originatingPendingIntent)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// Refuse possible leaked file descriptors</span></span><br><span class="line">       <span class="keyword">if</span> (intent != <span class="keyword">null</span> &amp;&amp; intent.hasFileDescriptors()) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;File descriptors passed in Intent&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       mSupervisor.getActivityMetricsLogger().notifyActivityLaunching();</span><br><span class="line">       <span class="keyword">boolean</span> componentSpecified = intent.getComponent() != <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> realCallingPid = Binder.getCallingPid();</span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> realCallingUid = Binder.getCallingUid();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> callingPid;</span><br><span class="line">       <span class="keyword">if</span> (callingUid &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">           callingPid = -<span class="number">1</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (caller == <span class="keyword">null</span>) &#123;</span><br><span class="line">           callingPid = realCallingPid;</span><br><span class="line">           callingUid = realCallingUid;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           callingPid = callingUid = -<span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Save a copy in case ephemeral needs it</span></span><br><span class="line">       <span class="keyword">final</span> Intent ephemeralIntent = <span class="keyword">new</span> Intent(intent);</span><br><span class="line">       <span class="comment">// Don&#x27;t modify the client&#x27;s object!</span></span><br><span class="line">       intent = <span class="keyword">new</span> Intent(intent);</span><br><span class="line">       <span class="keyword">if</span> (componentSpecified</span><br><span class="line">               &amp;&amp; !(Intent.ACTION_VIEW.equals(intent.getAction()) &amp;&amp; intent.getData() == <span class="keyword">null</span>)</span><br><span class="line">               &amp;&amp; !Intent.ACTION_INSTALL_INSTANT_APP_PACKAGE.equals(intent.getAction())</span><br><span class="line">               &amp;&amp; !Intent.ACTION_RESOLVE_INSTANT_APP_PACKAGE.equals(intent.getAction())</span><br><span class="line">               &amp;&amp; mService.getPackageManagerInternalLocked()</span><br><span class="line">                       .isInstantAppInstallerComponent(intent.getComponent())) &#123;</span><br><span class="line">           <span class="comment">// intercept intents targeted directly to the ephemeral installer the</span></span><br><span class="line">           <span class="comment">// ephemeral installer should never be started with a raw Intent; instead</span></span><br><span class="line">           <span class="comment">// adjust the intent so it looks like a &quot;normal&quot; instant app launch</span></span><br><span class="line">           intent.setComponent(<span class="keyword">null</span> <span class="comment">/*component*/</span>);</span><br><span class="line">           componentSpecified = <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       ResolveInfo rInfo = mSupervisor.resolveIntent(intent, resolvedType, userId,</span><br><span class="line">               <span class="number">0</span> <span class="comment">/* matchFlags */</span>,</span><br><span class="line">                       computeResolveFilterUid(</span><br><span class="line">                               callingUid, realCallingUid, mRequest.filterCallingUid));</span><br><span class="line">       <span class="keyword">if</span> (rInfo == <span class="keyword">null</span>) &#123;</span><br><span class="line">           UserInfo userInfo = mSupervisor.getUserInfo(userId);</span><br><span class="line">           <span class="keyword">if</span> (userInfo != <span class="keyword">null</span> &amp;&amp; userInfo.isManagedProfile()) &#123;</span><br><span class="line">               <span class="comment">// Special case for managed profiles, if attempting to launch non-cryto aware</span></span><br><span class="line">               <span class="comment">// app in a locked managed profile from an unlocked parent allow it to resolve</span></span><br><span class="line">               <span class="comment">// as user will be sent via confirm credentials to unlock the profile.</span></span><br><span class="line">               UserManager userManager = UserManager.get(mService.mContext);</span><br><span class="line">               <span class="keyword">boolean</span> profileLockedAndParentUnlockingOrUnlocked = <span class="keyword">false</span>;</span><br><span class="line">               <span class="keyword">long</span> token = Binder.clearCallingIdentity();</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   UserInfo parent = userManager.getProfileParent(userId);</span><br><span class="line">                   profileLockedAndParentUnlockingOrUnlocked = (parent != <span class="keyword">null</span>)</span><br><span class="line">                           &amp;&amp; userManager.isUserUnlockingOrUnlocked(parent.id)</span><br><span class="line">                           &amp;&amp; !userManager.isUserUnlockingOrUnlocked(userId);</span><br><span class="line">               &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                   Binder.restoreCallingIdentity(token);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (profileLockedAndParentUnlockingOrUnlocked) &#123;</span><br><span class="line">                   rInfo = mSupervisor.resolveIntent(intent, resolvedType, userId,</span><br><span class="line">                           PackageManager.MATCH_DIRECT_BOOT_AWARE</span><br><span class="line">                                   | PackageManager.MATCH_DIRECT_BOOT_UNAWARE,</span><br><span class="line">                           computeResolveFilterUid(</span><br><span class="line">                                   callingUid, realCallingUid, mRequest.filterCallingUid));</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// Collect information about the target of the Intent.</span></span><br><span class="line">       ActivityInfo aInfo = mSupervisor.resolveActivity(intent, rInfo, startFlags, profilerInfo);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">synchronized</span> (mService) &#123;</span><br><span class="line">           <span class="keyword">final</span> ActivityStack stack = mSupervisor.mFocusedStack;</span><br><span class="line">           stack.mConfigWillChange = globalConfig != <span class="keyword">null</span></span><br><span class="line">                   &amp;&amp; mService.getGlobalConfiguration().diff(globalConfig) != <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> (DEBUG_CONFIGURATION) Slog.v(TAG_CONFIGURATION,</span><br><span class="line">                   <span class="string">&quot;Starting activity when config will change = &quot;</span> + stack.mConfigWillChange);</span><br><span class="line"></span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">long</span> origId = Binder.clearCallingIdentity();</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (aInfo != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">                   (aInfo.applicationInfo.privateFlags</span><br><span class="line">                           &amp; ApplicationInfo.PRIVATE_FLAG_CANT_SAVE_STATE) != <span class="number">0</span> &amp;&amp;</span><br><span class="line">                   mService.mHasHeavyWeightFeature) &#123;</span><br><span class="line">               <span class="comment">// This may be a heavy-weight process!  Check to see if we already</span></span><br><span class="line">               <span class="comment">// have another, different heavy-weight process running.</span></span><br><span class="line">               <span class="keyword">if</span> (aInfo.processName.equals(aInfo.applicationInfo.packageName)) &#123;</span><br><span class="line">                   <span class="keyword">final</span> ProcessRecord heavy = mService.mHeavyWeightProcess;</span><br><span class="line">                   <span class="keyword">if</span> (heavy != <span class="keyword">null</span> &amp;&amp; (heavy.info.uid != aInfo.applicationInfo.uid</span><br><span class="line">                           || !heavy.processName.equals(aInfo.processName))) &#123;</span><br><span class="line">                       <span class="keyword">int</span> appCallingUid = callingUid;</span><br><span class="line">                       <span class="keyword">if</span> (caller != <span class="keyword">null</span>) &#123;</span><br><span class="line">                           ProcessRecord callerApp = mService.getRecordForAppLocked(caller);</span><br><span class="line">                           <span class="keyword">if</span> (callerApp != <span class="keyword">null</span>) &#123;</span><br><span class="line">                               appCallingUid = callerApp.info.uid;</span><br><span class="line">                           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                               Slog.w(TAG, <span class="string">&quot;Unable to find app for caller &quot;</span> + caller</span><br><span class="line">                                       + <span class="string">&quot; (pid=&quot;</span> + callingPid + <span class="string">&quot;) when starting: &quot;</span></span><br><span class="line">                                       + intent.toString());</span><br><span class="line">                               SafeActivityOptions.abort(options);</span><br><span class="line">                               <span class="keyword">return</span> ActivityManager.START_PERMISSION_DENIED;</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       IIntentSender target = mService.getIntentSenderLocked(</span><br><span class="line">                               ActivityManager.INTENT_SENDER_ACTIVITY, <span class="string">&quot;android&quot;</span>,</span><br><span class="line">                               appCallingUid, userId, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="keyword">new</span> Intent[] &#123; intent &#125;,</span><br><span class="line">                               <span class="keyword">new</span> String[] &#123; resolvedType &#125;, PendingIntent.FLAG_CANCEL_CURRENT</span><br><span class="line">                                       | PendingIntent.FLAG_ONE_SHOT, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">                       Intent newIntent = <span class="keyword">new</span> Intent();</span><br><span class="line">                       <span class="keyword">if</span> (requestCode &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                           <span class="comment">// Caller is requesting a result.</span></span><br><span class="line">                           newIntent.putExtra(HeavyWeightSwitcherActivity.KEY_HAS_RESULT, <span class="keyword">true</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                       newIntent.putExtra(HeavyWeightSwitcherActivity.KEY_INTENT,</span><br><span class="line">                               <span class="keyword">new</span> IntentSender(target));</span><br><span class="line">                       <span class="keyword">if</span> (heavy.activities.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                           ActivityRecord hist = heavy.activities.get(<span class="number">0</span>);</span><br><span class="line">                           newIntent.putExtra(HeavyWeightSwitcherActivity.KEY_CUR_APP,</span><br><span class="line">                                   hist.packageName);</span><br><span class="line">                           newIntent.putExtra(HeavyWeightSwitcherActivity.KEY_CUR_TASK,</span><br><span class="line">                                   hist.getTask().taskId);</span><br><span class="line">                       &#125;</span><br><span class="line">                       newIntent.putExtra(HeavyWeightSwitcherActivity.KEY_NEW_APP,</span><br><span class="line">                               aInfo.packageName);</span><br><span class="line">                       newIntent.setFlags(intent.getFlags());</span><br><span class="line">                       newIntent.setClassName(<span class="string">&quot;android&quot;</span>,</span><br><span class="line">                               HeavyWeightSwitcherActivity.class.getName());</span><br><span class="line">                       intent = newIntent;</span><br><span class="line">                       resolvedType = <span class="keyword">null</span>;</span><br><span class="line">                       caller = <span class="keyword">null</span>;</span><br><span class="line">                       callingUid = Binder.getCallingUid();</span><br><span class="line">                       callingPid = Binder.getCallingPid();</span><br><span class="line">                       componentSpecified = <span class="keyword">true</span>;</span><br><span class="line">                       rInfo = mSupervisor.resolveIntent(intent, <span class="keyword">null</span> <span class="comment">/*resolvedType*/</span>, userId,</span><br><span class="line">                               <span class="number">0</span> <span class="comment">/* matchFlags */</span>, computeResolveFilterUid(</span><br><span class="line">                                       callingUid, realCallingUid, mRequest.filterCallingUid));</span><br><span class="line">                       aInfo = rInfo != <span class="keyword">null</span> ? rInfo.activityInfo : <span class="keyword">null</span>;</span><br><span class="line">                       <span class="keyword">if</span> (aInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">                           aInfo = mService.getActivityInfoForUser(aInfo, userId);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">final</span> ActivityRecord[] outRecord = <span class="keyword">new</span> ActivityRecord[<span class="number">1</span>];</span><br><span class="line">           <span class="keyword">int</span> res = startActivity(caller, intent, ephemeralIntent, resolvedType, aInfo, rInfo,</span><br><span class="line">                   voiceSession, voiceInteractor, resultTo, resultWho, requestCode, callingPid,</span><br><span class="line">                   callingUid, callingPackage, realCallingPid, realCallingUid, startFlags, options,</span><br><span class="line">                   ignoreTargetSecurity, componentSpecified, outRecord, inTask, reason,</span><br><span class="line">                   allowPendingRemoteAnimationRegistryLookup, originatingPendingIntent);</span><br><span class="line"></span><br><span class="line">           Binder.restoreCallingIdentity(origId);</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (stack.mConfigWillChange) &#123;</span><br><span class="line">               <span class="comment">// If the caller also wants to switch to a new configuration,</span></span><br><span class="line">               <span class="comment">// do so now.  This allows a clean switch, as we are waiting</span></span><br><span class="line">               <span class="comment">// for the current activity to pause (so we will not destroy</span></span><br><span class="line">               <span class="comment">// it), and have not yet started the next activity.</span></span><br><span class="line">               mService.enforceCallingPermission(android.Manifest.permission.CHANGE_CONFIGURATION,</span><br><span class="line">                       <span class="string">&quot;updateConfiguration()&quot;</span>);</span><br><span class="line">               stack.mConfigWillChange = <span class="keyword">false</span>;</span><br><span class="line">               <span class="keyword">if</span> (DEBUG_CONFIGURATION) Slog.v(TAG_CONFIGURATION,</span><br><span class="line">                       <span class="string">&quot;Updating to new configuration after starting activity.&quot;</span>);</span><br><span class="line">               mService.updateConfigurationLocked(globalConfig, <span class="keyword">null</span>, <span class="keyword">false</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Notify ActivityMetricsLogger that the activity has launched. ActivityMetricsLogger</span></span><br><span class="line">           <span class="comment">// will then wait for the windows to be drawn and populate WaitResult.</span></span><br><span class="line">           mSupervisor.getActivityMetricsLogger().notifyActivityLaunched(res, outRecord[<span class="number">0</span>]);</span><br><span class="line">           <span class="keyword">if</span> (outResult != <span class="keyword">null</span>) &#123;</span><br><span class="line">               outResult.result = res;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">final</span> ActivityRecord r = outRecord[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">               <span class="keyword">switch</span>(res) &#123;</span><br><span class="line">                   <span class="keyword">case</span> START_SUCCESS: &#123;</span><br><span class="line">                       mSupervisor.mWaitingActivityLaunched.add(outResult);</span><br><span class="line">                       <span class="keyword">do</span> &#123;</span><br><span class="line">                           <span class="keyword">try</span> &#123;</span><br><span class="line">                               mService.wait();</span><br><span class="line">                           &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125; <span class="keyword">while</span> (outResult.result != START_TASK_TO_FRONT</span><br><span class="line">                               &amp;&amp; !outResult.timeout &amp;&amp; outResult.who == <span class="keyword">null</span>);</span><br><span class="line">                       <span class="keyword">if</span> (outResult.result == START_TASK_TO_FRONT) &#123;</span><br><span class="line">                           res = START_TASK_TO_FRONT;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">case</span> START_DELIVERED_TO_TOP: &#123;</span><br><span class="line">                       outResult.timeout = <span class="keyword">false</span>;</span><br><span class="line">                       outResult.who = r.realActivity;</span><br><span class="line">                       outResult.totalTime = <span class="number">0</span>;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">case</span> START_TASK_TO_FRONT: &#123;</span><br><span class="line">                       <span class="comment">// ActivityRecord may represent a different activity, but it should not be</span></span><br><span class="line">                       <span class="comment">// in the resumed state.</span></span><br><span class="line">                       <span class="keyword">if</span> (r.nowVisible &amp;&amp; r.isState(RESUMED)) &#123;</span><br><span class="line">                           outResult.timeout = <span class="keyword">false</span>;</span><br><span class="line">                           outResult.who = r.realActivity;</span><br><span class="line">                           outResult.totalTime = <span class="number">0</span>;</span><br><span class="line">                       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                           <span class="keyword">final</span> <span class="keyword">long</span> startTimeMs = SystemClock.uptimeMillis();</span><br><span class="line">                           mSupervisor.waitActivityVisible(r.realActivity, outResult, startTimeMs);</span><br><span class="line">                           <span class="comment">// Note: the timeout variable is not currently not ever set.</span></span><br><span class="line">                           <span class="keyword">do</span> &#123;</span><br><span class="line">                               <span class="keyword">try</span> &#123;</span><br><span class="line">                                   mService.wait();</span><br><span class="line">                               &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                               &#125;</span><br><span class="line">                           &#125; <span class="keyword">while</span> (!outResult.timeout &amp;&amp; outResult.who == <span class="keyword">null</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> res;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="1-3zygote-fork出应用进程"><a href="#1-3zygote-fork出应用进程" class="headerlink" title="1.3zygote fork出应用进程"></a>1.3zygote fork出应用进程</h3><p>这部分可以参考zygote部分</p><h1 id="2-应用启动流程断点调试"><a href="#2-应用启动流程断点调试" class="headerlink" title="2.应用启动流程断点调试"></a>2.应用启动流程断点调试</h1><p>启动DDMS调试工具,选中system_process进程</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111112552304.png" alt="image-20201111112552304"></p><p>开始调试</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111112623418.png" alt="image-20201111112623418"></p><p>根据前面分析，APP启动最终会调用AMS的startActivityAsUser函数：因此，这里就以startActivityAsUser为调试的起点。</p><p>这里以启动系统设置为例进行分析，点击系统设置图标，启动系统设置应用：</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111112959728.png" alt="image-20201111112959728"></p><p>进入AndroidStudio调试界面</p><p><img src="/images/AMS-03-%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/image-20201111113059664.png" alt="image-20201111113059664"></p><p>参数解析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">startActivityAsUser</span><span class="params">(IApplicationThread caller, //</span></span></span><br><span class="line"><span class="function"><span class="params">                                     String callingPackage,//由于是从Launcher发起，因此这里是</span></span></span><br><span class="line"><span class="function"><span class="params">                                     Intent intent, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     String resolvedType, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     IBinder resultTo, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     String resultWho, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     <span class="keyword">int</span> requestCode,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     <span class="keyword">int</span> startFlags, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     ProfilerInfo profilerInfo, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     Bundle bOptions, </span></span></span><br><span class="line"><span class="function"><span class="params">                                     <span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> startActivityAsUser(caller, callingPackage, intent, resolvedType, resultTo,</span><br><span class="line">                               resultWho, requestCode, startFlags, profilerInfo, bOptions, userId,</span><br><span class="line">                               <span class="keyword">true</span> <span class="comment">/*validateIncomingUser*/</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>IApplicationThread caller</strong>, //应用进程的代理IApplicationThread.stub.proxy<br>        <strong>String callingPackage</strong>,//由于是从Launcher发起，因此这里是com.android.car.carlauncher<br>        <strong>Intent intent</strong>, //Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.android.settings cmp=com.android.settings/.Settings }<br>        <strong>String resolvedType</strong>, //null<br>        <strong>IBinder resultTo</strong>, //<br>        <strong>String resultWho</strong>, //null<br>        <strong>int requestCode</strong>,//-1<br>        <strong>int startFlags</strong>, //0<br>        <strong>ProfilerInfo profilerInfo</strong>, //null<br>        <strong>Bundle bOptions</strong>, //null<br>        <strong>int userId</strong>//0</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-应用启动流程总览&quot;&gt;&lt;a href=&quot;#1-应用启动流程总览&quot; class=&quot;headerlink&quot; title=&quot;1.应用启动流程总览&quot;&gt;&lt;/a&gt;1.应用启动流程总览&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/AMS-03-%E5%BA%94%E7%</summary>
      
    
    
    
    <category term="AMS" scheme="http://example.com/categories/AMS/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>AMS-03-Launcher启动流程</title>
    <link href="http://example.com/2020/11/09/AMS-03-Launcher%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2020/11/09/AMS-03-Launcher%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</id>
    <published>2020-11-09T07:48:42.000Z</published>
    <updated>2020-11-10T12:32:06.641Z</updated>
    
    <content type="html"><![CDATA[<p>在AMS调用systemReady时，等整个系统准备完毕，可以启动Launcher服务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">startHomeActivityLocked(currentUserId, <span class="string">&quot;systemReady&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function">Intent <span class="title">getHomeIntent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//mTopAction：ACTION_MAIN 应用程序入口  </span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(mTopAction, mTopData != <span class="keyword">null</span> ? Uri.parse(mTopData) : <span class="keyword">null</span>);</span><br><span class="line">        intent.setComponent(mTopComponent);</span><br><span class="line">        intent.addFlags(Intent.FLAG_DEBUG_TRIAGED_MISSING);</span><br><span class="line">        <span class="keyword">if</span> (mFactoryTest != FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</span><br><span class="line">            intent.addCategory(Intent.CATEGORY_HOME);<span class="comment">//指定category为CATEGORY_HOME</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> intent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">startHomeActivityLocked</span><span class="params">(<span class="keyword">int</span> userId, String reason)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL</span><br><span class="line">                &amp;&amp; mTopAction == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// We are running in factory test mode, but unable to find</span></span><br><span class="line">            <span class="comment">// the factory test app, so just sit around displaying the</span></span><br><span class="line">            <span class="comment">// error message and don&#x27;t try to start anything.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Intent intent = getHomeIntent();</span><br><span class="line">        ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);</span><br><span class="line">        <span class="keyword">if</span> (aInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">            intent.setComponent(<span class="keyword">new</span> ComponentName(aInfo.applicationInfo.packageName, aInfo.name));</span><br><span class="line">            <span class="comment">// Don&#x27;t do this if the home app is currently being</span></span><br><span class="line">            <span class="comment">// instrumented.</span></span><br><span class="line">            aInfo = <span class="keyword">new</span> ActivityInfo(aInfo);</span><br><span class="line">            aInfo.applicationInfo = getAppInfoForUser(aInfo.applicationInfo, userId);</span><br><span class="line">            ProcessRecord app = getProcessRecordLocked(aInfo.processName,</span><br><span class="line">                    aInfo.applicationInfo.uid, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (app == <span class="keyword">null</span> || app.instr == <span class="keyword">null</span>) &#123;</span><br><span class="line">                intent.setFlags(intent.getFlags() | FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> resolvedUserId = UserHandle.getUserId(aInfo.applicationInfo.uid);</span><br><span class="line">                <span class="comment">// For ANR debugging to verify if the user activity is the one that actually</span></span><br><span class="line">                <span class="comment">// launched.</span></span><br><span class="line">                <span class="keyword">final</span> String myReason = reason + <span class="string">&quot;:&quot;</span> + userId + <span class="string">&quot;:&quot;</span> + resolvedUserId;</span><br><span class="line">                mActivityStartController.startHomeActivity(intent, aInfo, myReason);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Slog.wtf(TAG, <span class="string">&quot;No home screen found for &quot;</span> + intent, <span class="keyword">new</span> Throwable());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>1）先是为启动Intent设置了启动flag<br>        2）然后设置了一个<code>intent.addCategory(Intent.CATEGORY_HOME);</code><br>        3）再调用<code>mMainStack.startActivityLocked</code>方法，这里<code>Launcher</code>就启动起来了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在AMS调用systemReady时，等整个系统准备完毕，可以启动Launcher服务。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Android framework调试</title>
    <link href="http://example.com/2020/11/09/Android-framework%E8%B0%83%E8%AF%95/"/>
    <id>http://example.com/2020/11/09/Android-framework%E8%B0%83%E8%AF%95/</id>
    <published>2020-11-09T03:28:21.000Z</published>
    <updated>2020-11-10T12:32:18.100Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-编译生成android-ipr"><a href="#1-编译生成android-ipr" class="headerlink" title="1.编译生成android.ipr"></a>1.编译生成android.ipr</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm development/tools/idegen</span><br></pre></td></tr></table></figure><p>会生成一个jar包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">会生成一个jar包</span><br><span class="line">[100% 8&#x2F;8] out&#x2F;soong&#x2F;.bootstrap&#x2F;bin&#x2F;soong_build out&#x2F;soong&#x2F;build.ninja</span><br><span class="line">[100% 3&#x2F;3] Install: out&#x2F;host&#x2F;linux-x86&#x2F;framework&#x2F;idegen.jar</span><br></pre></td></tr></table></figure><p>在根目录运行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;development&#x2F;tools&#x2F;idegen&#x2F;idegen.sh</span><br></pre></td></tr></table></figure><h1 id="2-将源码导入Android-Studio中"><a href="#2-将源码导入Android-Studio中" class="headerlink" title="2.将源码导入Android Studio中"></a>2.将源码导入Android Studio中</h1><p>2.1 新建android project</p><p>2.2 在新工程中导入编译生成的android.ipr文件</p><h1 id="3-配置AndroidStudio来调试framework代码"><a href="#3-配置AndroidStudio来调试framework代码" class="headerlink" title="3.配置AndroidStudio来调试framework代码"></a>3.配置AndroidStudio来调试framework代码</h1><p>3.1 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-编译生成android-ipr&quot;&gt;&lt;a href=&quot;#1-编译生成android-ipr&quot; class=&quot;headerlink&quot; title=&quot;1.编译生成android.ipr&quot;&gt;&lt;/a&gt;1.编译生成android.ipr&lt;/h1&gt;&lt;figure class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AMS-SystemUi启动流程</title>
    <link href="http://example.com/2020/11/07/AMS-SystemUi%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2020/11/07/AMS-SystemUi%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</id>
    <published>2020-11-06T16:05:02.000Z</published>
    <updated>2020-11-10T12:31:28.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-startSystemUi"><a href="#1-startSystemUi" class="headerlink" title="1.startSystemUi"></a>1.startSystemUi</h1><p>在SystemServer的startOtherServices()函数中会调用startSystemUi启动SystemUi。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">startSystemUi</span><span class="params">(Context context, WindowManagerService windowManager)</span> </span>&#123;</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">    intent.setComponent(<span class="keyword">new</span> ComponentName(<span class="string">&quot;com.android.systemui&quot;</span>,</span><br><span class="line">                                          <span class="string">&quot;com.android.systemui.SystemUIService&quot;</span>));</span><br><span class="line">    intent.addFlags(Intent.FLAG_DEBUG_TRIAGED_MISSING);</span><br><span class="line">    context.startServiceAsUser(intent, UserHandle.SYSTEM);</span><br><span class="line">    windowManager.onSystemUiStarted();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以知道，startSystemUi()函数主要是通过intent来启动com.android.systemui.SystemUIService服务。</p><p>因此继续看SystemUIService服务的启动过程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    Slog.d(TAG, <span class="string">&quot;slj:SystemUIService: &quot;</span>);</span><br><span class="line">    ((SystemUIApplication) getApplication()).startServicesIfNeeded();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For debugging RescueParty</span></span><br><span class="line">    <span class="keyword">if</span> (Build.IS_DEBUGGABLE &amp;&amp; SystemProperties.getBoolean(<span class="string">&quot;debug.crash_sysui&quot;</span>, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Build.IS_DEBUGGABLE) &#123;</span><br><span class="line">        <span class="comment">// b/71353150 - looking for leaked binder proxies</span></span><br><span class="line">        BinderInternal.nSetBinderProxyCountEnabled(<span class="keyword">true</span>);</span><br><span class="line">        BinderInternal.nSetBinderProxyCountWatermarks(<span class="number">1000</span>,<span class="number">900</span>);</span><br><span class="line">        BinderInternal.setBinderProxyCountCallback(</span><br><span class="line">            <span class="keyword">new</span> BinderInternal.BinderProxyLimitListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLimitReached</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">                    Slog.w(SystemUIApplication.TAG,</span><br><span class="line">                           <span class="string">&quot;uid &quot;</span> + uid + <span class="string">&quot; sent too many Binder proxies to uid &quot;</span></span><br><span class="line">                           + Process.myUid());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, Dependency.get(Dependency.MAIN_HANDLER));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-startServicesIfNeeded"><a href="#2-startServicesIfNeeded" class="headerlink" title="2.startServicesIfNeeded"></a>2.startServicesIfNeeded</h2><p>在SystemUIService服务中最重要的是调用了下面这个函数：</p><p>((SystemUIApplication) getApplication()).startServicesIfNeeded();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startServicesIfNeeded</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 获取  SystemUI 所有服务类名，后面看看这个数组</span></span><br><span class="line">     String[] names = getResources().getStringArray(R.array.config_systemUIServiceComponents);</span><br><span class="line">     startServicesIfNeeded(names);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startServicesIfNeeded</span><span class="params">(String[] services)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mServicesStarted) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mServices = <span class="keyword">new</span> SystemUI[services.length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!mBootCompleted) &#123;</span><br><span class="line">        <span class="comment">// check to see if maybe it was already completed long before we began</span></span><br><span class="line">        <span class="comment">// see ActivityManagerService.finishBooting()</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;1&quot;</span>.equals(SystemProperties.get(<span class="string">&quot;sys.boot_completed&quot;</span>))) &#123;</span><br><span class="line">            mBootCompleted = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">&quot;BOOT_COMPLETED was already sent&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Log.v(TAG, <span class="string">&quot;Starting SystemUI services for user &quot;</span> +</span><br><span class="line">          Process.myUserHandle().getIdentifier() + <span class="string">&quot;.&quot;</span>);</span><br><span class="line">    TimingsTraceLog log = <span class="keyword">new</span> TimingsTraceLog(<span class="string">&quot;SystemUIBootTiming&quot;</span>,</span><br><span class="line">                                              Trace.TRACE_TAG_APP);</span><br><span class="line">    log.traceBegin(<span class="string">&quot;StartServices&quot;</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> N = services.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        String clsName = services[i];</span><br><span class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;loading: &quot;</span> + clsName);</span><br><span class="line">        log.traceBegin(<span class="string">&quot;StartServices&quot;</span> + clsName);</span><br><span class="line">        <span class="keyword">long</span> ti = System.currentTimeMillis();</span><br><span class="line">        Class cls;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过反射获取服务对象</span></span><br><span class="line">            cls = Class.forName(clsName);</span><br><span class="line">            mServices[i] = (SystemUI) cls.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException ex)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 填充对象信息并启动服务</span></span><br><span class="line">        mServices[i].mContext = <span class="keyword">this</span>;</span><br><span class="line">        mServices[i].mComponents = mComponents;</span><br><span class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;running: &quot;</span> + mServices[i]);</span><br><span class="line">        mServices[i].start();</span><br><span class="line">        log.traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Warn if initialization of component takes too long</span></span><br><span class="line">        ti = System.currentTimeMillis() - ti;</span><br><span class="line">        <span class="keyword">if</span> (ti &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">&quot;Initialization of &quot;</span> + cls.getName() + <span class="string">&quot; took &quot;</span> + ti + <span class="string">&quot; ms&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mBootCompleted) &#123;</span><br><span class="line">            mServices[i].onBootCompleted();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    log.traceEnd();</span><br><span class="line">    Dependency.get(PluginManager.class).addPluginListener(</span><br><span class="line">        <span class="keyword">new</span> PluginListener&lt;OverlayPlugin&gt;() &#123;</span><br><span class="line">            <span class="keyword">private</span> ArraySet&lt;OverlayPlugin&gt; mOverlays;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPluginConnected</span><span class="params">(OverlayPlugin plugin, Context pluginContext)</span> </span>&#123;</span><br><span class="line">                StatusBar statusBar = getComponent(StatusBar.class);</span><br><span class="line">                <span class="keyword">if</span> (statusBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    plugin.setup(statusBar.getStatusBarWindow(),</span><br><span class="line">                                 statusBar.getNavigationBarView());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Lazy init.</span></span><br><span class="line">                <span class="keyword">if</span> (mOverlays == <span class="keyword">null</span>) mOverlays = <span class="keyword">new</span> ArraySet&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (plugin.holdStatusBarOpen()) &#123;</span><br><span class="line">                    mOverlays.add(plugin);</span><br><span class="line">                    Dependency.get(StatusBarWindowManager.class).setStateListener(b -&gt;</span><br><span class="line">                                    mOverlays.forEach(o -&gt; o.setCollapseDesired(b)));</span><br><span class="line">                    Dependency.get(StatusBarWindowManager.class).setForcePluginOpen(</span><br><span class="line">                        mOverlays.size() != <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPluginDisconnected</span><span class="params">(OverlayPlugin plugin)</span> </span>&#123;</span><br><span class="line">                mOverlays.remove(plugin);</span><br><span class="line">                Dependency.get(StatusBarWindowManager.class).setForcePluginOpen(</span><br><span class="line">                    mOverlays.size() != <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, OverlayPlugin.class, <span class="keyword">true</span> <span class="comment">/* Allow multiple plugins */</span>);</span><br><span class="line"></span><br><span class="line">    mServicesStarted = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过分析源码，startServicesIfNeeded()函数主要做了以下几件事：</p><p>1）从R.array.config_systemUIServiceComponents中获取要启动的服务</p><p>2）通过反射获取服务对象</p><p>3）填充对象信息并启动服务</p><h2 id="2-1-config-systemUIServiceComponents"><a href="#2-1-config-systemUIServiceComponents" class="headerlink" title="2.1 config_systemUIServiceComponents"></a>2.1 config_systemUIServiceComponents</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string-array</span> <span class="attr">name</span>=<span class="string">&quot;config_systemUIServiceComponents&quot;</span> <span class="attr">translatable</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.Dependency<span class="tag">&lt;/<span class="name">item</span>&gt;</span> //处理依赖</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.util.NotificationChannels<span class="tag">&lt;/<span class="name">item</span>&gt;</span> //通知渠道</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.statusbar.CommandQueue$CommandQueueStart<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//状态栏跨进程消息处理</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.keyguard.KeyguardViewMediator<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//锁屏</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.recents.Recents<span class="tag">&lt;/<span class="name">item</span>&gt;</span>// 最近任务管理</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.volume.VolumeUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//音量调节</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.stackdivider.Divider<span class="tag">&lt;/<span class="name">item</span>&gt;</span>// 分屏</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.SystemBars<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//状态栏</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.usb.StorageNotification<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//USB 存储通知</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.power.PowerUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//电源事件</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.media.RingtonePlayer<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//铃声播放</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.keyboard.KeyboardUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//键盘</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.pip.PipUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//画中画</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.shortcut.ShortcutKeyDispatcher<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//快捷方式</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>@string/config_systemUIVendorServiceComponent<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//厂商相关定制</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.util.leak.GarbageMonitor$Service<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//垃圾监测器</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.LatencyTester<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//延迟测试仪</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.globalactions.GlobalActionsComponent<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//全局控制</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.ScreenDecorations<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//屏幕装饰</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.fingerprint.FingerprintDialogImpl<span class="tag">&lt;/<span class="name">item</span>&gt;</span>//指纹</span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.SliceBroadcastRelayHandler<span class="tag">&lt;/<span class="name">item</span>&gt;</span>// 切片广播</span><br><span class="line"><span class="tag">&lt;/<span class="name">string-array</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;config_systemUIVendorServiceComponent&quot;</span> <span class="attr">translatable</span>=<span class="string">&quot;false&quot;</span>&gt;</span>com.android.systemui.VendorServices<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-StatusBar的加载"><a href="#3-StatusBar的加载" class="headerlink" title="3.StatusBar的加载"></a>3.StatusBar的加载</h1><p>由于startServicesIfNeeded在加载服务时会启动上述所说的服务，因此，这里以StatusBar为例，分析StatusBar的加载流程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;item&gt;com.android.systemui.SystemBars&lt;&#x2F;item&gt;&#x2F;&#x2F;状态栏</span><br></pre></td></tr></table></figure><p>由于启动会调用SystemBars的start()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;start&quot;</span>);</span><br><span class="line">    createStatusBarFromConfig();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createStatusBarFromConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;createStatusBarFromConfig&quot;</span>);</span><br><span class="line">    <span class="comment">//这里是通过资源文件R.string.config_statusBarComponent，找到需要启动的StatusBar类的包名</span></span><br><span class="line">    <span class="keyword">final</span> String clsName = mContext.getString(R.string.config_statusBarComponent);</span><br><span class="line">    Log.d(TAG, <span class="string">&quot;createStatusBarFromConfig ---- &quot;</span> + clsName);</span><br><span class="line">    <span class="keyword">if</span> (clsName == <span class="keyword">null</span> || clsName.length() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> andLog(<span class="string">&quot;No status bar component configured&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Class&lt;?&gt; cls = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//通过反射的方式获取到StatusBar的类型</span></span><br><span class="line">        cls = mContext.getClassLoader().loadClass(clsName);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">        <span class="keyword">throw</span> andLog(<span class="string">&quot;Error loading status bar component: &quot;</span> + clsName, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//并且构建出StatusBar的实例</span></span><br><span class="line">        mStatusBar = (SystemUI) cls.newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">        <span class="keyword">throw</span> andLog(<span class="string">&quot;Error creating status bar component: &quot;</span> + clsName, t);</span><br><span class="line">    &#125;</span><br><span class="line">    mStatusBar.mContext = mContext;</span><br><span class="line">    mStatusBar.mComponents = mComponents;</span><br><span class="line">    <span class="comment">//调用StatusBar的start()方法，启动状态栏服务</span></span><br><span class="line">    mStatusBar.start();</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;started &quot;</span> + mStatusBar.getClass().getSimpleName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从日志也可以看出，启动的状态栏是com.android.systemui.statusbar.car.CarStatusBar</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">15</span>:<span class="number">40</span>:<span class="number">40</span>.<span class="number">663</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemUIService: loading: com.android.systemui.SystemBars</span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">15</span>:<span class="number">40</span>:<span class="number">40</span>.<span class="number">663</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemUIService: running: com.android.systemui.SystemBars@e5e0127</span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">15</span>:<span class="number">40</span>:<span class="number">40</span>.<span class="number">663</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemBars: <span class="built_in">start</span></span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">15</span>:<span class="number">40</span>:<span class="number">40</span>.<span class="number">664</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemBars: createStatusBarFromConfig</span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">15</span>:<span class="number">40</span>:<span class="number">40</span>.<span class="number">664</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemBars: createStatusBarFromConfig ---- com.android.systemui.statusbar.car.CarStatusBar</span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">07</span>:<span class="number">40</span>:<span class="number">42</span>.<span class="number">289</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemBars: started CarStatusBar</span><br><span class="line"><span class="number">2020</span>-<span class="number">11</span>-<span class="number">10</span> <span class="number">07</span>:<span class="number">40</span>:<span class="number">42</span>.<span class="number">289</span> <span class="number">2185</span>-<span class="number">2185</span>/? D/SystemUIBootTiming: StartServicescom.android.systemui.SystemBars took to complete: <span class="number">1165</span>ms</span><br></pre></td></tr></table></figure><h1 id="4-自定义StatusBar"><a href="#4-自定义StatusBar" class="headerlink" title="4.自定义StatusBar"></a>4.自定义StatusBar</h1><p>已经通过源码找到了如何启动状态栏，因此，就可以通过修改状态栏的入口服务，使用自定义的状态栏。</p><p>修改方式有两种：</p><p>1）直接在源码中修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里可以直接将自定义的状态栏的包名传进来</span></span><br><span class="line"><span class="keyword">final</span> String clsName = mContext.getString(R.string.config_statusBarComponent);</span><br></pre></td></tr></table></figure><p>2）修改value/config文件中修改config_statusBarComponent</p><p>修改配置文件的方式需要注意，由于系统中packages/services/Car/car_product/overlay/frameworks/base/packages/SystemUI/res/values也定义了config_statusBarComponent，且在packages.services.Car.car_product.build中car_base.mk有这样的定义PRODUCT_PACKAGE_OVERLAYS += packages/services/Car/car_product/overlay 会覆盖相同目录下的资源文件，因此修改系统systemUI下的value/config文件中config_statusBarComponent可能导致修改不生效。</p><h2 id="4-1-自定义StatusBar效果"><a href="#4-1-自定义StatusBar效果" class="headerlink" title="4.1 自定义StatusBar效果"></a>4.1 自定义StatusBar效果</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-startSystemUi&quot;&gt;&lt;a href=&quot;#1-startSystemUi&quot; class=&quot;headerlink&quot; title=&quot;1.startSystemUi&quot;&gt;&lt;/a&gt;1.startSystemUi&lt;/h1&gt;&lt;p&gt;在SystemServer的star</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>修改GitHub项目以及用户名称</title>
    <link href="http://example.com/2020/11/06/github%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2020/11/06/github%E9%85%8D%E7%BD%AE/</id>
    <published>2020-11-06T15:54:59.000Z</published>
    <updated>2020-11-06T15:57:04.341Z</updated>
    
    <content type="html"><![CDATA[<p>修改用户名：</p><p><a href="https://blog.csdn.net/qq_36667170/article/details/79067306">https://blog.csdn.net/qq_36667170/article/details/79067306</a></p><p>修改项目名称：</p><p><a href="https://blog.csdn.net/zht741322694/article/details/79508574">https://blog.csdn.net/zht741322694/article/details/79508574</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;修改用户名：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_36667170/article/details/79067306&quot;&gt;https://blog.csdn.net/qq_36667170/article/details/7906</summary>
      
    
    
    
    <category term="GitHub" scheme="http://example.com/categories/GitHub/"/>
    
    
    <category term="GitHub" scheme="http://example.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>AMS-启动流程-02-之构造函数</title>
    <link href="http://example.com/2020/11/06/AMS-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B-02-%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2020/11/06/AMS-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B-02-%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</id>
    <published>2020-11-06T02:39:59.000Z</published>
    <updated>2020-11-06T14:51:35.349Z</updated>
    
    <content type="html"><![CDATA[<p>由于AMS的构造函数内部的工作非常多，因此单独对AMS的构造函数进行分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Note: This method is invoked on the main thread but may need to attach various</span></span><br><span class="line">    <span class="comment">// handlers to other threads.  So take care to be explicit about the looper.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActivityManagerService</span><span class="params">(Context systemContext)</span> </span>&#123;</span><br><span class="line">        LockGuard.installLock(<span class="keyword">this</span>, LockGuard.INDEX_ACTIVITY);</span><br><span class="line">        mInjector = <span class="keyword">new</span> Injector();</span><br><span class="line">        mContext = systemContext;</span><br><span class="line"></span><br><span class="line">        mFactoryTest = FactoryTest.getMode();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取单例模式下的全局唯一ActivityThread 对象</span></span><br><span class="line">        mSystemThread = ActivityThread.currentActivityThread();</span><br><span class="line">        <span class="comment">//ui 线程 系统上下文</span></span><br><span class="line">        mUiContext = mSystemThread.getSystemUiContext();</span><br><span class="line"></span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;Memory class: &quot;</span> + ActivityManager.staticGetMemoryClass());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取当前上下文config_permissionReviewRequired配置参数</span></span><br><span class="line">        mPermissionReviewRequired = mContext.getResources().getBoolean(</span><br><span class="line">                com.android.internal.R.bool.config_permissionReviewRequired);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化ServiceThread对象</span></span><br><span class="line">        mHandlerThread = <span class="keyword">new</span> ServiceThread(TAG,</span><br><span class="line">                THREAD_PRIORITY_FOREGROUND, <span class="keyword">false</span> <span class="comment">/*allowIo*/</span>);</span><br><span class="line">        mHandlerThread.start();<span class="comment">//开启服务线程</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化MainHandler对象</span></span><br><span class="line">        mHandler = <span class="keyword">new</span> MainHandler(mHandlerThread.getLooper());</span><br><span class="line">        mUiHandler = mInjector.getUiHandler(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建mProcStartHandlerThread线程对象</span></span><br><span class="line">        mProcStartHandlerThread = <span class="keyword">new</span> ServiceThread(TAG + <span class="string">&quot;:procStart&quot;</span>,</span><br><span class="line">                THREAD_PRIORITY_FOREGROUND, <span class="keyword">false</span> <span class="comment">/* allowIo */</span>);</span><br><span class="line">        mProcStartHandlerThread.start();</span><br><span class="line">        </span><br><span class="line">        mProcStartHandler = <span class="keyword">new</span> Handler(mProcStartHandlerThread.getLooper());</span><br><span class="line"></span><br><span class="line">        mConstants = <span class="keyword">new</span> ActivityManagerConstants(<span class="keyword">this</span>, mHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* static; one-time init here */</span></span><br><span class="line">        <span class="keyword">if</span> (sKillHandler == <span class="keyword">null</span>) &#123;</span><br><span class="line">            sKillThread = <span class="keyword">new</span> ServiceThread(TAG + <span class="string">&quot;:kill&quot;</span>,</span><br><span class="line">                    THREAD_PRIORITY_BACKGROUND, <span class="keyword">true</span> <span class="comment">/* allowIo */</span>);</span><br><span class="line">            sKillThread.start();</span><br><span class="line">            sKillHandler = <span class="keyword">new</span> KillHandler(sKillThread.getLooper());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mFgBroadcastQueue = <span class="keyword">new</span> BroadcastQueue(<span class="keyword">this</span>, mHandler,</span><br><span class="line">                <span class="string">&quot;foreground&quot;</span>, BROADCAST_FG_TIMEOUT, <span class="keyword">false</span>);</span><br><span class="line">        mBgBroadcastQueue = <span class="keyword">new</span> BroadcastQueue(<span class="keyword">this</span>, mHandler,</span><br><span class="line">                <span class="string">&quot;background&quot;</span>, BROADCAST_BG_TIMEOUT, <span class="keyword">true</span>);</span><br><span class="line">        mBroadcastQueues[<span class="number">0</span>] = mFgBroadcastQueue;</span><br><span class="line">        mBroadcastQueues[<span class="number">1</span>] = mBgBroadcastQueue;</span><br><span class="line"></span><br><span class="line">        mServices = <span class="keyword">new</span> ActiveServices(<span class="keyword">this</span>);</span><br><span class="line">        mProviderMap = <span class="keyword">new</span> ProviderMap(<span class="keyword">this</span>);</span><br><span class="line">        mAppErrors = <span class="keyword">new</span> AppErrors(mUiContext, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        File dataDir = Environment.getDataDirectory();</span><br><span class="line">        File systemDir = <span class="keyword">new</span> File(dataDir, <span class="string">&quot;system&quot;</span>);</span><br><span class="line">        systemDir.mkdirs();</span><br><span class="line"></span><br><span class="line">        mAppWarnings = <span class="keyword">new</span> AppWarnings(<span class="keyword">this</span>, mUiContext, mHandler, mUiHandler, systemDir);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Move creation of battery stats service outside of activity manager service.</span></span><br><span class="line">        mBatteryStatsService = <span class="keyword">new</span> BatteryStatsService(systemContext, systemDir, mHandler);</span><br><span class="line">        mBatteryStatsService.getActiveStatistics().readLocked();</span><br><span class="line">        mBatteryStatsService.scheduleWriteToDisk();</span><br><span class="line">        mOnBattery = DEBUG_POWER ? <span class="keyword">true</span></span><br><span class="line">                : mBatteryStatsService.getActiveStatistics().getIsOnBattery();</span><br><span class="line">        mBatteryStatsService.getActiveStatistics().setCallback(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建进程状态服务，监听进程转发服务</span></span><br><span class="line">        mProcessStats = <span class="keyword">new</span> ProcessStatsService(<span class="keyword">this</span>, <span class="keyword">new</span> File(systemDir, <span class="string">&quot;procstats&quot;</span>));</span><br><span class="line"></span><br><span class="line">        mAppOpsService = mInjector.getAppOpsService(<span class="keyword">new</span> File(systemDir, <span class="string">&quot;appops.xml&quot;</span>), mHandler);</span><br><span class="line"></span><br><span class="line">        mGrantFile = <span class="keyword">new</span> AtomicFile(<span class="keyword">new</span> File(systemDir, <span class="string">&quot;urigrants.xml&quot;</span>), <span class="string">&quot;uri-grants&quot;</span>);</span><br><span class="line"></span><br><span class="line">        mUserController = <span class="keyword">new</span> UserController(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mVrController = <span class="keyword">new</span> VrController(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        GL_ES_VERSION = SystemProperties.getInt(<span class="string">&quot;ro.opengles.version&quot;</span>,</span><br><span class="line">            ConfigurationInfo.GL_ES_VERSION_UNDEFINED);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SystemProperties.getInt(<span class="string">&quot;sys.use_fifo_ui&quot;</span>, <span class="number">0</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            mUseFifoUiScheduling = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mTrackingAssociations = <span class="string">&quot;1&quot;</span>.equals(SystemProperties.get(<span class="string">&quot;debug.track-associations&quot;</span>));</span><br><span class="line">        mTempConfig.setToDefaults();</span><br><span class="line">        mTempConfig.setLocales(LocaleList.getDefault());</span><br><span class="line">        mConfigurationSeq = mTempConfig.seq = <span class="number">1</span>;</span><br><span class="line">        mStackSupervisor = createStackSupervisor();</span><br><span class="line">        mStackSupervisor.onConfigurationChanged(mTempConfig);</span><br><span class="line">        mKeyguardController = mStackSupervisor.getKeyguardController();</span><br><span class="line">        mCompatModePackages = <span class="keyword">new</span> CompatModePackages(<span class="keyword">this</span>, systemDir, mHandler);</span><br><span class="line">        mIntentFirewall = <span class="keyword">new</span> IntentFirewall(<span class="keyword">new</span> IntentFirewallInterface(), mHandler);</span><br><span class="line">        mTaskChangeNotificationController =</span><br><span class="line">                <span class="keyword">new</span> TaskChangeNotificationController(<span class="keyword">this</span>, mStackSupervisor, mHandler);</span><br><span class="line">        mActivityStartController = <span class="keyword">new</span> ActivityStartController(<span class="keyword">this</span>);</span><br><span class="line">        mRecentTasks = createRecentTasks();</span><br><span class="line">        mStackSupervisor.setRecentTasks(mRecentTasks);</span><br><span class="line">        mLockTaskController = <span class="keyword">new</span> LockTaskController(mContext, mStackSupervisor, mHandler);</span><br><span class="line">        mLifecycleManager = <span class="keyword">new</span> ClientLifecycleManager();</span><br><span class="line"></span><br><span class="line">        mProcessCpuThread = <span class="keyword">new</span> Thread(<span class="string">&quot;CpuTracker&quot;</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (mProcessCpuTracker) &#123;</span><br><span class="line">                    mProcessCpuInitLatch.countDown();</span><br><span class="line">                    mProcessCpuTracker.init();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">                                <span class="keyword">final</span> <span class="keyword">long</span> now = SystemClock.uptimeMillis();</span><br><span class="line">                                <span class="keyword">long</span> nextCpuDelay = (mLastCpuTime.get()+MONITOR_CPU_MAX_TIME)-now;</span><br><span class="line">                                <span class="keyword">long</span> nextWriteDelay = (mLastWriteTime+BATTERY_STATS_TIME)-now;</span><br><span class="line">                                <span class="comment">//Slog.i(TAG, &quot;Cpu delay=&quot; + nextCpuDelay</span></span><br><span class="line">                                <span class="comment">//        + &quot;, write delay=&quot; + nextWriteDelay);</span></span><br><span class="line">                                <span class="keyword">if</span> (nextWriteDelay &lt; nextCpuDelay) &#123;</span><br><span class="line">                                    nextCpuDelay = nextWriteDelay;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (nextCpuDelay &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    mProcessCpuMutexFree.set(<span class="keyword">true</span>);</span><br><span class="line">                                    <span class="keyword">this</span>.wait(nextCpuDelay);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                        updateCpuStatsNow();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        Slog.e(TAG, <span class="string">&quot;Unexpected exception collecting process stats&quot;</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        mHiddenApiBlacklist = <span class="keyword">new</span> HiddenApiSettings(mHandler, mContext);</span><br><span class="line"></span><br><span class="line">        Watchdog.getInstance().addMonitor(<span class="keyword">this</span>);</span><br><span class="line">        Watchdog.getInstance().addThread(mHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind background thread to little cores</span></span><br><span class="line">        <span class="comment">// this is expected to fail inside of framework tests because apps can&#x27;t touch cpusets directly</span></span><br><span class="line">        <span class="comment">// make sure we&#x27;ve already adjusted system_server&#x27;s internal view of itself first</span></span><br><span class="line">        updateOomAdjLocked();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Process.setThreadGroupAndCpuset(BackgroundThread.get().getThreadId(),</span><br><span class="line">                    Process.THREAD_GROUP_BG_NONINTERACTIVE);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">&quot;Setting background thread cpuset failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于AMS的构造函数内部的工作非常多，因此单独对AMS的构造函数进行分析：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</summary>
      
    
    
    
    <category term="AMS" scheme="http://example.com/categories/AMS/"/>
    
    
  </entry>
  
  <entry>
    <title>代码下载与编译</title>
    <link href="http://example.com/2020/11/06/%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD%E4%B8%8E%E7%BC%96%E8%AF%91/"/>
    <id>http://example.com/2020/11/06/%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD%E4%B8%8E%E7%BC%96%E8%AF%91/</id>
    <published>2020-11-06T02:07:05.000Z</published>
    <updated>2020-11-10T05:55:29.376Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-repo-与-git基础"><a href="#1-repo-与-git基础" class="headerlink" title="1.repo 与 git基础"></a>1.repo 与 git基础</h1><h1 id="2-代码下载"><a href="#2-代码下载" class="headerlink" title="2.代码下载"></a>2.代码下载</h1><p>2.1 配置repo</p><p>使用公司的repo</p><p>2.1 初始化repo</p><p>repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-9.0.0_r33</p><p>2.3 同步代码</p><p>repo sync –verfi –no-clone-bundle</p><h1 id="3-编译环境搭建"><a href="#3-编译环境搭建" class="headerlink" title="3.编译环境搭建"></a>3.编译环境搭建</h1><h1 id="4-代码编译"><a href="#4-代码编译" class="headerlink" title="4.代码编译"></a>4.代码编译</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">source</span> <span class="title">build</span>/<span class="title">envsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">car</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">arm64</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">armv7</span>-<span class="title">a</span>-<span class="title">neon</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">mips64</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">mips</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">x86_64</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">mini</span>-<span class="title">emulator</span>-<span class="title">x86</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">generic</span>/<span class="title">uml</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">google</span>/<span class="title">crosshatch</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">google</span>/<span class="title">cuttlefish</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">google</span>/<span class="title">marlin</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">google</span>/<span class="title">muskie</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">google</span>/<span class="title">taimen</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">device</span>/<span class="title">linaro</span>/<span class="title">hikey</span>/<span class="title">vendorsetup.sh</span></span></span><br><span class="line"><span class="function"><span class="title">including</span> <span class="title">sdk</span>/<span class="title">bash_completion</span>/<span class="title">adb.bash</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">lunch</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">You</span>&#x27;<span class="title">re</span> <span class="title">building</span> <span class="title">on</span> <span class="title">Linux</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Lunch</span> <span class="title">menu</span>... <span class="title">pick</span> <span class="title">a</span> <span class="title">combo</span>:</span></span><br><span class="line"><span class="function">     1. <span class="title">aosp_arm</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     2. <span class="title">aosp_arm64</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     3. <span class="title">aosp_mips</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     4. <span class="title">aosp_mips64</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     5. <span class="title">aosp_x86</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     6. <span class="title">aosp_x86_64</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     7. <span class="title">aosp_car_arm</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     8. <span class="title">aosp_car_arm64</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     9. <span class="title">aosp_car_x86</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     10. <span class="title">aosp_car_x86_64</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     11. <span class="title">mini_emulator_arm64</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     12. <span class="title">m_e_arm</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     13. <span class="title">m_e_mips64</span>-<span class="title">eng</span></span></span><br><span class="line"><span class="function">     14. <span class="title">m_e_mips</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     15. <span class="title">mini_emulator_x86_64</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     16. <span class="title">mini_emulator_x86</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     17. <span class="title">uml</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     18. <span class="title">aosp_crosshatch</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     19. <span class="title">aosp_blueline</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     20. <span class="title">aosp_cf_x86_auto</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     21. <span class="title">aosp_cf_x86_phone</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     22. <span class="title">aosp_cf_x86_tablet</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     23. <span class="title">aosp_cf_x86_tablet_3g</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     24. <span class="title">aosp_cf_x86_tv</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     25. <span class="title">aosp_cf_x86_wear</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     26. <span class="title">aosp_cf_x86_64_auto</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     27. <span class="title">aosp_cf_x86_64_phone</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     28. <span class="title">aosp_cf_x86_64_tablet</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     29. <span class="title">aosp_cf_x86_64_tablet_3g</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     30. <span class="title">aosp_cf_x86_64_tv</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     31. <span class="title">aosp_cf_x86_64_wear</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     32. <span class="title">cf_x86_auto</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function"> 33. <span class="title">cf_x86_phone</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     34. <span class="title">cf_x86_tablet</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     35. <span class="title">cf_x86_tablet_3g</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     36. <span class="title">cf_x86_tv</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     37. <span class="title">cf_x86_wear</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     38. <span class="title">cf_x86_64_phone</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     39. <span class="title">cf_x86_64_tablet</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     40. <span class="title">cf_x86_64_tablet_3g</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     41. <span class="title">cf_x86_64_tv</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     42. <span class="title">cf_x86_64_wear</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     43. <span class="title">aosp_marlin</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     44. <span class="title">aosp_marlin_svelte</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     45. <span class="title">aosp_sailfish</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     46. <span class="title">aosp_walleye</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     47. <span class="title">aosp_walleye_test</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     48. <span class="title">aosp_taimen</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     49. <span class="title">hikey</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     50. <span class="title">hikey64_only</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function">     51. <span class="title">hikey960</span>-<span class="title">userdebug</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Which</span> <span class="title">would</span> <span class="title">you</span> <span class="title">like</span>? [<span class="title">aosp_arm</span>-<span class="title">eng</span>] 10</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">============================================</span></span><br><span class="line"><span class="function"><span class="title">PLATFORM_VERSION_CODENAME</span>=<span class="title">REL</span></span></span><br><span class="line"><span class="function"><span class="title">PLATFORM_VERSION</span>=9</span></span><br><span class="line"><span class="function"><span class="title">TARGET_PRODUCT</span>=<span class="title">aosp_car_x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_BUILD_VARIANT</span>=<span class="title">userdebug</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_BUILD_TYPE</span>=<span class="title">release</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_ARCH</span>=<span class="title">x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_ARCH_VARIANT</span>=<span class="title">x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_2ND_ARCH</span>=<span class="title">x86</span></span></span><br><span class="line"><span class="function"><span class="title">TARGET_2ND_ARCH_VARIANT</span>=<span class="title">x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_ARCH</span>=<span class="title">x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_2ND_ARCH</span>=<span class="title">x86</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_OS</span>=<span class="title">linux</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_OS_EXTRA</span>=<span class="title">Linux</span>-5.4.0-52-<span class="title">generic</span>-<span class="title">x86_64</span>-<span class="title">Ubuntu</span>-18.04.4-<span class="title">LTS</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_CROSS_OS</span>=<span class="title">windows</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_CROSS_ARCH</span>=<span class="title">x86</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_CROSS_2ND_ARCH</span>=<span class="title">x86_64</span></span></span><br><span class="line"><span class="function"><span class="title">HOST_BUILD_TYPE</span>=<span class="title">release</span></span></span><br><span class="line"><span class="function"><span class="title">BUILD_ID</span>=<span class="title">PQ2A</span>.190205.003</span></span><br><span class="line"><span class="function"><span class="title">OUT_DIR</span>=<span class="title">out</span></span></span><br><span class="line"><span class="function">============================================</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>make -j8进行编译</p><p>生成的img:</p><p>Target vendor fs image: out/target/product/generic_x86_64/vendor.img</p><p>Install system fs image: out/target/product/generic_x86_64/system.img</p><h1 id="5-运行模拟器"><a href="#5-运行模拟器" class="headerlink" title="5.运行模拟器"></a>5.运行模拟器</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">emulator</span> -<span class="title">gpu</span> <span class="title">off</span></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">crash</span> <span class="title">service</span> <span class="title">executable</span> /<span class="title">home</span>/<span class="title">gacrnd</span>/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>/<span class="title">prebuilts</span>/<span class="title">android</span>-<span class="title">emulator</span>/<span class="title">linux</span>-<span class="title">x86_64</span>/<span class="title">emulator64</span>-<span class="title">crash</span>-<span class="title">service</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">system</span> <span class="title">partition</span> <span class="title">size</span> <span class="title">adjusted</span> <span class="title">to</span> <span class="title">match</span> <span class="title">image</span> <span class="title">file</span> (2562 <span class="title">MB</span> &gt; 800 <span class="title">MB</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">QXcbConnection</span>: <span class="title">Failed</span> <span class="title">to</span> <span class="title">initialize</span> <span class="title">XRandr</span></span></span><br><span class="line"><span class="function"><span class="title">Qt</span>: <span class="title">XKEYBOARD</span> <span class="title">extension</span> <span class="title">not</span> <span class="title">present</span> <span class="title">on</span> <span class="title">the</span> <span class="title">X</span> <span class="title">server</span>.</span></span><br><span class="line"><span class="function"><span class="title">Falling</span> <span class="title">back</span> <span class="title">to</span> <span class="title">using</span> <span class="title">screens</span> <span class="title">root_visual</span>.</span></span><br><span class="line"><span class="function"><span class="title">Your</span> <span class="title">emulator</span> <span class="title">is</span> <span class="title">out</span> <span class="title">of</span> <span class="title">date</span>, <span class="title">please</span> <span class="title">update</span> <span class="title">by</span> <span class="title">launching</span> <span class="title">Android</span> <span class="title">Studio</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> - <span class="title">Start</span> <span class="title">Android</span> <span class="title">Studio</span></span></span><br><span class="line"><span class="function"> - <span class="title">Select</span> <span class="title">menu</span> &quot;<span class="title">Tools</span> &gt; <span class="title">Android</span> &gt; <span class="title">SDK</span> <span class="title">Manager</span>&quot;</span></span><br><span class="line"><span class="function"> - <span class="title">Click</span> &quot;<span class="title">SDK</span> <span class="title">Tools</span>&quot; <span class="title">tab</span></span></span><br><span class="line"><span class="function"> - <span class="title">Check</span> &quot;<span class="title">Android</span> <span class="title">Emulator</span>&quot; <span class="title">checkbox</span></span></span><br><span class="line"><span class="function"> - <span class="title">Click</span> &quot;<span class="title">OK</span>&quot;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">INFO</span>: <span class="title">boot</span> <span class="title">completed</span></span></span><br></pre></td></tr></table></figure><p>启动模拟器并输出日志：可以创建一个启动模拟器的脚本，直接运行启动模拟器：emulator.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 &#x2F;dev&#x2F;kvm</span><br><span class="line">emulator -gpu off -skin 1920x720 -shell -logcat d #-skin 1920x720配置屏幕的分辨率</span><br><span class="line">#emulator -shell -skin hvga -scale 0.9 -system system.img -sdcard sdcard.img -ramdisk ramdisk.img -data userdata.img -show-kernel -logcat d</span><br></pre></td></tr></table></figure><h1 id="6-错误处理"><a href="#6-错误处理" class="headerlink" title="6.错误处理"></a>6.错误处理</h1><h2 id="6-1VNDK-错误"><a href="#6-1VNDK-错误" class="headerlink" title="6.1VNDK 错误"></a>6.1VNDK 错误</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">error: <span class="title">VNDK</span> <span class="title">library</span>: <span class="title">libvixl</span>-<span class="title">arm</span>&#x27;<span class="title">s</span> <span class="title">ABI</span> <span class="title">has</span> <span class="title">INCOMPATIBLE</span> <span class="title">CHANGES</span> <span class="title">Please</span> <span class="title">check</span> <span class="title">compatiblity</span> <span class="title">report</span> <span class="title">at</span> : <span class="title">out</span>/<span class="title">soong</span>/.<span class="title">intermediates</span>/<span class="title">external</span>/<span class="title">vixl</span>/<span class="title">libvixl</span>-<span class="title">arm</span>/<span class="title">android_x86_64_vendor_shared</span>/<span class="title">libvixl</span>-<span class="title">arm.so.abidiff</span></span></span><br></pre></td></tr></table></figure><p>这个是Android8以后加入Treble框架引起的，可以参考VNDK：</p><p><a href="https://www.cnblogs.com/blogs-of-lxl/p/11232754.html">https://www.cnblogs.com/blogs-of-lxl/p/11232754.html</a></p><p><a href="https://source.android.google.cn/devices/architecture/vndk">https://source.android.google.cn/devices/architecture/vndk</a></p><p><strong>解决方法：</strong><a href="https://www.cnblogs.com/zongfanstudy/p/13791070.html">https://www.cnblogs.com/zongfanstudy/p/13791070.html</a></p><h2 id="6-2-运行模拟器报错"><a href="#6-2-运行模拟器报错" class="headerlink" title="6.2 运行模拟器报错"></a>6.2 运行模拟器报错</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">emulator</span></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">crash</span> <span class="title">service</span> <span class="title">executable</span> /<span class="title">home</span>/<span class="title">gacrnd</span>/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>/<span class="title">prebuilts</span>/<span class="title">android</span>-<span class="title">emulator</span>/<span class="title">linux</span>-<span class="title">x86_64</span>/<span class="title">emulator64</span>-<span class="title">crash</span>-<span class="title">service</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">system</span> <span class="title">partition</span> <span class="title">size</span> <span class="title">adjusted</span> <span class="title">to</span> <span class="title">match</span> <span class="title">image</span> <span class="title">file</span> (2562 <span class="title">MB</span> &gt; 800 <span class="title">MB</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">cannot</span> <span class="title">read</span> <span class="title">adb</span> <span class="title">public</span> <span class="title">key</span> <span class="title">file</span>: /<span class="title">home</span>/<span class="title">gacrnd</span>/.<span class="title">android</span>/<span class="title">adbkey.pub</span></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">ERROR</span>: <span class="title">x86_64</span> <span class="title">emulation</span> <span class="title">currently</span> <span class="title">requires</span> <span class="title">hardware</span> <span class="title">acceleration</span>!</span></span><br><span class="line"><span class="function"><span class="title">Please</span> <span class="title">ensure</span> <span class="title">KVM</span> <span class="title">is</span> <span class="title">properly</span> <span class="title">installed</span> <span class="title">and</span> <span class="title">usable</span>.</span></span><br><span class="line"><span class="function"><span class="title">CPU</span> <span class="title">acceleration</span> <span class="title">status</span>: <span class="title">This</span> <span class="title">user</span> <span class="title">doesn</span>&#x27;<span class="title">t</span> <span class="title">have</span> <span class="title">permissions</span> <span class="title">to</span> <span class="title">use</span> <span class="title">KVM</span> (/<span class="title">dev</span>/<span class="title">kvm</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">emulator</span></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">crash</span> <span class="title">service</span> <span class="title">executable</span> /<span class="title">home</span>/<span class="title">gacrnd</span>/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>/<span class="title">prebuilts</span>/<span class="title">android</span>-<span class="title">emulator</span>/<span class="title">linux</span>-<span class="title">x86_64</span>/<span class="title">emulator64</span>-<span class="title">crash</span>-<span class="title">service</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">WARNING</span>: <span class="title">system</span> <span class="title">partition</span> <span class="title">size</span> <span class="title">adjusted</span> <span class="title">to</span> <span class="title">match</span> <span class="title">image</span> <span class="title">file</span> (2562 <span class="title">MB</span> &gt; 800 <span class="title">MB</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">QXcbConnection</span>: <span class="title">Failed</span> <span class="title">to</span> <span class="title">initialize</span> <span class="title">XRandr</span></span></span><br><span class="line"><span class="function"><span class="title">Qt</span>: <span class="title">XKEYBOARD</span> <span class="title">extension</span> <span class="title">not</span> <span class="title">present</span> <span class="title">on</span> <span class="title">the</span> <span class="title">X</span> <span class="title">server</span>.</span></span><br><span class="line"><span class="function"><span class="title">getGLES2ExtensionString</span>: <span class="title">Could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">GLES</span> 2.<span class="title">x</span> <span class="title">config</span>!</span></span><br><span class="line"><span class="function"><span class="title">Failed</span> <span class="title">to</span> <span class="title">obtain</span> <span class="title">GLES</span> 2.<span class="title">x</span> <span class="title">extensions</span> <span class="title">string</span>!</span></span><br><span class="line"><span class="function"><span class="title">Could</span> <span class="title">not</span> <span class="title">initialize</span> <span class="title">emulated</span> <span class="title">framebuffer</span></span></span><br><span class="line"><span class="function"><span class="title">emulator</span>: <span class="title">ERROR</span>: <span class="title">Could</span> <span class="title">not</span> <span class="title">initialize</span> <span class="title">OpenglES</span> <span class="title">emulation</span>, <span class="title">use</span> &#x27;-<span class="title">gpu</span> <span class="title">off</span>&#x27; <span class="title">to</span> <span class="title">disable</span> <span class="title">it</span>.</span></span><br><span class="line"><span class="function"><span class="title">Segmentation</span> <span class="title">fault</span> (<span class="title">core</span> <span class="title">dumped</span>)</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>解决：<a href="https://blog.csdn.net/gezi322/article/details/108468255">https://blog.csdn.net/gezi322/article/details/108468255</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$<span class="title">sudo</span> <span class="title">apt</span>-<span class="title">get</span> <span class="title">install</span> <span class="title">qemu</span>-<span class="title">kvm</span> <span class="title">libvirt</span>-<span class="title">bin</span> <span class="title">ubuntu</span>-<span class="title">vm</span>-<span class="title">builder</span> <span class="title">bridge</span>-<span class="title">utils</span></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$<span class="title">sudo</span> <span class="title">adduser</span> `<span class="title">id</span> -<span class="title">un</span>` <span class="title">libvirtd</span></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$<span class="title">sudo</span> <span class="title">adduser</span> `<span class="title">id</span> -<span class="title">un</span>` <span class="title">kvm</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$<span class="title">sudo</span> <span class="title">kvm</span>-<span class="title">ok</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$<span class="title">sudo</span> <span class="title">chmod</span> -<span class="title">R</span> 777 /<span class="title">dev</span>/<span class="title">kvm</span></span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">emulator</span> -<span class="title">gpu</span> <span class="title">off</span></span></span><br></pre></td></tr></table></figure><p>总结来说：</p><p>1）首先检查电脑是否支持虚拟化</p><p>2）然后检查模拟器是否安装</p><p>3）最后检查模拟器的权限是否足够</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gacrnd@gacrnd:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">sudo</span> <span class="title">apt</span>-<span class="title">get</span> <span class="title">install</span> <span class="title">qemu</span>-<span class="title">kvm</span> <span class="title">cpu</span>-<span class="title">checker</span></span></span><br><span class="line"><span class="function"><span class="title">Reading</span> <span class="title">package</span> <span class="title">lists</span>... <span class="title">Done</span></span></span><br><span class="line"><span class="function"><span class="title">Building</span> <span class="title">dependency</span> <span class="title">tree</span>       </span></span><br><span class="line"><span class="function"><span class="title">Reading</span> <span class="title">state</span> <span class="title">information</span>... <span class="title">Done</span></span></span><br><span class="line"><span class="function"><span class="title">cpu</span>-<span class="title">checker</span> <span class="title">is</span> <span class="title">already</span> <span class="title">the</span> <span class="title">newest</span> <span class="title">version</span> (0.7-0<span class="title">ubuntu7</span>).</span></span><br><span class="line"><span class="function"><span class="title">cpu</span>-<span class="title">checker</span> <span class="title">set</span> <span class="title">to</span> <span class="title">manually</span> <span class="title">installed</span>.</span></span><br><span class="line"><span class="function"><span class="title">qemu</span>-<span class="title">kvm</span> <span class="title">is</span> <span class="title">already</span> <span class="title">the</span> <span class="title">newest</span> <span class="title">version</span> (1:2.11+<span class="title">dfsg</span>-1<span class="title">ubuntu7</span>.33).</span></span><br><span class="line"><span class="function"><span class="title">The</span> <span class="title">following</span> <span class="title">packages</span> <span class="title">were</span> <span class="title">automatically</span> <span class="title">installed</span> <span class="title">and</span> <span class="title">are</span> <span class="title">no</span> <span class="title">longer</span> <span class="title">required</span>:</span></span><br><span class="line"><span class="function">  <span class="title">linux</span>-<span class="title">hwe</span>-5.4-<span class="title">headers</span>-5.4.0-42 <span class="title">linux</span>-<span class="title">hwe</span>-5.4-<span class="title">headers</span>-5.4.0-45 <span class="title">linux</span>-<span class="title">hwe</span>-5.4-<span class="title">headers</span>-5.4.0-47 <span class="title">linux</span>-<span class="title">hwe</span>-5.4-<span class="title">headers</span>-5.4.0-48 <span class="title">python</span>-<span class="title">kerberos</span></span></span><br><span class="line"><span class="function"><span class="title">Use</span> &#x27;<span class="title">sudo</span> <span class="title">apt</span> <span class="title">autoremove</span>&#x27; <span class="title">to</span> <span class="title">remove</span> <span class="title">them</span>.</span></span><br><span class="line"><span class="function">0 <span class="title">upgraded</span>, 0 <span class="title">newly</span> <span class="title">installed</span>, 0 <span class="title">to</span> <span class="title">remove</span> <span class="title">and</span> 128 <span class="title">not</span> <span class="title">upgraded</span>.</span></span><br><span class="line"><span class="function"><span class="title">gacrnd</span>@<span class="title">gacrnd</span>:~/<span class="title">songlingjie</span>/<span class="title">AndroidP</span>/<span class="title">AOSP</span>$ <span class="title">kvm</span>-<span class="title">ok</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>: /<span class="title">dev</span>/<span class="title">kvm</span> <span class="title">exists</span></span></span><br><span class="line"><span class="function"><span class="title">KVM</span> <span class="title">acceleration</span> <span class="title">can</span> <span class="title">be</span> <span class="title">used</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-repo-与-git基础&quot;&gt;&lt;a href=&quot;#1-repo-与-git基础&quot; class=&quot;headerlink&quot; title=&quot;1.repo 与 git基础&quot;&gt;&lt;/a&gt;1.repo 与 git基础&lt;/h1&gt;&lt;h1 id=&quot;2-代码下载&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="android系统" scheme="http://example.com/categories/android%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>AMS-启动流程-01</title>
    <link href="http://example.com/2020/11/05/AMS-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B-01/"/>
    <id>http://example.com/2020/11/05/AMS-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B-01/</id>
    <published>2020-11-05T05:38:01.000Z</published>
    <updated>2020-11-10T05:54:37.940Z</updated>
    
    <content type="html"><![CDATA[<p>当zygotefork出SystemServer后，便开始了Java世界。</p><p>SystemServer会启动一系列的系统服务，包括AMS、WMS、PKMS。</p><p>本文主要分析，SystemServer是如何启动AMS。</p><h1 id="1-SystemServer入口"><a href="#1-SystemServer入口" class="headerlink" title="1.SystemServer入口"></a>1.SystemServer入口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The main entry point from zygote.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SystemServer().run();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            traceBeginAndSlog(<span class="string">&quot;InitBeforeStartServices&quot;</span>);</span><br><span class="line">            <span class="comment">// If a device&#x27;s clock is before 1970 (before 0), a lot of</span></span><br><span class="line">            <span class="comment">// APIs crash dealing with negative numbers, notably</span></span><br><span class="line">            <span class="comment">// java.io.File#setLastModified, so instead we fake it and</span></span><br><span class="line">            <span class="comment">// hope that time from cell towers or NTP fixes it shortly.</span></span><br><span class="line">            <span class="keyword">if</span> (System.currentTimeMillis() &lt; EARLIEST_SUPPORTED_TIME) &#123;</span><br><span class="line">                Slog.w(TAG, <span class="string">&quot;System clock is before 1970; setting to 1970.&quot;</span>);</span><br><span class="line">                SystemClock.setCurrentTimeMillis(EARLIEST_SUPPORTED_TIME);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// Default the timezone property to GMT if not set.</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            String timezoneProperty =  SystemProperties.get(<span class="string">&quot;persist.sys.timezone&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (timezoneProperty == <span class="keyword">null</span> || timezoneProperty.isEmpty()) &#123;</span><br><span class="line">                Slog.w(TAG, <span class="string">&quot;Timezone not set; setting to GMT.&quot;</span>);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.timezone&quot;</span>, <span class="string">&quot;GMT&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the system has &quot;persist.sys.language&quot; and friends set, replace them with</span></span><br><span class="line">            <span class="comment">// &quot;persist.sys.locale&quot;. Note that the default locale at this point is calculated</span></span><br><span class="line">            <span class="comment">// using the &quot;-Duser.locale&quot; command line flag. That flag is usually populated by</span></span><br><span class="line">            <span class="comment">// AndroidRuntime using the same set of system properties, but only the system_server</span></span><br><span class="line">            <span class="comment">// and system apps are allowed to set them.</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// <span class="doctag">NOTE:</span> Most changes made here will need an equivalent change to</span></span><br><span class="line">            <span class="comment">// core/jni/AndroidRuntime.cpp</span></span><br><span class="line">            <span class="keyword">if</span> (!SystemProperties.get(<span class="string">&quot;persist.sys.language&quot;</span>).isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">final</span> String languageTag = Locale.getDefault().toLanguageTag();</span><br><span class="line"></span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.locale&quot;</span>, languageTag);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.language&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.country&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.localevar&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The system server should never make non-oneway calls</span></span><br><span class="line">            Binder.setWarnOnBlocking(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// The system server should always load safe labels</span></span><br><span class="line">            PackageItemInfo.setForceSafeLabels(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Default to FULL within the system server.</span></span><br><span class="line">            SQLiteGlobal.sDefaultSyncMode = SQLiteGlobal.SYNC_MODE_FULL;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Deactivate SQLiteCompatibilityWalFlags until settings provider is initialized</span></span><br><span class="line">            SQLiteCompatibilityWalFlags.init(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Here we go!</span></span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;Entered the Android system server!&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> uptimeMillis = (<span class="keyword">int</span>) SystemClock.elapsedRealtime();</span><br><span class="line">            EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_SYSTEM_RUN, uptimeMillis);</span><br><span class="line">            <span class="keyword">if</span> (!mRuntimeRestart) &#123;</span><br><span class="line">                MetricsLogger.histogram(<span class="keyword">null</span>, <span class="string">&quot;boot_system_server_init&quot;</span>, uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// In case the runtime switched since last boot (such as when</span></span><br><span class="line">            <span class="comment">// the old runtime was removed in an OTA), set the system</span></span><br><span class="line">            <span class="comment">// property so that it is in sync. We can | xq oqi&#x27;t do this in</span></span><br><span class="line">            <span class="comment">// libnativehelper&#x27;s JniInvocation::Init code where we already</span></span><br><span class="line">            <span class="comment">// had to fallback to a different runtime because it is</span></span><br><span class="line">            <span class="comment">// running as root and we need to be the system user to set</span></span><br><span class="line">            <span class="comment">// the property. http://b/11463182</span></span><br><span class="line">            SystemProperties.set(<span class="string">&quot;persist.sys.dalvik.vm.lib.2&quot;</span>, VMRuntime.getRuntime().vmLibrary());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Mmmmmm... more memory!</span></span><br><span class="line">            VMRuntime.getRuntime().clearGrowthLimit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The system server has to run all of the time, so it needs to be</span></span><br><span class="line">            <span class="comment">// as efficient as possible with its memory usage.</span></span><br><span class="line">            VMRuntime.getRuntime().setTargetHeapUtilization(<span class="number">0.8f</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Some devices rely on runtime fingerprint generation, so make sure</span></span><br><span class="line">            <span class="comment">// we&#x27;ve defined it before booting further.</span></span><br><span class="line">            Build.ensureFingerprintProperty();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, it is an error to access Environment paths without</span></span><br><span class="line">            <span class="comment">// explicitly specifying a user.</span></span><br><span class="line">            Environment.setUserRequired(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, any incoming Bundles should be defused</span></span><br><span class="line">            <span class="comment">// to avoid throwing BadParcelableException.</span></span><br><span class="line">            BaseBundle.setShouldDefuse(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, when parceling exceptions, include the stack trace</span></span><br><span class="line">            Parcel.setStackTraceParceling(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure binder calls into the system always run at foreground priority.</span></span><br><span class="line">            BinderInternal.disableBackgroundScheduling(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Increase the number of binder threads in system_server</span></span><br><span class="line">            BinderInternal.setMaxThreads(sMaxBinderThreads);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Prepare the main looper thread (this thread).</span></span><br><span class="line">            <span class="comment">//1.准备main Looper</span></span><br><span class="line">            android.os.Process.setThreadPriority(</span><br><span class="line">                android.os.Process.THREAD_PRIORITY_FOREGROUND);</span><br><span class="line">            android.os.Process.setCanSelfBackground(<span class="keyword">false</span>);</span><br><span class="line">            Looper.prepareMainLooper();</span><br><span class="line">            Looper.getMainLooper().setSlowLogThresholdMs(</span><br><span class="line">                    SLOW_DISPATCH_THRESHOLD_MS, SLOW_DELIVERY_THRESHOLD_MS);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Initialize native services.</span></span><br><span class="line">            <span class="comment">//2.初始化JNI接口</span></span><br><span class="line">            System.loadLibrary(<span class="string">&quot;android_servers&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check whether we failed to shut down last time we tried.</span></span><br><span class="line">            <span class="comment">// This call may not return.</span></span><br><span class="line">            performPendingShutdown();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Initialize the system context.</span></span><br><span class="line">            <span class="comment">//3.初始化系统Context</span></span><br><span class="line">            createSystemContext();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create the system service manager.</span></span><br><span class="line">            <span class="comment">//4.创建SystemServiceManager</span></span><br><span class="line">            mSystemServiceManager = <span class="keyword">new</span> SystemServiceManager(mSystemContext);</span><br><span class="line">            mSystemServiceManager.setStartInfo(mRuntimeRestart,</span><br><span class="line">                    mRuntimeStartElapsedTime, mRuntimeStartUptime);</span><br><span class="line">            LocalServices.addService(SystemServiceManager.class, mSystemServiceManager);</span><br><span class="line">            <span class="comment">// Prepare the thread pool for init tasks that can be parallelized</span></span><br><span class="line">            SystemServerInitThreadPool.get();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            traceEnd();  <span class="comment">// InitBeforeStartServices</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start services.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            traceBeginAndSlog(<span class="string">&quot;StartServices&quot;</span>);</span><br><span class="line">            <span class="comment">//5.启动引导服务</span></span><br><span class="line">            startBootstrapServices();<span class="comment">//启动引导服务</span></span><br><span class="line">            startCoreServices();<span class="comment">//启动核心服务</span></span><br><span class="line">            startOtherServices();<span class="comment">//启动其他相关服务</span></span><br><span class="line">            SystemServerInitThreadPool.shutdown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;******************************************&quot;</span>);</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;************ Failure starting system services&quot;</span>, ex);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            traceEnd();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StrictMode.initVmDefaults(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mRuntimeRestart &amp;&amp; !isFirstBootOrUpgrade()) &#123;</span><br><span class="line">            <span class="keyword">int</span> uptimeMillis = (<span class="keyword">int</span>) SystemClock.elapsedRealtime();</span><br><span class="line">            MetricsLogger.histogram(<span class="keyword">null</span>, <span class="string">&quot;boot_system_server_ready&quot;</span>, uptimeMillis);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> MAX_UPTIME_MILLIS = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span> (uptimeMillis &gt; MAX_UPTIME_MILLIS) &#123;</span><br><span class="line">                Slog.wtf(SYSTEM_SERVER_TIMING_TAG,</span><br><span class="line">                        <span class="string">&quot;SystemServer init took too long. uptimeMillis=&quot;</span> + uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Loop forever.</span></span><br><span class="line">        Looper.loop();<span class="comment">//进入main Looper</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Main thread loop unexpectedly exited&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="2-createSystemContext"><a href="#2-createSystemContext" class="headerlink" title="2.createSystemContext"></a>2.createSystemContext</h1><p>创建SystemContext</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createSystemContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ActivityThread activityThread = ActivityThread.systemMain();</span><br><span class="line">        mSystemContext = activityThread.getSystemContext();</span><br><span class="line">        mSystemContext.setTheme(DEFAULT_SYSTEM_THEME);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Context systemUiContext = activityThread.getSystemUiContext();</span><br><span class="line">        systemUiContext.setTheme(DEFAULT_SYSTEM_THEME);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>创建系统Context主要做了以下几件事：</p><p>1）创建了ActivityThread对象</p><p>2）获取mSystemContext对象</p><p>3）获取systemUiContext对象</p><p>下面对ActivityThread进行分析，ActivityThread管理着一个应用进程的主线程，用来调度和执行运行在该进程中的Activities，Broadcasrs以及其他的相关操作。在android中，每个应用都运行在一个独立的进程中，在这个进程中至少含有一个主线程，这个主线程由ActivityThread来管理,ActivityThread本身运行在主线程中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ActivityThread <span class="title">systemMain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// The system process on low-memory devices do not get to use hardware</span></span><br><span class="line">        <span class="comment">// accelerated drawing, since this can add too much overhead to the</span></span><br><span class="line">        <span class="comment">// process.</span></span><br><span class="line">        <span class="keyword">if</span> (!ActivityManager.isHighEndGfx()) &#123;</span><br><span class="line">            ThreadedRenderer.disable(<span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ThreadedRenderer.enableForegroundTrimming();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//1.创建ActivityThread实例</span></span><br><span class="line">        ActivityThread thread = <span class="keyword">new</span> ActivityThread();</span><br><span class="line">    <span class="comment">//2.调用ActivityThread的attach方法</span></span><br><span class="line">        thread.attach(<span class="keyword">true</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> thread;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要完成了一下两件事：</p><p>1）创建ActivityThread实例</p><p>2）调用ActivityThread的attach方法</p><h2 id="2-1-创建ActivityThread实例"><a href="#2-1-创建ActivityThread实例" class="headerlink" title="2.1 创建ActivityThread实例"></a>2.1 创建ActivityThread实例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ActivityThread() &#123;</span><br><span class="line">    mResourcesManager = ResourcesManager.getInstance();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从构造函数可知，ActivityThread的构造函数内部创建了ResourcesManager的实例。</p><p>ResourcesManager是一个单例，主要作用是：用于应用的资源管理</p><h2 id="2-2-ActivityThread的attach方法"><a href="#2-2-ActivityThread的attach方法" class="headerlink" title="2.2 ActivityThread的attach方法"></a>2.2 ActivityThread的attach方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/java/android/app/ActivityThread.java:6527</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">attach</span><span class="params">(<span class="keyword">boolean</span> system, <span class="keyword">long</span> startSeq)</span> </span>&#123;<span class="comment">//thread.attach(true, 0);</span></span><br><span class="line">        sCurrentActivityThread = <span class="keyword">this</span>;</span><br><span class="line">        mSystemThread = system;<span class="comment">//true</span></span><br><span class="line">    <span class="comment">//由于目前传入的是true所以走else分支</span></span><br><span class="line">        <span class="keyword">if</span> (!system) &#123;</span><br><span class="line">            ViewRootImpl.addFirstDrawHandler(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    ensureJitEnabled();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            android.ddm.DdmHandleAppName.setAppName(<span class="string">&quot;&lt;pre-initialized&gt;&quot;</span>,</span><br><span class="line">                                                    UserHandle.myUserId());</span><br><span class="line">            RuntimeInit.setApplicationObject(mAppThread.asBinder());</span><br><span class="line">            <span class="keyword">final</span> IActivityManager mgr = ActivityManager.getService();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mgr.attachApplication(mAppThread, startSeq);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> ex.rethrowFromSystemServer();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Watch for getting close to heap limit.</span></span><br><span class="line">            BinderInternal.addGcWatcher(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (!mSomeActivitiesChanged) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Runtime runtime = Runtime.getRuntime();</span><br><span class="line">                    <span class="keyword">long</span> dalvikMax = runtime.maxMemory();</span><br><span class="line">                    <span class="keyword">long</span> dalvikUsed = runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">                    <span class="keyword">if</span> (dalvikUsed &gt; ((<span class="number">3</span>*dalvikMax)/<span class="number">4</span>)) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (DEBUG_MEMORY_TRIM) Slog.d(TAG, <span class="string">&quot;Dalvik max=&quot;</span> + (dalvikMax/<span class="number">1024</span>)</span><br><span class="line">                                + <span class="string">&quot; total=&quot;</span> + (runtime.totalMemory()/<span class="number">1024</span>)</span><br><span class="line">                                + <span class="string">&quot; used=&quot;</span> + (dalvikUsed/<span class="number">1024</span>));</span><br><span class="line">                        mSomeActivitiesChanged = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            mgr.releaseSomeActivities(mAppThread);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                            <span class="keyword">throw</span> e.rethrowFromSystemServer();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Don&#x27;t set application object here -- if the system crashes,</span></span><br><span class="line">            <span class="comment">// we can&#x27;t display an alert, we just want to die die die.</span></span><br><span class="line">            android.ddm.DdmHandleAppName.setAppName(<span class="string">&quot;system_process&quot;</span>,</span><br><span class="line">                    UserHandle.myUserId());</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 初始化Instrumentation</span></span><br><span class="line">                mInstrumentation = <span class="keyword">new</span> Instrumentation();</span><br><span class="line">                mInstrumentation.basicInit(<span class="keyword">this</span>);</span><br><span class="line">                 <span class="comment">// 生成一个Context,是一个ContextImpl</span></span><br><span class="line">                ContextImpl context = ContextImpl.createAppContext(</span><br><span class="line">                        <span class="keyword">this</span>, getSystemContext().mPackageInfo);</span><br><span class="line">                <span class="comment">// Application初始化</span></span><br><span class="line">                mInitialApplication = context.mPackageInfo.makeApplication(<span class="keyword">true</span>, <span class="keyword">null</span>);</span><br><span class="line">                <span class="comment">// 执行Application.onCreate()</span></span><br><span class="line">                mInitialApplication.onCreate();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                        <span class="string">&quot;Unable to instantiate Application():&quot;</span> + e.toString(), e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add dropbox logging to libcore</span></span><br><span class="line">        DropBox.setReporter(<span class="keyword">new</span> DropBoxReporter());</span><br><span class="line"><span class="comment">// 应用对内存的管理</span></span><br><span class="line">        ViewRootImpl.ConfigChangedCallback configChangedCallback</span><br><span class="line">                = (Configuration globalConfig) -&gt; &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mResourcesManager) &#123;</span><br><span class="line">                <span class="comment">// We need to apply this change to the resources immediately, because upon returning</span></span><br><span class="line">                <span class="comment">// the view hierarchy will be informed about it.</span></span><br><span class="line">                <span class="keyword">if</span> (mResourcesManager.applyConfigurationToResourcesLocked(globalConfig,</span><br><span class="line">                        <span class="keyword">null</span> <span class="comment">/* compat */</span>)) &#123;</span><br><span class="line">                    updateLocaleListFromAppContext(mInitialApplication.getApplicationContext(),</span><br><span class="line">                            mResourcesManager.getConfiguration().getLocales());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// This actually changed the resources! Tell everyone about it.</span></span><br><span class="line">                    <span class="keyword">if</span> (mPendingConfiguration == <span class="keyword">null</span></span><br><span class="line">                            || mPendingConfiguration.isOtherSeqNewer(globalConfig)) &#123;</span><br><span class="line">                        mPendingConfiguration = globalConfig;</span><br><span class="line">                        sendMessage(H.CONFIGURATION_CHANGED, globalConfig);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        ViewRootImpl.addConfigCallback(configChangedCallback);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>attach中由于传入的参数为true，因而本次attach的作用为：</p><p>1）初始化Instrumentation</p><p>2）创建Context(ContextImpl)</p><p>3）通过Instrumentation创建Application并执行Application.onCreate().</p><p>4）ViewRootImpl设置ConfigCallback</p><h3 id="2-2-1-初始化Instrumentation"><a href="#2-2-1-初始化Instrumentation" class="headerlink" title="2.2.1 初始化Instrumentation"></a>2.2.1 初始化Instrumentation</h3><p>根据源码的解释：用于实现应用程序检测代码的基类。在启用检测的情况下运行时，该类将在任何应用程序代码之前为您实例化，允许您监视系统与应用程序的所有交互。通过一个AndroidManifest.xml的<instrumentation>标记。</instrumentation></p><p>对于一个应用进程，该类会优先被创建出来，然后通过他来创建其他组件；另外，它还是系统与组件交互的桥梁，因而通过他可以监听组件和系统之间的各种交互。</p><h3 id="2-2-2-ContextImpl-createAppContext方法"><a href="#2-2-2-ContextImpl-createAppContext方法" class="headerlink" title="2.2.2 ContextImpl.createAppContext方法"></a>2.2.2 ContextImpl.createAppContext方法</h3><p>主要做了两件事：</p><p>1）getSystemContext().mPackageInfo</p><p>2）调用ContextImpl.createAppContext方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ContextImpl <span class="title">getSystemContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mSystemContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mSystemContext = ContextImpl.createSystemContext(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mSystemContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是调用ContextImpl.createSystemContext方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> ContextImpl <span class="title">createSystemContext</span><span class="params">(ActivityThread mainThread)</span> </span>&#123;</span><br><span class="line">    LoadedApk packageInfo = <span class="keyword">new</span> LoadedApk(mainThread);</span><br><span class="line">    ContextImpl context = <span class="keyword">new</span> ContextImpl(<span class="keyword">null</span>, mainThread, packageInfo, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="number">0</span>,<span class="keyword">null</span>);</span><br><span class="line">    context.setResources(packageInfo.getResources());</span><br><span class="line">    context.mResources.updateConfiguration(context.mResourcesManager.getConfiguration(),</span><br><span class="line">                                           context.mResourcesManager.getDisplayMetrics());</span><br><span class="line">    <span class="keyword">return</span> context;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create information about the system package.</span></span><br><span class="line"><span class="comment"> * Must call &#123;<span class="doctag">@link</span> #installSystemApplicationInfo&#125; later.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">LoadedApk(ActivityThread activityThread) &#123;</span><br><span class="line">    mActivityThread = activityThread;</span><br><span class="line">    mApplicationInfo = <span class="keyword">new</span> ApplicationInfo();</span><br><span class="line">    mApplicationInfo.packageName = <span class="string">&quot;android&quot;</span>;</span><br><span class="line">    mPackageName = <span class="string">&quot;android&quot;</span>;</span><br><span class="line">    mAppDir = <span class="keyword">null</span>;</span><br><span class="line">    mResDir = <span class="keyword">null</span>;</span><br><span class="line">    mSplitAppDirs = <span class="keyword">null</span>;</span><br><span class="line">    mSplitResDirs = <span class="keyword">null</span>;</span><br><span class="line">    mSplitClassLoaderNames = <span class="keyword">null</span>;</span><br><span class="line">    mOverlayDirs = <span class="keyword">null</span>;</span><br><span class="line">    mDataDir = <span class="keyword">null</span>;</span><br><span class="line">    mDataDirFile = <span class="keyword">null</span>;</span><br><span class="line">    mDeviceProtectedDataDirFile = <span class="keyword">null</span>;</span><br><span class="line">    mCredentialProtectedDataDirFile = <span class="keyword">null</span>;</span><br><span class="line">    mLibDir = <span class="keyword">null</span>;</span><br><span class="line">    mBaseClassLoader = <span class="keyword">null</span>;</span><br><span class="line">    mSecurityViolation = <span class="keyword">false</span>;</span><br><span class="line">    mIncludeCode = <span class="keyword">true</span>;</span><br><span class="line">    mRegisterPackage = <span class="keyword">false</span>;</span><br><span class="line">    mClassLoader = ClassLoader.getSystemClassLoader();</span><br><span class="line">    mResources = Resources.getSystem();</span><br><span class="line">    mAppComponentFactory = createAppFactory(mApplicationInfo, mClassLoader);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于返回的是context，这个context就是ContextImpl的对象，因此主要看ContextImpl的构造函数，根据前面的赋值，可知ContextImpl构造函数传入的参数为：</p><p>container = null</p><p>mainThread = ActivityThread的对象</p><p>packageInfo = LoadedApk的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">ContextImpl</span><span class="params">(<span class="meta">@Nullable</span> ContextImpl container, <span class="meta">@NonNull</span> ActivityThread mainThread,</span></span></span><br><span class="line"><span class="function"><span class="params">          <span class="meta">@NonNull</span> LoadedApk packageInfo, <span class="meta">@Nullable</span> String splitName,</span></span></span><br><span class="line"><span class="function"><span class="params">          <span class="meta">@Nullable</span> IBinder activityToken, <span class="meta">@Nullable</span> UserHandle user, <span class="keyword">int</span> flags,</span></span></span><br><span class="line"><span class="function"><span class="params">          <span class="meta">@Nullable</span> ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">      mOuterContext = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// If creator didn&#x27;t specify which storage to use, use the default</span></span><br><span class="line">      <span class="comment">// location for application.</span></span><br><span class="line">      <span class="keyword">if</span> ((flags &amp; (Context.CONTEXT_CREDENTIAL_PROTECTED_STORAGE</span><br><span class="line">              | Context.CONTEXT_DEVICE_PROTECTED_STORAGE)) == <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">final</span> File dataDir = packageInfo.getDataDirFile();</span><br><span class="line">          <span class="keyword">if</span> (Objects.equals(dataDir, packageInfo.getCredentialProtectedDataDirFile())) &#123;</span><br><span class="line">              flags |= Context.CONTEXT_CREDENTIAL_PROTECTED_STORAGE;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Objects.equals(dataDir, packageInfo.getDeviceProtectedDataDirFile())) &#123;</span><br><span class="line">              flags |= Context.CONTEXT_DEVICE_PROTECTED_STORAGE;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      mMainThread = mainThread;</span><br><span class="line">      mActivityToken = activityToken;</span><br><span class="line">      mFlags = flags;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">          user = Process.myUserHandle();</span><br><span class="line">      &#125;</span><br><span class="line">      mUser = user;</span><br><span class="line"></span><br><span class="line">      mPackageInfo = packageInfo;</span><br><span class="line">      mSplitName = splitName;</span><br><span class="line">      mClassLoader = classLoader;</span><br><span class="line">      mResourcesManager = ResourcesManager.getInstance();</span><br><span class="line"><span class="comment">//这里container = null</span></span><br><span class="line">      <span class="keyword">if</span> (container != <span class="keyword">null</span>) &#123;</span><br><span class="line">          mBasePackageName = container.mBasePackageName;</span><br><span class="line">          mOpPackageName = container.mOpPackageName;</span><br><span class="line">          setResources(container.mResources);</span><br><span class="line">          mDisplay = container.mDisplay;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//最核心的是执行了这段代码：</span></span><br><span class="line">          mBasePackageName = packageInfo.mPackageName;</span><br><span class="line">          ApplicationInfo ainfo = packageInfo.getApplicationInfo();</span><br><span class="line">          <span class="keyword">if</span> (ainfo.uid == Process.SYSTEM_UID &amp;&amp; ainfo.uid != Process.myUid()) &#123;</span><br><span class="line">              <span class="comment">// Special case: system components allow themselves to be loaded in to other</span></span><br><span class="line">              <span class="comment">// processes.  For purposes of app ops, we must then consider the context as</span></span><br><span class="line">              <span class="comment">// belonging to the package of this process, not the system itself, otherwise</span></span><br><span class="line">              <span class="comment">// the package+uid verifications in app ops will fail.</span></span><br><span class="line">              mOpPackageName = ActivityThread.currentPackageName();</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              mOpPackageName = mBasePackageName;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      mContentResolver = <span class="keyword">new</span> ApplicationContentResolver(<span class="keyword">this</span>, mainThread);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="3-startBootstrapServices"><a href="#3-startBootstrapServices" class="headerlink" title="3.startBootstrapServices"></a>3.startBootstrapServices</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBootstrapServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;Reading configuration...&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> String TAG_SYSTEM_CONFIG = <span class="string">&quot;ReadingSystemConfig&quot;</span>;</span><br><span class="line">        traceBeginAndSlog(TAG_SYSTEM_CONFIG);</span><br><span class="line">        SystemServerInitThreadPool.get().submit(SystemConfig::getInstance, TAG_SYSTEM_CONFIG);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Wait for installd to finish starting up so that it has a chance to</span></span><br><span class="line">        <span class="comment">// create critical directories such as /data/user with the appropriate</span></span><br><span class="line">        <span class="comment">// permissions.  We need this to complete before we initialize other services.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartInstaller&quot;</span>);</span><br><span class="line">        Installer installer = mSystemServiceManager.startService(Installer.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        ...........</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Activity manager runs the show.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartActivityManager&quot;</span>);</span><br><span class="line">    <span class="comment">//1.启动AMS</span></span><br><span class="line">        mActivityManagerService = mSystemServiceManager.startService(</span><br><span class="line">                ActivityManagerService.Lifecycle.class).getService();</span><br><span class="line">        mActivityManagerService.setSystemServiceManager(mSystemServiceManager);</span><br><span class="line">        mActivityManagerService.setInstaller(installer);</span><br><span class="line">        traceEnd();</span><br><span class="line">............</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set up the Application instance for the system process and get started.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;SetSystemProcess&quot;</span>);</span><br><span class="line">    <span class="comment">//2.设置setSystemProcess</span></span><br><span class="line">        mActivityManagerService.setSystemProcess();</span><br><span class="line">        traceEnd();</span><br><span class="line">        ............</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-1-创建AMS"><a href="#3-1-创建AMS" class="headerlink" title="3.1 创建AMS"></a>3.1 创建AMS</h2><p>启动AMS可以分为以下几步：</p><p>1）mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class)</p><p>2）mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class).getService();</p><p>先看startService，可知主要做了以下几件事：</p><p>​    1.获取类名：serviceClass = (Class<SystemService>)Class.forName(className);</SystemService></p><p>​    2.调用类的构造函数：service = constructor.newInstance(mContext);</p><p>​    3.启动服务： startService(service);</p><p>​    4.添加服务到列表：mServices.add(service);</p><p>​    5.调用：service.onStart();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Starts a service by class name.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> The service instance.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> SystemService <span class="title">startService</span><span class="params">(String className)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> Class&lt;SystemService&gt; serviceClass;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="comment">//1.获取类名</span></span><br><span class="line">         serviceClass = (Class&lt;SystemService&gt;)Class.forName(className);</span><br><span class="line">     &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">         Slog.i(TAG, <span class="string">&quot;Starting &quot;</span> + className);</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + className</span><br><span class="line">                 + <span class="string">&quot;: service class not found, usually indicates that the caller should &quot;</span></span><br><span class="line">                 + <span class="string">&quot;have called PackageManager.hasSystemFeature() to check whether the &quot;</span></span><br><span class="line">                 + <span class="string">&quot;feature is available on this device before trying to start the &quot;</span></span><br><span class="line">                 + <span class="string">&quot;services that implement it&quot;</span>, ex);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> startService(serviceClass);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Creates and starts a system service. The class must be a subclass of</span></span><br><span class="line"><span class="comment">  * &#123;<span class="doctag">@link</span> com.android.server.SystemService&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> serviceClass A Java class that implements the SystemService interface.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> The service instance, never null.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> RuntimeException if the service fails to start.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> &lt;T extends SystemService&gt; <span class="function">T <span class="title">startService</span><span class="params">(Class&lt;T&gt; serviceClass)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">final</span> String name = serviceClass.getName();</span><br><span class="line">         Slog.i(TAG, <span class="string">&quot;Starting &quot;</span> + name);</span><br><span class="line">         Trace.traceBegin(Trace.TRACE_TAG_SYSTEM_SERVER, <span class="string">&quot;StartService &quot;</span> + name);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Create the service.</span></span><br><span class="line">         <span class="keyword">if</span> (!SystemService.class.isAssignableFrom(serviceClass)) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create &quot;</span> + name</span><br><span class="line">                     + <span class="string">&quot;: service must extend &quot;</span> + SystemService.class.getName());</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">final</span> T service;</span><br><span class="line">         <span class="comment">//根据类名，通过反射的方式获取到构造器</span></span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             Constructor&lt;T&gt; constructor = serviceClass.getConstructor(Context.class);</span><br><span class="line">             <span class="comment">//2.调用类的构造函数</span></span><br><span class="line">             service = constructor.newInstance(mContext);<span class="comment">//创建的是Lifecycle的实例</span></span><br><span class="line">         &#125; <span class="keyword">catch</span> (InstantiationException ex) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                     + <span class="string">&quot;: service could not be instantiated&quot;</span>, ex);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                     + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                     + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                     + <span class="string">&quot;: service constructor threw an exception&quot;</span>, ex);</span><br><span class="line">         &#125;</span><br><span class="line"><span class="comment">//3.启动服务</span></span><br><span class="line">         startService(service);</span><br><span class="line">         <span class="keyword">return</span> service;<span class="comment">//返回的是Lifecycle的实例</span></span><br><span class="line">     &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         Trace.traceEnd(Trace.TRACE_TAG_SYSTEM_SERVER);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startService</span><span class="params">(<span class="meta">@NonNull</span> <span class="keyword">final</span> SystemService service)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// Register it.</span></span><br><span class="line">     <span class="comment">//4.添加服务到列表</span></span><br><span class="line">     mServices.add(service);</span><br><span class="line">     <span class="comment">// Start it.</span></span><br><span class="line">     <span class="keyword">long</span> time = SystemClock.elapsedRealtime();</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="comment">//5.调用</span></span><br><span class="line">         service.onStart();</span><br><span class="line">     &#125; <span class="keyword">catch</span> (RuntimeException ex) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to start service &quot;</span> + service.getClass().getName()</span><br><span class="line">                 + <span class="string">&quot;: onStart threw an exception&quot;</span>, ex);</span><br><span class="line">     &#125;</span><br><span class="line">     warnIfTooLong(SystemClock.elapsedRealtime() - time, service, <span class="string">&quot;onStart&quot;</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>由于startService(String className)传入的参数是ActivityManagerService.Lifecycle.class，主要从内部类ActivityManagerService.Lifecycle进行分析。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Lifecycle</span> <span class="keyword">extends</span> <span class="title">SystemService</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> ActivityManagerService mService;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Lifecycle</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(context);</span><br><span class="line">            mService = <span class="keyword">new</span> ActivityManagerService(context);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            mService.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBootPhase</span><span class="params">(<span class="keyword">int</span> phase)</span> </span>&#123;</span><br><span class="line">            mService.mBootPhase = phase;</span><br><span class="line">            <span class="keyword">if</span> (phase == PHASE_SYSTEM_SERVICES_READY) &#123;</span><br><span class="line">                mService.mBatteryStatsService.systemServicesReady();</span><br><span class="line">                mService.mServices.systemServicesReady();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCleanupUser</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">            mService.mBatteryStatsService.onCleanupUser(userId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActivityManagerService <span class="title">getService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mService;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从ActivityManagerService.Lifecycle可知，</p><p>​    1.获取类名为：com.android.server.am.ActivityManagerService.Lifecycle</p><p>​    2.调用com.android.server.am.ActivityManagerService.Lifecycle的构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Lifecycle</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context);</span><br><span class="line">    mService = <span class="keyword">new</span> ActivityManagerService(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可知在构造函数内部，创建了AMS实例。Lifecycle的成员变量mService就是AMS，且Lifecycle提供了获取mService的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ActivityManagerService <span class="title">getService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    3.调用startService，传入的参数为Lifecycle的实例，继续4,5.</p><p>​    4.mServices.add(service);这里的mServices是一个存放能够接收生命循环事件的服务列表：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Services that should receive lifecycle events.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;SystemService&gt; mServices = <span class="keyword">new</span> ArrayList&lt;SystemService&gt;();</span><br></pre></td></tr></table></figure><p>​    5.调用service.onStart();方法，因为这里的service是Lifecycle，因此会调用Lifecycle的onStart()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> mService.start();<span class="comment">//mService为AMS，这里实质上是调用AMS的start方法</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        removeAllProcessGroups();</span><br><span class="line">        mProcessCpuThread.start();</span><br><span class="line"></span><br><span class="line">        mBatteryStatsService.publish();</span><br><span class="line">        mAppOpsService.publish(mContext);</span><br><span class="line">        Slog.d(<span class="string">&quot;AppOps&quot;</span>, <span class="string">&quot;AppOpsService published&quot;</span>);</span><br><span class="line">        LocalServices.addService(ActivityManagerInternal.class, <span class="keyword">new</span> LocalService());</span><br><span class="line">        <span class="comment">// Wait for the synchronized block started in mProcessCpuThread,</span></span><br><span class="line">        <span class="comment">// so that any other acccess to mProcessCpuTracker from main thread</span></span><br><span class="line">        <span class="comment">// will be blocked during mProcessCpuTracker initialization.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mProcessCpuInitLatch.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            Slog.wtf(TAG, <span class="string">&quot;Interrupted wait during start&quot;</span>, e);</span><br><span class="line">            Thread.currentThread().interrupt();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Interrupted wait during start&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在分析AMS的start方法之前，先看之前Lifecycle的构造函数内部，创建AMS的实例时，AMS的构造函数主要做了哪些事情，由于AMS的构造函数非常复杂，因此单独放在一篇分析。</p><p>完了看第二部分的内容2）mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class).getService();</p><p>根据前面的分析，mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class)返回的是Lifecycle的实例，因此而Lifecycle.getService();是返回AMS的实例。所以执行完这部分代码之后，就得到了AMS的实例。</p><h2 id="3-2-设置setSystemProcess"><a href="#3-2-设置setSystemProcess" class="headerlink" title="3.2 设置setSystemProcess"></a>3.2 设置setSystemProcess</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSystemProcess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.添加各种服务到ServiceManager中</span></span><br><span class="line">            ServiceManager.addService(Context.ACTIVITY_SERVICE, <span class="keyword">this</span>, <span class="comment">/* allowIsolated= */</span> <span class="keyword">true</span>,</span><br><span class="line">                    DUMP_FLAG_PRIORITY_CRITICAL | DUMP_FLAG_PRIORITY_NORMAL | DUMP_FLAG_PROTO);</span><br><span class="line">            ServiceManager.addService(ProcessStats.SERVICE_NAME, mProcessStats);</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;meminfo&quot;</span>, <span class="keyword">new</span> MemBinder(<span class="keyword">this</span>), <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>,</span><br><span class="line">                    DUMP_FLAG_PRIORITY_HIGH);</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;gfxinfo&quot;</span>, <span class="keyword">new</span> GraphicsBinder(<span class="keyword">this</span>));</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;dbinfo&quot;</span>, <span class="keyword">new</span> DbBinder(<span class="keyword">this</span>));</span><br><span class="line">            <span class="keyword">if</span> (MONITOR_CPU_USAGE) &#123;</span><br><span class="line">                ServiceManager.addService(<span class="string">&quot;cpuinfo&quot;</span>, <span class="keyword">new</span> CpuBinder(<span class="keyword">this</span>),</span><br><span class="line">                        <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>, DUMP_FLAG_PRIORITY_CRITICAL);</span><br><span class="line">            &#125;</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;permission&quot;</span>, <span class="keyword">new</span> PermissionController(<span class="keyword">this</span>));</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;processinfo&quot;</span>, <span class="keyword">new</span> ProcessInfoService(<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//安装系统应用信息</span></span><br><span class="line">            ApplicationInfo info = mContext.getPackageManager().getApplicationInfo(</span><br><span class="line">                    <span class="string">&quot;android&quot;</span>, STOCK_PM_FLAGS | MATCH_SYSTEM_ONLY);</span><br><span class="line">            mSystemThread.installSystemApplicationInfo(info, getClass().getClassLoader());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">                ProcessRecord app = newProcessRecordLocked(info, info.processName, <span class="keyword">false</span>, <span class="number">0</span>);</span><br><span class="line">                app.persistent = <span class="keyword">true</span>;</span><br><span class="line">                app.pid = MY_PID;</span><br><span class="line">                app.maxAdj = ProcessList.SYSTEM_ADJ;</span><br><span class="line">                app.makeActive(mSystemThread.getApplicationThread(), mProcessStats);</span><br><span class="line">                <span class="keyword">synchronized</span> (mPidsSelfLocked) &#123;</span><br><span class="line">                    mPidsSelfLocked.put(app.pid, app);</span><br><span class="line">                &#125;</span><br><span class="line">                updateLruProcessLocked(app, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">                updateOomAdjLocked();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PackageManager.NameNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                    <span class="string">&quot;Unable to find android system package&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start watching app ops after we and the package manager are up and running.</span></span><br><span class="line">        mAppOpsService.startWatchingMode(AppOpsManager.OP_RUN_IN_BACKGROUND, <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> IAppOpsCallback.Stub() &#123;</span><br><span class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opChanged</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> uid, String packageName)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (op == AppOpsManager.OP_RUN_IN_BACKGROUND &amp;&amp; packageName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (mAppOpsService.checkOperation(op, uid, packageName)</span><br><span class="line">                                    != AppOpsManager.MODE_ALLOWED) &#123;</span><br><span class="line">                                runInBackgroundDisabled(uid);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在AMS的setSystemProcess（）中主要做了四件事：</p><p>1）添加各种服务到ServiceManager中：this（自己AMS服务），内存，图像，权限，cpu，进程，相关服务</p><p>2）installSystemApplicationInfo</p><p>3）创建ProcessRecord对象</p><p>4）调用AppOps服务的startWatch方法开启对应用程序包给定权限的监听；</p><p>主要看第二件事：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationInfo info = mContext.getPackageManager().getApplicationInfo(</span><br><span class="line">                    <span class="string">&quot;android&quot;</span>, STOCK_PM_FLAGS | MATCH_SYSTEM_ONLY);</span><br><span class="line">            mSystemThread.installSystemApplicationInfo(info, getClass().getClassLoader());</span><br></pre></td></tr></table></figure><p>从mSystemThread = ActivityThread.currentActivityThread();可知mSystemThread是ActivityThread对象，则看ActivityThread的installSystemApplicationInfo()方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/java/android/app/ActivityThread.java:2172</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">installSystemApplicationInfo</span><span class="params">(ApplicationInfo info, ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            getSystemContext().installSystemApplicationInfo(info, classLoader);</span><br><span class="line">            getSystemUiContext().installSystemApplicationInfo(info, classLoader);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// give ourselves a default profiler</span></span><br><span class="line">            mProfiler = <span class="keyword">new</span> Profiler();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据前面分析，getSystemContext()会返回一个ContextImpl对象，由于在createSystemContext()时就已经创建出了ContextImpl对象，因此，这里直接就返回一个ContextImpl对象，并调用ContextImpl的installSystemApplicationInfo方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">installSystemApplicationInfo</span><span class="params">(ApplicationInfo info, ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">    mPackageInfo.installSystemApplicationInfo(info, classLoader);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets application info about the system package.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">installSystemApplicationInfo</span><span class="params">(ApplicationInfo info, ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">assert</span> info.packageName.equals(<span class="string">&quot;android&quot;</span>);</span><br><span class="line">    mApplicationInfo = info;</span><br><span class="line">    mClassLoader = classLoader;</span><br><span class="line">    mAppComponentFactory = createAppFactory(info, classLoader);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> AppComponentFactory <span class="title">createAppFactory</span><span class="params">(ApplicationInfo appInfo, ClassLoader cl)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (appInfo.appComponentFactory != <span class="keyword">null</span> &amp;&amp; cl != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (AppComponentFactory) cl.loadClass(appInfo.appComponentFactory)</span><br><span class="line">                .newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException | ClassNotFoundException e) &#123;</span><br><span class="line">            Slog.e(TAG, <span class="string">&quot;Unable to instantiate appComponentFactory&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> AppComponentFactory.DEFAULT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过以上代码可以知道installSystemApplicationInfo方法的实质是创建出一个AppComponentFactory。</p><h1 id="4-startOtherServices"><a href="#4-startOtherServices" class="headerlink" title="4.startOtherServices"></a>4.startOtherServices</h1><p>创建并启动AMS之后，系统继续调用startOtherServices函数，会启动其他的一些服务，在启动这些服务之后，会调用AMS的systemReady函数，用以通知系统AMS已经启动完毕，在systemReady的过程中会启动SystemUI以及Launcher。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">mActivityManagerService.systemReady(() -&gt; &#123;</span><br><span class="line">           Slog.i(TAG, <span class="string">&quot;Making services ready&quot;</span>);</span><br><span class="line">           traceBeginAndSlog(<span class="string">&quot;StartActivityManagerReadyPhase&quot;</span>);</span><br><span class="line">           mSystemServiceManager.startBootPhase(</span><br><span class="line">                   SystemService.PHASE_ACTIVITY_MANAGER_READY);</span><br><span class="line">           traceEnd();</span><br><span class="line">           traceBeginAndSlog(<span class="string">&quot;StartObservingNativeCrashes&quot;</span>);</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               mActivityManagerService.startObservingNativeCrashes();</span><br><span class="line">           &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">               reportWtf(<span class="string">&quot;observing native crashes&quot;</span>, e);</span><br><span class="line">           &#125;</span><br><span class="line">           traceEnd();</span><br><span class="line"></span><br><span class="line">           <span class="comment">// No dependency on Webview preparation in system server. But this should</span></span><br><span class="line">           <span class="comment">// be completed before allowing 3rd party</span></span><br><span class="line">           <span class="keyword">final</span> String WEBVIEW_PREPARATION = <span class="string">&quot;WebViewFactoryPreparation&quot;</span>;</span><br><span class="line">           Future&lt;?&gt; webviewPrep = <span class="keyword">null</span>;</span><br><span class="line">           <span class="keyword">if</span> (!mOnlyCore &amp;&amp; mWebViewUpdateService != <span class="keyword">null</span>) &#123;</span><br><span class="line">               webviewPrep = SystemServerInitThreadPool.get().submit(() -&gt; &#123;</span><br><span class="line">                   Slog.i(TAG, WEBVIEW_PREPARATION);</span><br><span class="line">                   TimingsTraceLog traceLog = <span class="keyword">new</span> TimingsTraceLog(</span><br><span class="line">                           SYSTEM_SERVER_TIMING_ASYNC_TAG, Trace.TRACE_TAG_SYSTEM_SERVER);</span><br><span class="line">                   traceLog.traceBegin(WEBVIEW_PREPARATION);</span><br><span class="line">                   ConcurrentUtils.waitForFutureNoInterrupt(mZygotePreload, <span class="string">&quot;Zygote preload&quot;</span>);</span><br><span class="line">                   mZygotePreload = <span class="keyword">null</span>;</span><br><span class="line">                   mWebViewUpdateService.prepareWebViewInSystemServer();</span><br><span class="line">                   traceLog.traceEnd();</span><br><span class="line">               &#125;, WEBVIEW_PREPARATION);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE)) &#123;</span><br><span class="line">               traceBeginAndSlog(<span class="string">&quot;StartCarServiceHelperService&quot;</span>);</span><br><span class="line">               mSystemServiceManager.startService(CAR_SERVICE_HELPER_SERVICE_CLASS);</span><br><span class="line">               traceEnd();</span><br><span class="line">           &#125;</span><br><span class="line">    </span><br><span class="line">    traceBeginAndSlog(<span class="string">&quot;StartCoreManagerHelperService&quot;</span>);</span><br><span class="line">           mSystemServiceManager.startService(CoreManagerHelperService.class);</span><br><span class="line">           traceEnd();</span><br><span class="line"></span><br><span class="line">           traceBeginAndSlog(<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>);</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               startSystemUi(context, windowManagerF);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">               reportWtf(<span class="string">&quot;starting System UI&quot;</span>, e);</span><br><span class="line">           &#125;</span><br><span class="line">           traceEnd();</span><br><span class="line">.........</span><br><span class="line">           .........    </span><br><span class="line">       &#125;, BOOT_TIMINGS_TRACE_LOG);</span><br></pre></td></tr></table></figure><h2 id="4-1-systemReady"><a href="#4-1-systemReady" class="headerlink" title="4.1 systemReady"></a>4.1 systemReady</h2><p>AMS 的systemReady函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">systemReady</span><span class="params">(<span class="keyword">final</span> Runnable goingCallback, TimingsTraceLog traceLog)</span> </span>&#123;</span><br><span class="line">        traceLog.traceBegin(<span class="string">&quot;PhaseActivityManagerReady&quot;</span>);</span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mSystemReady) &#123;</span><br><span class="line">                <span class="comment">// If we&#x27;re done calling all the receivers, run the next &quot;boot phase&quot; passed in</span></span><br><span class="line">                <span class="comment">// by the SystemServer</span></span><br><span class="line">                <span class="keyword">if</span> (goingCallback != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    goingCallback.run();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            mHasHeavyWeightFeature = mContext.getPackageManager().hasSystemFeature(</span><br><span class="line">                    PackageManager.FEATURE_CANT_SAVE_STATE);</span><br><span class="line">            mLocalDeviceIdleController</span><br><span class="line">                    = LocalServices.getService(DeviceIdleController.LocalService.class);</span><br><span class="line">            mAssistUtils = <span class="keyword">new</span> AssistUtils(mContext);</span><br><span class="line">            mVrController.onSystemReady();</span><br><span class="line">            <span class="comment">// Make sure we have the current profile info, since it is needed for security checks.</span></span><br><span class="line">            mUserController.onSystemReady();</span><br><span class="line">            mRecentTasks.onSystemReadyLocked();</span><br><span class="line">            mAppOpsService.systemReady();</span><br><span class="line">            mSystemReady = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sTheRealBuildSerial = IDeviceIdentifiersPolicyService.Stub.asInterface(</span><br><span class="line">                    ServiceManager.getService(Context.DEVICE_IDENTIFIERS_SERVICE))</span><br><span class="line">                    .getSerial();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;ProcessRecord&gt; procsToKill = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span>(mPidsSelfLocked) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=mPidsSelfLocked.size()-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">                ProcessRecord proc = mPidsSelfLocked.valueAt(i);</span><br><span class="line">                <span class="keyword">if</span> (!isAllowedWhileBooting(proc.info))&#123;</span><br><span class="line">                    <span class="keyword">if</span> (procsToKill == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        procsToKill = <span class="keyword">new</span> ArrayList&lt;ProcessRecord&gt;();</span><br><span class="line">                    &#125;</span><br><span class="line">                    procsToKill.add(proc);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (procsToKill != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=procsToKill.size()-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">                    ProcessRecord proc = procsToKill.get(i);</span><br><span class="line">                    Slog.i(TAG, <span class="string">&quot;Removing system update proc: &quot;</span> + proc);</span><br><span class="line">                    removeProcessLocked(proc, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="string">&quot;system update done&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Now that we have cleaned up any update processes, we</span></span><br><span class="line">            <span class="comment">// are ready to start launching real processes and know that</span></span><br><span class="line">            <span class="comment">// we won&#x27;t trample on them any more.</span></span><br><span class="line">            mProcessesReady = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;System now ready&quot;</span>);</span><br><span class="line">        EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_AMS_READY,</span><br><span class="line">            SystemClock.uptimeMillis());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="comment">// Make sure we have no pre-ready processes sitting around.</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</span><br><span class="line">                ResolveInfo ri = mContext.getPackageManager()</span><br><span class="line">                        .resolveActivity(<span class="keyword">new</span> Intent(Intent.ACTION_FACTORY_TEST),</span><br><span class="line">                                STOCK_PM_FLAGS);</span><br><span class="line">                CharSequence errorMsg = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (ri != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    ActivityInfo ai = ri.activityInfo;</span><br><span class="line">                    ApplicationInfo app = ai.applicationInfo;</span><br><span class="line">                    <span class="keyword">if</span> ((app.flags&amp;ApplicationInfo.FLAG_SYSTEM) != <span class="number">0</span>) &#123;</span><br><span class="line">                        mTopAction = Intent.ACTION_FACTORY_TEST;</span><br><span class="line">                        mTopData = <span class="keyword">null</span>;</span><br><span class="line">                        mTopComponent = <span class="keyword">new</span> ComponentName(app.packageName,</span><br><span class="line">                                ai.name);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        errorMsg = mContext.getResources().getText(</span><br><span class="line">                                com.android.internal.R.string.factorytest_not_system);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    errorMsg = mContext.getResources().getText(</span><br><span class="line">                            com.android.internal.R.string.factorytest_no_action);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (errorMsg != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mTopAction = <span class="keyword">null</span>;</span><br><span class="line">                    mTopData = <span class="keyword">null</span>;</span><br><span class="line">                    mTopComponent = <span class="keyword">null</span>;</span><br><span class="line">                    Message msg = Message.obtain();</span><br><span class="line">                    msg.what = SHOW_FACTORY_ERROR_UI_MSG;</span><br><span class="line">                    msg.getData().putCharSequence(<span class="string">&quot;msg&quot;</span>, errorMsg);</span><br><span class="line">                    mUiHandler.sendMessage(msg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        retrieveSettings();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> currentUserId = mUserController.getCurrentUserId();</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            readGrantedUriPermissionsLocked();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> PowerManagerInternal pmi = LocalServices.getService(PowerManagerInternal.class);</span><br><span class="line">        <span class="keyword">if</span> (pmi != <span class="keyword">null</span>) &#123;</span><br><span class="line">            pmi.registerLowPowerModeObserver(ServiceType.FORCE_BACKGROUND_CHECK,</span><br><span class="line">                    state -&gt; updateForceBackgroundCheck(state.batterySaverEnabled));</span><br><span class="line">            updateForceBackgroundCheck(</span><br><span class="line">                    pmi.getLowPowerState(ServiceType.FORCE_BACKGROUND_CHECK).batterySaverEnabled);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Slog.wtf(TAG, <span class="string">&quot;PowerManagerInternal not found.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (goingCallback != <span class="keyword">null</span>) goingCallback.run();</span><br><span class="line">        traceLog.traceBegin(<span class="string">&quot;ActivityManagerStartApps&quot;</span>);</span><br><span class="line">        mBatteryStatsService.noteEvent(BatteryStats.HistoryItem.EVENT_USER_RUNNING_START,</span><br><span class="line">                Integer.toString(currentUserId), currentUserId);</span><br><span class="line">        mBatteryStatsService.noteEvent(BatteryStats.HistoryItem.EVENT_USER_FOREGROUND_START,</span><br><span class="line">                Integer.toString(currentUserId), currentUserId);</span><br><span class="line">        mSystemServiceManager.startUser(currentUserId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            startPersistentAppsBeforeLauncher(PackageManager.MATCH_DIRECT_BOOT_AWARE);</span><br><span class="line">            <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">                <span class="keyword">short</span> loopCount = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">short</span> MAX_LOOP_COUNT = <span class="number">20</span>;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">while</span> (loopCount &lt; MAX_LOOP_COUNT) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(LOOP_INTERVAL);</span><br><span class="line">                            <span class="comment">// Slog.e(TAG, &quot;startPersistentApps wait &quot; + LOOP_INTERVAL + &quot; ms &quot;</span></span><br><span class="line">                            <span class="comment">//             + loopCount);</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">                            Log.e(TAG,<span class="string">&quot;InterruptedException &quot;</span> + ex);</span><br><span class="line">                        &#125;</span><br><span class="line">                        ++loopCount;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Only start up encryption-aware persistent apps; once user is</span></span><br><span class="line">                    <span class="comment">// unlocked we&#x27;ll come back around and start unaware apps</span></span><br><span class="line">                    Slog.e(TAG, <span class="string">&quot;startPersistentApps delay &quot;</span></span><br><span class="line">                                + loopCount * LOOP_INTERVAL</span><br><span class="line">                                + <span class="string">&quot; for launcher start earlier&quot;</span>);</span><br><span class="line">                    startPersistentApps(PackageManager.MATCH_DIRECT_BOOT_AWARE);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.start();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Start up initial activity.</span></span><br><span class="line">            mBooting = <span class="keyword">true</span>;</span><br><span class="line">            <span class="comment">// Enable home activity for system user, so that the system can always boot. We don&#x27;t</span></span><br><span class="line">            <span class="comment">// do this when the system user is not setup since the setup wizard should be the one</span></span><br><span class="line">            <span class="comment">// to handle home activity in this case.</span></span><br><span class="line">            <span class="keyword">if</span> (UserManager.isSplitSystemUser() &amp;&amp;</span><br><span class="line">                    Settings.Secure.getInt(mContext.getContentResolver(),</span><br><span class="line">                         Settings.Secure.USER_SETUP_COMPLETE, <span class="number">0</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">                ComponentName cName = <span class="keyword">new</span> ComponentName(mContext, SystemUserHomeActivity.class);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    AppGlobals.getPackageManager().setComponentEnabledSetting(cName,</span><br><span class="line">                            PackageManager.COMPONENT_ENABLED_STATE_ENABLED, <span class="number">0</span>,</span><br><span class="line">                            UserHandle.USER_SYSTEM);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> e.rethrowAsRuntimeException();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            startHomeActivityLocked(currentUserId, <span class="string">&quot;systemReady&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (AppGlobals.getPackageManager().hasSystemUidErrors()) &#123;</span><br><span class="line">                    Slog.e(TAG, <span class="string">&quot;UIDs on the system are inconsistent, you need to wipe your&quot;</span></span><br><span class="line">                            + <span class="string">&quot; data partition or your device will be unstable.&quot;</span>);</span><br><span class="line">                    mUiHandler.obtainMessage(SHOW_UID_ERROR_UI_MSG).sendToTarget();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!Build.isBuildConsistent()) &#123;</span><br><span class="line">                Slog.e(TAG, <span class="string">&quot;Build fingerprint is not consistent, warning user&quot;</span>);</span><br><span class="line">                mUiHandler.obtainMessage(SHOW_FINGERPRINT_ERROR_UI_MSG).sendToTarget();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> ident = Binder.clearCallingIdentity();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_USER_STARTED);</span><br><span class="line">                intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY</span><br><span class="line">                        | Intent.FLAG_RECEIVER_FOREGROUND);</span><br><span class="line">                intent.putExtra(Intent.EXTRA_USER_HANDLE, currentUserId);</span><br><span class="line">                broadcastIntentLocked(<span class="keyword">null</span>, <span class="keyword">null</span>, intent,</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, OP_NONE,</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, MY_PID, SYSTEM_UID,</span><br><span class="line">                        currentUserId);</span><br><span class="line">                intent = <span class="keyword">new</span> Intent(Intent.ACTION_USER_STARTING);</span><br><span class="line">                intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);</span><br><span class="line">                intent.putExtra(Intent.EXTRA_USER_HANDLE, currentUserId);</span><br><span class="line">                broadcastIntentLocked(<span class="keyword">null</span>, <span class="keyword">null</span>, intent,</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">new</span> IIntentReceiver.Stub() &#123;</span><br><span class="line">                            <span class="meta">@Override</span></span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">performReceive</span><span class="params">(Intent intent, <span class="keyword">int</span> resultCode, String data,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    Bundle extras, <span class="keyword">boolean</span> ordered, <span class="keyword">boolean</span> sticky, <span class="keyword">int</span> sendingUser)</span></span></span><br><span class="line"><span class="function">                                    <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;, <span class="number">0</span>, <span class="keyword">null</span>, <span class="keyword">null</span>,</span><br><span class="line">                        <span class="keyword">new</span> String[] &#123;INTERACT_ACROSS_USERS&#125;, OP_NONE,</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, MY_PID, SYSTEM_UID, UserHandle.USER_ALL);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">                Slog.wtf(TAG, <span class="string">&quot;Failed sending first user broadcasts&quot;</span>, t);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                Binder.restoreCallingIdentity(ident);</span><br><span class="line">            &#125;</span><br><span class="line">            mStackSupervisor.resumeFocusedStackTopActivityLocked();</span><br><span class="line">            mUserController.sendUserSwitchBroadcasts(-<span class="number">1</span>, currentUserId);</span><br><span class="line"></span><br><span class="line">            BinderInternal.nSetBinderProxyCountWatermarks(<span class="number">6000</span>,<span class="number">5500</span>);</span><br><span class="line">            BinderInternal.nSetBinderProxyCountEnabled(<span class="keyword">true</span>);</span><br><span class="line">            BinderInternal.setBinderProxyCountCallback(</span><br><span class="line">                    <span class="keyword">new</span> BinderInternal.BinderProxyLimitListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLimitReached</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">                            Slog.wtf(TAG, <span class="string">&quot;Uid &quot;</span> + uid + <span class="string">&quot; sent too many Binders to uid &quot;</span></span><br><span class="line">                                    + Process.myUid());</span><br><span class="line">                            <span class="keyword">if</span> (uid == Process.SYSTEM_UID) &#123;</span><br><span class="line">                                Slog.i(TAG, <span class="string">&quot;Skipping kill (uid is SYSTEM)&quot;</span>);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                killUid(UserHandle.getAppId(uid), UserHandle.getUserId(uid),</span><br><span class="line">                                        <span class="string">&quot;Too many Binders sent to SYSTEM&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, mHandler);</span><br><span class="line"></span><br><span class="line">            traceLog.traceEnd(); <span class="comment">// ActivityManagerStartApps</span></span><br><span class="line">            traceLog.traceEnd(); <span class="comment">// PhaseActivityManagerReady</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-Launcher"><a href="#4-2-Launcher" class="headerlink" title="4.2 Launcher"></a>4.2 Launcher</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startHomeActivityLocked(currentUserId, <span class="string">&quot;systemReady&quot;</span>);</span><br></pre></td></tr></table></figure><p>作为单独的一篇进行分析</p><h2 id="4-3-startSystemUi"><a href="#4-3-startSystemUi" class="headerlink" title="4.3 startSystemUi"></a>4.3 startSystemUi</h2><p>作为单独一篇分析</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当zygotefork出SystemServer后，便开始了Java世界。&lt;/p&gt;
&lt;p&gt;SystemServer会启动一系列的系统服务，包括AMS、WMS、PKMS。&lt;/p&gt;
&lt;p&gt;本文主要分析，SystemServer是如何启动AMS。&lt;/p&gt;
&lt;h1 id=&quot;1-Sy</summary>
      
    
    
    
    <category term="AMS" scheme="http://example.com/categories/AMS/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>init-文件操作函数</title>
    <link href="http://example.com/2020/11/02/init-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2020/11/02/init-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%87%BD%E6%95%B0/</id>
    <published>2020-11-02T09:29:48.000Z</published>
    <updated>2020-11-06T14:54:03.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-mount"><a href="#1-mount" class="headerlink" title="1.mount"></a>1.mount</h1><p><strong>功能描述</strong></p><p>mount挂上文件系统，umount执行相反的操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">source ：设备 /dev/sda等；</span></span><br><span class="line"><span class="comment">target ：挂载点/mnt/usb等；</span></span><br><span class="line"><span class="comment">filesystemtype：&quot;minix&quot;,&quot;ext2&quot;, &quot;msdos&quot;, &quot;proc&quot;, &quot;nfs&quot;, &quot;iso9660&quot; ，“vfat”etc.；</span></span><br><span class="line"><span class="comment">mountflags：MS_MGC_VAL/还有别的参数；</span></span><br><span class="line"><span class="comment">data：例如：”codepage=936,iocharset=cp936“。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mount</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *source, <span class="keyword">const</span> <span class="keyword">char</span> *target,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> <span class="keyword">char</span> *filesystemtype, <span class="keyword">unsigned</span> <span class="keyword">long</span> mountflags, <span class="keyword">const</span> <span class="keyword">void</span> *data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">umount</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *target)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">umount2</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *target, <span class="keyword">int</span> flags)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> MountFlags : ulong</span><br><span class="line">&#123;</span><br><span class="line">    MS_RDONLY = <span class="number">1</span>,         <span class="comment">// Mount read-only.</span></span><br><span class="line">    MS_NOSUID = <span class="number">2</span>,         <span class="comment">// Ignore suid and sgid bits.</span></span><br><span class="line">    MS_NODEV = <span class="number">4</span>,         <span class="comment">// Disallow access to device special files.</span></span><br><span class="line">    MS_NOEXEC = <span class="number">8</span>,         <span class="comment">// Disallow program execution.</span></span><br><span class="line">    MS_SYNCHRONOUS = <span class="number">16</span>,    <span class="comment">// Writes are synced at once.</span></span><br><span class="line">    MS_REMOUNT = <span class="number">32</span>,    <span class="comment">// Alter flags of a mounted FS.</span></span><br><span class="line">    MS_MANDLOCK = <span class="number">64</span>,    <span class="comment">// Allow mandatory locks on an FS.</span></span><br><span class="line">    S_WRITE = <span class="number">128</span>,   <span class="comment">// Write on file/directory/symlink.</span></span><br><span class="line">    S_APPEND = <span class="number">256</span>,   <span class="comment">// Append-only file.</span></span><br><span class="line">    S_IMMUTABLE = <span class="number">512</span>,   <span class="comment">// Immutable file.</span></span><br><span class="line">    MS_NOATIME = <span class="number">1024</span>,  <span class="comment">// Do not update access times.</span></span><br><span class="line">    MS_NODIRATIME = <span class="number">2048</span>,  <span class="comment">// Do not update directory access times.</span></span><br><span class="line">    MS_BIND = <span class="number">4096</span>,  <span class="comment">// Bind directory at different place.</span></span><br><span class="line">&#125;; <span class="comment">// End Enum MountFlags : ulong</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1-source"><a href="#1-source" class="headerlink" title="(1) source"></a>(1) source</h5><p>将要挂载的文件系统，通常是一个设备名，andoird 中比较常用的有：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1. tmpfs </span><br><span class="line">= tmpfs 是一种临时文件系统，它会将所有的文件存储在虚拟内存中。</span><br><span class="line">= 如果你将 tmpfs 文件系统卸载(或断电)后，那么其下的内容也不复存在。</span><br><span class="line">= tmpfs 既可以使用 RAM，也可以使用交换分区，会根据你的实际需求而改变大小。</span><br><span class="line">= tmpfs 文件系统的速度非常惊人，毕竟它是驻留在 RAM 中的，即使用了交换分区，性能仍然非常卓越。</span><br><span class="line"></span><br><span class="line">2. devpts</span><br><span class="line">= devpts 文件系统为伪终端提供了一个标准接口，它的标准挂接点是 /dev/pts。</span><br><span class="line">= 只要 pty(虚拟终端) 的主复合设备 /dev/ptmx 被打开，就会在 /dev/pts 下动态的创建一个新的 pty(虚拟终端) 设备文件。</span><br><span class="line"></span><br><span class="line">3. proc</span><br><span class="line">= proc 文件系统是一个非常重要的虚拟文件系统，它可以看作是内核内部数据结构的接口。</span><br><span class="line">= 通过它我们可以获得系统的信息，同时也能够在运行时修改特定的内核参数。</span><br><span class="line"></span><br><span class="line">4. sysfs</span><br><span class="line">= 与 proc 文件系统类似，sysfs文件系统也是一个不占有任何磁盘空间的虚拟文件系统。</span><br><span class="line">= sysfs文件系统是Linux2.6内核引入的，它通常被挂接在/sys目录下。</span><br><span class="line">= sysfs 文件系统把连接在系统上的设备和总线组织成为一个分级的文件，使得它们可以在用户空间存取</span><br><span class="line"></span><br><span class="line">5. selinuxfs</span><br><span class="line">= selinuxfs 是虚拟文件系统，通常挂载在 /sys/fs/selinux，用来存放 SELinux 安全策略文件。</span><br></pre></td></tr></table></figure><h5 id="2-target"><a href="#2-target" class="headerlink" title="(2) target"></a>(2) target</h5><p>文件系统要挂载的最终目录</p><h5 id="3-filesystemtype"><a href="#3-filesystemtype" class="headerlink" title="(3) filesystemtype"></a>(3) filesystemtype</h5><p>文件系统的类型，可以是 “ext2”、”ext3”、”msdos”、”proc”、”nfs”、”iso9660”、”vfat” …</p><h5 id="4-mountflags"><a href="#4-mountflags" class="headerlink" title="(4) mountflags"></a>(4) mountflags</h5><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>MS_BIND</td><td>执行 bind 挂载，使文件或者子目录树在文件系统内的另一个点上可视</td></tr><tr><td>MS_DIRSYNC</td><td>同步目录的更新</td></tr><tr><td>MS_MANDLOCK</td><td>允许在文件上执行强制锁</td></tr><tr><td>MS_MOVE</td><td>移动子目录树</td></tr><tr><td>MS_NOATIME</td><td>不要更新文件上的访问时间</td></tr><tr><td>MS_NODEV</td><td>不允许访问设备文件</td></tr><tr><td>MS_NODIRATIME</td><td>不允许更新目录上的访问时间</td></tr><tr><td>MS_NOEXEC</td><td>不允许在挂载的文件系统上执行程序</td></tr><tr><td>MS_NOSUID</td><td>执行程序时，不遵照 set-user-ID 和 set-group-ID 位</td></tr><tr><td>MS_RDONLY</td><td>指定文件系统为只读</td></tr><tr><td>MS_REMOUNT</td><td>重新加载文件系统，这允许你改变现存文件系统的 mountflag 和数据</td></tr><tr><td>MS_SYNCHRONOUS</td><td>同步文件的更新</td></tr><tr><td>MNT_FORCE</td><td>强制卸载，即使文件系统处于忙状态</td></tr><tr><td>MNT_EXPIRE</td><td>将挂载点标记为过时</td></tr></tbody></table><h1 id="2-setenv"><a href="#2-setenv" class="headerlink" title="2.setenv"></a>2.setenv</h1><h2 id="2-1-环境变量"><a href="#2-1-环境变量" class="headerlink" title="2.1 环境变量"></a>2.1 环境变量</h2><h3 id="2-1-1-概念"><a href="#2-1-1-概念" class="headerlink" title="2.1.1 概念"></a>2.1.1 概念</h3><p>指在操作系统中用来指定操作系统运行环境的一些参数。环境变量通常具有特殊用途，在系统中具有全局特性。<br>环境变量通常具有全局属性，可以被子进程继承下去。</p><h3 id="2-1-2-常见的环境变量"><a href="#2-1-2-常见的环境变量" class="headerlink" title="2.1.2 常见的环境变量"></a>2.1.2 常见的环境变量</h3><p>（1）PATH:指定命令的搜索路径<br>        （2）HOME:指定用户的主工作目录（即用户登录到Linux系统中时，默认的目录）<br>        （3）HISTSIZE:指保存历史命令记录的条数<br>        （4）SHELL：当前Shell，它的值通常是/bin/bash</p><h3 id="2-1-3-查看环境变量的方法"><a href="#2-1-3-查看环境变量的方法" class="headerlink" title="2.1.3 查看环境变量的方法"></a>2.1.3 查看环境变量的方法</h3><p>echo $NAME //NAME：环境变量名称</p><h3 id="2-1-4-和环境变量相关的命令"><a href="#2-1-4-和环境变量相关的命令" class="headerlink" title="2.1.4 和环境变量相关的命令"></a>2.1.4 和环境变量相关的命令</h3><p>（1）echo：显示某个环境变量值<br>        （2）export：设置一个新的环境变量<br>        （3）env：显示所有环境变量<br>        （4）unset：清楚环境变量<br>        （5）set：显示本地定义的shell变量和环境变量</p><h2 id="2-2-setenv函数"><a href="#2-2-setenv函数" class="headerlink" title="2.2 setenv函数"></a>2.2 setenv函数</h2><h1 id="3-mknod"><a href="#3-mknod" class="headerlink" title="3.mknod"></a>3.mknod</h1><h4 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h4><p>mknod 函数用于创建各种类型的文件，包括普通文件、特殊文件以及设备文件。</p><p>因为普通文件可以使用 open 或 create 创建，FIFO 文件可以使用 pipe 函数创建，所以 mknod 函数主要用于设备文件的创建。</p><h4 id="设备文件与普通文件的区别"><a href="#设备文件与普通文件的区别" class="headerlink" title="设备文件与普通文件的区别"></a>设备文件与普通文件的区别</h4><p>设备文件是文件系统中代表设备的特殊文件。与普通的文件相比，设备文件在磁盘（或宿主文件系统所的在其它设备）上只占用一个索引节点，而没有任何用于存放数据的记录块与之相联系。当然，这是因为设备文件的目的并不在于存储和读取数据，而只在于为应用程序提供一条通向具体设备的途径，使应用程序可以跟具体设备建立起连接。</p><p>普通文件（以及某些特殊文件）可以通过系统调用 open 来创建，只要在调用参数中或上 O_CREAT 标志，就可以让open函数在目标文件不存在时先创建这个文件。当然也可通过调用 creat() 来直接创建文件，事实上 sys_creat() 就是通过 sys_open() 实现的。可是这两个系统调用都不能用来创建设备文件，因为设备文件的创建需要有一个参数来传递设备号，而 open 和 creat 函数都不包括这个参数。此时就是 mknod 函数存在的意义了。</p><h4 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> sys/stat.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt; // 用于 errno 的判断12</span></span></span><br></pre></td></tr></table></figure><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mknod</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* path, <span class="keyword">mode_t</span> mode, <span class="keyword">dev_t</span> dev)</span>1</span></span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><h5 id="1-path"><a href="#1-path" class="headerlink" title="(1) path"></a>(1) path</h5><p>设备所在目录</p><h5 id="2-mode"><a href="#2-mode" class="headerlink" title="(2) mode"></a>(2) mode</h5><p>指定设备的类型和读写访问标志，可能的类型有：</p><table><thead><tr><th>参数类型</th><th>含义</th></tr></thead><tbody><tr><td>S_IFMT</td><td>type of file 文件类型掩码</td></tr><tr><td>S_IFREG</td><td>regular 普通文件</td></tr><tr><td>S_IFBLK</td><td>block special 块设备文件</td></tr><tr><td>S_IFDIR</td><td>directory 目录文件</td></tr><tr><td>S_IFCHR</td><td>character special 字符设备文件</td></tr><tr><td>S_IFIFO</td><td>fifo 管道文件</td></tr><tr><td>S_IFNAM</td><td>special named file 特殊文件</td></tr><tr><td>S_IFLNK</td><td>symbolic link 链接文件</td></tr></tbody></table><h3 id="3-dev"><a href="#3-dev" class="headerlink" title="(3) dev"></a>(3) dev</h3><p>dev 表示设备，由makedev(1, 9) 函数创建，9为主设备号、1为次设备号，如果是普通文件此项直接设置为 0 即可。</p><h1 id="4-mkdir"><a href="#4-mkdir" class="headerlink" title="4.mkdir"></a>4.mkdir</h1><h4 id="功能描述-1"><a href="#功能描述-1" class="headerlink" title="功能描述"></a>功能描述</h4><p>用于创建目录文件并设置目录的访问权限</p><h4 id="头文件-1"><a href="#头文件-1" class="headerlink" title="头文件"></a>头文件</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt; 1</span></span></span><br></pre></td></tr></table></figure><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mkdir</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *path, <span class="keyword">mode_t</span> mode)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><h5 id="1-path-1"><a href="#1-path-1" class="headerlink" title="(1) path"></a>(1) path</h5><p>目录名</p><h5 id="2-mode-1"><a href="#2-mode-1" class="headerlink" title="(2) mode"></a>(2) mode</h5><p>目录的设置访问权限，为 mote_t 类型，为以下多个可选值按位或组成：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- S_IRUSR       当前用户可读</span><br><span class="line">- S_IWUSR       当前用户可写</span><br><span class="line">- S_IXUSR       当前用户可执行</span><br><span class="line">- S_IRGRP       用户组可读</span><br><span class="line">- S_IWGRP       用户组可写</span><br><span class="line">- S_IXGRP       用户组可执行</span><br><span class="line">- S_IROTH       其他用户可读</span><br><span class="line">- S_IWOTH       其他用户可写</span><br><span class="line">- S_IXOTH       其他用户可执行123456789</span><br></pre></td></tr></table></figure><h4 id="返回值说明"><a href="#返回值说明" class="headerlink" title="返回值说明"></a>返回值说明</h4><p>成功执行时，返回0。失败返回 -1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-mount&quot;&gt;&lt;a href=&quot;#1-mount&quot; class=&quot;headerlink&quot; title=&quot;1.mount&quot;&gt;&lt;/a&gt;1.mount&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;功能描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mount挂上文件系统，umount执行相</summary>
      
    
    
    
    <category term="init进程" scheme="http://example.com/categories/init%E8%BF%9B%E7%A8%8B/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>android 环境变量的设置与查看</title>
    <link href="http://example.com/2020/11/02/android-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E6%9F%A5%E7%9C%8B/"/>
    <id>http://example.com/2020/11/02/android-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E6%9F%A5%E7%9C%8B/</id>
    <published>2020-11-02T08:49:56.000Z</published>
    <updated>2020-11-06T15:01:24.900Z</updated>
    
    <content type="html"><![CDATA[<p>android 在init进程起来的时候，代码中会有很多的setenv(“xxx”)，比如：setenv(“PATH”, _PATH_DEFPATH, 1);等。</p><p>那android系统中都有哪些环境变量，并且这些变量是如何设置以及是如何获取并使用的，</p><h1 id="1-android环境变量值"><a href="#1-android环境变量值" class="headerlink" title="1.android环境变量值"></a>1.android环境变量值</h1><p>android默认的环境变量值是保存在system/core/rootdir/init.environ.rc.in中，其源码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set up the global environment</span></span><br><span class="line">on init</span><br><span class="line">    export ANDROID_BOOTLOGO 1</span><br><span class="line">    export ANDROID_ROOT /system</span><br><span class="line">    export ANDROID_ASSETS /system/app</span><br><span class="line">    export ANDROID_DATA /data</span><br><span class="line">    export ANDROID_STORAGE /storage</span><br><span class="line">    export EXTERNAL_STORAGE /sdcard</span><br><span class="line">    export ASEC_MOUNTPOINT /mnt/asec</span><br><span class="line">    export BOOTCLASSPATH %BOOTCLASSPATH%</span><br><span class="line">    export SYSTEMSERVERCLASSPATH %SYSTEMSERVERCLASSPATH%</span><br><span class="line">    %EXPORT_GLOBAL_ASAN_OPTIONS%</span><br><span class="line">    %EXPORT_GLOBAL_GCOV_OPTIONS%</span><br></pre></td></tr></table></figure><p>所以我们想添加环境变量只需要export就OK了。比如</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dizzy:/ # export HELLO_WORLD=Android</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ # echo $HELLO_WORLD</span><br><span class="line">Android</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br><span class="line">dizzy:/ #</span><br></pre></td></tr></table></figure><h2 id="2-Android终端下查看和修改环境变量值"><a href="#2-Android终端下查看和修改环境变量值" class="headerlink" title="2.Android终端下查看和修改环境变量值"></a>2.Android终端下查看和修改环境变量值</h2><p>查看车机端的系统环境变量可以通过export</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">dizzy:/ # export</span><br><span class="line">ANDROID_ASSETS</span><br><span class="line">ANDROID_BOOTLOGO</span><br><span class="line">ANDROID_DATA</span><br><span class="line">ANDROID_ROOT</span><br><span class="line">ANDROID_SOCKET_adbd</span><br><span class="line">ANDROID_STORAGE</span><br><span class="line">ASEC_MOUNTPOINT</span><br><span class="line">BOOTCLASSPATH</span><br><span class="line">DOWNLOAD_CACHE</span><br><span class="line">EXTERNAL_STORAGE</span><br><span class="line">HELLO_WORLD</span><br><span class="line">HOME</span><br><span class="line">HOSTNAME</span><br><span class="line">LOGNAME</span><br><span class="line">PATH</span><br><span class="line">SHELL</span><br><span class="line">SYSTEMSERVERCLASSPATH</span><br><span class="line">TERM</span><br><span class="line">TEST_EVN</span><br><span class="line">TMPDIR</span><br><span class="line">USER</span><br><span class="line">dizzy:/ #</span><br></pre></td></tr></table></figure><h1 id="3-删除环境变量"><a href="#3-删除环境变量" class="headerlink" title="3.删除环境变量"></a>3.删除环境变量</h1><p>unset 命令删除</p><p>　　unset 命令删除也是暂时的，只会在当前环境有效，退出重新连接依然存在export添加的内容。</p><p>　　unset HELLO_WORLD</p><p>　　env 查看已删除，但也是暂时的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;android 在init进程起来的时候，代码中会有很多的setenv(“xxx”)，比如：setenv(“PATH”, _PATH_DEFPATH, 1);等。&lt;/p&gt;
&lt;p&gt;那android系统中都有哪些环境变量，并且这些变量是如何设置以及是如何获取并使用的，&lt;/p&gt;
</summary>
      
    
    
    
    <category term="android系统" scheme="http://example.com/categories/android%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>init之PropertyService</title>
    <link href="http://example.com/2020/11/02/init%E4%B9%8BPropertyService/"/>
    <id>http://example.com/2020/11/02/init%E4%B9%8BPropertyService/</id>
    <published>2020-11-02T08:22:32.000Z</published>
    <updated>2020-11-06T14:53:38.304Z</updated>
    
    <content type="html"><![CDATA[<p>属性服务的初始化是init进程的第二阶段执行的，因此，本文主要从init进程的属性初始化开始，对属性服务进行分析。</p><p><img src="../images/init%E4%B9%8BPropertyService/init-1604401861370.bmp" alt="init"></p><h1 id="1-从init开始"><a href="#1-从init开始" class="headerlink" title="1.从init开始"></a>1.从init开始</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//system/core/init/init.cpp</span></span><br><span class="line">main() &#123;</span><br><span class="line">    .......</span><br><span class="line">    keyctl_get_keyring_ID(KEY_SPEC_SESSION_KEYRING, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Indicate that booting is in progress to background fw loaders, etc.</span></span><br><span class="line">    close(open(<span class="string">&quot;/dev/.booting&quot;</span>, O_WRONLY | O_CREAT | O_CLOEXEC, <span class="number">0000</span>));</span><br><span class="line"><span class="comment">//1.属性初始化</span></span><br><span class="line">    property_init();<span class="comment">//属性服务初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// If arguments are passed both on the command line and in DT,</span></span><br><span class="line">    <span class="comment">// properties set in DT always have priority over the command-line ones.</span></span><br><span class="line">    process_kernel_dt();</span><br><span class="line">    process_kernel_cmdline();</span><br><span class="line">    .......</span><br><span class="line">        </span><br><span class="line">    <span class="comment">//加载启动默认属性</span></span><br><span class="line">    property_load_boot_defaults();</span><br><span class="line">    export_oem_lock_status();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//启动属性服务</span></span><br><span class="line">    start_property_service();</span><br><span class="line">    set_usb_controller();</span><br><span class="line">    .......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-属性初始化"><a href="#2-属性初始化" class="headerlink" title="2.属性初始化"></a>2.属性初始化</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">property_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建了一个节点</span></span><br><span class="line">    mkdir(<span class="string">&quot;/dev/__properties__&quot;</span>, S_IRWXU | S_IXGRP | S_IXOTH);</span><br><span class="line">    <span class="comment">//2.从文件中加载属性值</span></span><br><span class="line">    CreateSerializedPropertyInfo();</span><br><span class="line">    <span class="comment">//3.创建共享内存</span></span><br><span class="line">    <span class="keyword">if</span> (__system_property_area_init()) &#123;</span><br><span class="line">        LOG(FATAL) &lt;&lt; <span class="string">&quot;Failed to initialize property area&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!property_info_area.LoadDefaultPath()) &#123;</span><br><span class="line">        LOG(FATAL) &lt;&lt; <span class="string">&quot;Failed to load serialized property info file&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1-创建属性文件节点"><a href="#2-1-创建属性文件节点" class="headerlink" title="2.1 创建属性文件节点"></a>2.1 创建属性文件节点</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&quot;/dev/__properties__&quot;</span>, S_IRWXU | S_IXGRP | S_IXOTH);</span><br></pre></td></tr></table></figure><p>可以在车机中找到该目录。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">msmnile_gvmq:/<span class="title">dev</span>/<span class="title">__properties__</span> # <span class="title">ls</span></span></span><br><span class="line"><span class="function"><span class="title">properties_serial</span>                           <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span>     <span class="title">u:object_r</span>:<span class="title">persistent_properties_ready_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">property_info</span>                               <span class="title">u:object_r</span>:<span class="title">exported3_radio_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">pm_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">audio_prop:s0</span>                    <span class="title">u:object_r</span>:<span class="title">exported3_system_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">powerctl_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">bluetooth_a2dp_offload_prop:s0</span>   <span class="title">u:object_r</span>:<span class="title">exported_audio_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">public_vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">exported_bluetooth_prop:s0</span>    <span class="title">u:object_r</span>:<span class="title">qcom_wlan_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">bootloader_boot_reason_prop:s0</span>   <span class="title">u:object_r</span>:<span class="title">exported_config_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">radio_noril_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">boottime_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">car_service_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">restorecon_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">cnd_prop:s0</span>                      <span class="title">u:object_r</span>:<span class="title">exported_dumpstate_prop:s0</span>    <span class="title">u:object_r</span>:<span class="title">safemode_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">config_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">exported_ffs_prop:s0</span>          <span class="title">u:object_r</span>:<span class="title">sensors_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">cppreopt_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">exported_fingerprint_prop:s0</span>  <span class="title">u:object_r</span>:<span class="title">serialno_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">crash_cnt_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">exported_overlay_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">shell_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">crash_detect_prop:s0</span>             <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span>           <span class="title">u:object_r</span>:<span class="title">system_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_bootanim_prop:s0</span>             <span class="title">u:object_r</span>:<span class="title">exported_radio_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_bugreport_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">exported_secure_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">system_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_console_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">exported_system_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">test_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_default_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">exported_system_radio_prop:s0</span> <span class="title">u:object_r</span>:<span class="title">traced_enabled_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_dumpstate_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">exported_vold_prop:s0</span>         <span class="title">u:object_r</span>:<span class="title">ts_mfi_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_fuse_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">exported_wifi_prop:s0</span>         <span class="title">u:object_r</span>:<span class="title">vendor_alarm_boot_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_interface_restart_prop:s0</span>    <span class="title">u:object_r</span>:<span class="title">ffs_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">vendor_audio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_interface_start_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">fingerprint_prop:s0</span>           <span class="title">u:object_r</span>:<span class="title">vendor_audioext_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_interface_stop_prop:s0</span>       <span class="title">u:object_r</span>:<span class="title">firstboot_prop:s0</span>             <span class="title">u:object_r</span>:<span class="title">vendor_bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_mdnsd_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">hwservicemanager_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">vendor_camera_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_netmgrd_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">ims_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">vendor_dataqdp_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_port</span>-<span class="title">bridge_prop:s0</span>          <span class="title">u:object_r</span>:<span class="title">ipacm</span>-<span class="title">diag_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">vendor_dataqti_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_qcrild_prop:s0</span>               <span class="title">u:object_r</span>:<span class="title">ipacm_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_restart_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">last_boot_reason_prop:s0</span>      <span class="title">u:object_r</span>:<span class="title">vendor_display_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_rildaemon_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">log_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">vendor_gpu_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_sigstop_prop:s0</span>              <span class="title">u:object_r</span>:<span class="title">log_tag_prop:s0</span>               <span class="title">u:object_r</span>:<span class="title">vendor_gralloc_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_start_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">logd_prop:s0</span>                  <span class="title">u:object_r</span>:<span class="title">vendor_iap_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_stop_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">logpersistd_logging_prop:s0</span>   <span class="title">u:object_r</span>:<span class="title">vendor_modem_diag_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_vendor_hbtp_prop:s0</span>          <span class="title">u:object_r</span>:<span class="title">lowpan_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">vendor_mpdecision_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_vendor_imsrcsservice_prop:s0</span> <span class="title">u:object_r</span>:<span class="title">mmc_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">vendor_pd_locater_dbg_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">ctl_vendor_rmt_storage_prop:s0</span>   <span class="title">u:object_r</span>:<span class="title">msm_irqbalance_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">vendor_per_mgr_state_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">dalvik_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">net_dns_prop:s0</span>               <span class="title">u:object_r</span>:<span class="title">vendor_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">debug_prop:s0</span>                    <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span>             <span class="title">u:object_r</span>:<span class="title">vendor_ramdump_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">debuggerd_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">netd_stable_secret_prop:s0</span>    <span class="title">u:object_r</span>:<span class="title">vendor_security_patch_level_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">default_prop:s0</span>                  <span class="title">u:object_r</span>:<span class="title">nfc_prop:s0</span>                   <span class="title">u:object_r</span>:<span class="title">vendor_ssr_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">device_logging_prop:s0</span>           <span class="title">u:object_r</span>:<span class="title">np_cl_prop:s0</span>                 <span class="title">u:object_r</span>:<span class="title">vendor_system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">dhcp_prop:s0</span>                     <span class="title">u:object_r</span>:<span class="title">np_mextransfer_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">vendor_tee_listener_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">dumpstate_options_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">np_persistence_rct_prop:s0</span>    <span class="title">u:object_r</span>:<span class="title">vendor_time_service_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">dumpstate_prop:s0</span>                <span class="title">u:object_r</span>:<span class="title">np_systemlog_deamon_prop:s0</span>   <span class="title">u:object_r</span>:<span class="title">vendor_usb_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">exported2_config_prop:s0</span>         <span class="title">u:object_r</span>:<span class="title">np_vehicle_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">vendor_wifi_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span>        <span class="title">u:object_r</span>:<span class="title">np_wifi_prop:s0</span>               <span class="title">u:object_r</span>:<span class="title">vold_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">exported2_radio_prop:s0</span>          <span class="title">u:object_r</span>:<span class="title">overlay_prop:s0</span>               <span class="title">u:object_r</span>:<span class="title">wifi_log_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span>         <span class="title">u:object_r</span>:<span class="title">pan_result_prop:s0</span>            <span class="title">u:object_r</span>:<span class="title">wifi_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">u:object_r</span>:<span class="title">exported2_vold_prop:s0</span>           <span class="title">u:object_r</span>:<span class="title">persist_debug_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">msmnile_gvmq</span>:/<span class="title">dev</span>/<span class="title">__properties__</span> #</span></span><br></pre></td></tr></table></figure><h2 id="2-2-CreateSerializedPropertyInfo加载属性值"><a href="#2-2-CreateSerializedPropertyInfo加载属性值" class="headerlink" title="2.2 CreateSerializedPropertyInfo加载属性值"></a>2.2 CreateSerializedPropertyInfo加载属性值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateSerializedPropertyInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建了一个动态数组property_infos</span></span><br><span class="line">    <span class="keyword">auto</span> property_infos = <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;PropertyInfoEntry&gt;();</span><br><span class="line">    <span class="comment">//2.通过access做一些权限判断，根据权限的不同将不同的属性通过LoadPropertyInfoFromFile方法写入到property_infos中</span></span><br><span class="line">    <span class="comment">//access()会检查是否可以读/写某一已存在的文件</span></span><br><span class="line">    <span class="comment">//返回值：若所有欲查核的权限都通过了检查则返回0 值，表示成功，只要有一权限被禁止则返回-1。</span></span><br><span class="line">    <span class="keyword">if</span> (access(<span class="string">&quot;/system/etc/selinux/plat_property_contexts&quot;</span>, R_OK) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!LoadPropertyInfoFromFile(<span class="string">&quot;/system/etc/selinux/plat_property_contexts&quot;</span>,</span><br><span class="line">                                      &amp;property_infos)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Don&#x27;t check for failure here, so we always have a sane list of properties.</span></span><br><span class="line">        <span class="comment">// E.g. In case of recovery, the vendor partition will not have mounted and we</span></span><br><span class="line">        <span class="comment">// still need the system / platform properties to function.</span></span><br><span class="line">        <span class="keyword">if</span> (!LoadPropertyInfoFromFile(<span class="string">&quot;/vendor/etc/selinux/vendor_property_contexts&quot;</span>,</span><br><span class="line">                                      &amp;property_infos)) &#123;</span><br><span class="line">            <span class="comment">// Fallback to nonplat_* if vendor_* doesn&#x27;t exist.</span></span><br><span class="line">            LoadPropertyInfoFromFile(<span class="string">&quot;/vendor/etc/selinux/nonplat_property_contexts&quot;</span>,</span><br><span class="line">                                     &amp;property_infos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!LoadPropertyInfoFromFile(<span class="string">&quot;/plat_property_contexts&quot;</span>, &amp;property_infos)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!LoadPropertyInfoFromFile(<span class="string">&quot;/vendor_property_contexts&quot;</span>, &amp;property_infos)) &#123;</span><br><span class="line">            <span class="comment">// Fallback to nonplat_* if vendor_* doesn&#x27;t exist.</span></span><br><span class="line">            LoadPropertyInfoFromFile(<span class="string">&quot;/nonplat_property_contexts&quot;</span>, &amp;property_infos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> serialized_contexts = <span class="built_in">std</span>::<span class="built_in">string</span>();</span><br><span class="line">    <span class="keyword">auto</span> error = <span class="built_in">std</span>::<span class="built_in">string</span>();</span><br><span class="line">    <span class="keyword">if</span> (!BuildTrie(property_infos, <span class="string">&quot;u:object_r:default_prop:s0&quot;</span>, <span class="string">&quot;string&quot;</span>, &amp;serialized_contexts,</span><br><span class="line">                   &amp;error)) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; <span class="string">&quot;Unable to serialize property contexts: &quot;</span> &lt;&lt; error;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">constexpr</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> kPropertyInfosPath[] = <span class="string">&quot;/dev/__properties__/property_info&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!WriteStringToFile(serialized_contexts, kPropertyInfosPath, <span class="number">0444</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">false</span>)) &#123;</span><br><span class="line">        PLOG(ERROR) &lt;&lt; <span class="string">&quot;Unable to write serialized property infos to file&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    selinux_android_restorecon(kPropertyInfosPath, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.2.2 </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">msmnile_gvmq:/<span class="title">dev</span>/<span class="title">__properties__</span> # <span class="title">cat</span> /<span class="title">system</span>/<span class="title">etc</span>/<span class="title">selinux</span>/<span class="title">plat_property_contexts</span></span></span><br><span class="line"><span class="function">#<span class="title">line</span> 1 &quot;<span class="title">system</span>/<span class="title">sepolicy</span>/<span class="title">private</span>/<span class="title">property_contexts</span>&quot;</span></span><br><span class="line"><span class="function">##########################</span></span><br><span class="line"><span class="function"># <span class="title">property</span> <span class="title">service</span> <span class="title">keys</span></span></span><br><span class="line"><span class="function">#</span></span><br><span class="line"><span class="function">#</span></span><br><span class="line"><span class="function"><span class="title">net.rmnet</span>               <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.gprs</span>                <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.ppp</span>                 <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.qmi</span>                 <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.lte</span>                 <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.cdma</span>                <span class="title">u:object_r</span>:<span class="title">net_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">net.dns</span>                 <span class="title">u:object_r</span>:<span class="title">net_dns_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.config</span>          <span class="title">u:object_r</span>:<span class="title">system_radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ril</span>.                    <span class="title">u:object_r</span>:<span class="title">radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.ril</span>.                 <span class="title">u:object_r</span>:<span class="title">radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">gsm</span>.                    <span class="title">u:object_r</span>:<span class="title">radio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.radio</span>           <span class="title">u:object_r</span>:<span class="title">radio_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">net</span>.                    <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dev</span>.                    <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.runtime</span>.             <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.runtime.firstboot</span>    <span class="title">u:object_r</span>:<span class="title">firstboot_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">hw</span>.                     <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hw</span>.                  <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys</span>.                    <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys.cppreopt</span>            <span class="title">u:object_r</span>:<span class="title">cppreopt_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys.powerctl</span>            <span class="title">u:object_r</span>:<span class="title">powerctl_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.ffs</span>.            <span class="title">u:object_r</span>:<span class="title">ffs_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">service</span>.                <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dhcp</span>.                   <span class="title">u:object_r</span>:<span class="title">dhcp_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dhcp.bt</span>-<span class="title">pan.result</span>      <span class="title">u:object_r</span>:<span class="title">pan_result_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">bluetooth</span>.              <span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">debug</span>.                  <span class="title">u:object_r</span>:<span class="title">debug_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">debug.db</span>.               <span class="title">u:object_r</span>:<span class="title">debuggerd_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dumpstate</span>.              <span class="title">u:object_r</span>:<span class="title">dumpstate_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dumpstate.options</span>       <span class="title">u:object_r</span>:<span class="title">dumpstate_options_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">log</span>.                    <span class="title">u:object_r</span>:<span class="title">log_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">log.tag</span>                 <span class="title">u:object_r</span>:<span class="title">log_tag_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">log.tag.WifiHAL</span>         <span class="title">u:object_r</span>:<span class="title">wifi_log_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">security.perf_harden</span>    <span class="title">u:object_r</span>:<span class="title">shell_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">service.adb.root</span>        <span class="title">u:object_r</span>:<span class="title">shell_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">service.adb.tcp.port</span>    <span class="title">u:object_r</span>:<span class="title">shell_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">persist.audio</span>.          <span class="title">u:object_r</span>:<span class="title">audio_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.bluetooth</span>.      <span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.debug</span>.          <span class="title">u:object_r</span>:<span class="title">persist_debug_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.logd</span>.           <span class="title">u:object_r</span>:<span class="title">logd_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.logd</span>.                <span class="title">u:object_r</span>:<span class="title">logd_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.logd.security</span>   <span class="title">u:object_r</span>:<span class="title">device_logging_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.logd.logpersistd</span>        <span class="title">u:object_r</span>:<span class="title">logpersistd_logging_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">logd.logpersistd</span>        <span class="title">u:object_r</span>:<span class="title">logpersistd_logging_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.log.tag</span>         <span class="title">u:object_r</span>:<span class="title">log_tag_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.mmc</span>.            <span class="title">u:object_r</span>:<span class="title">mmc_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.netd.stable_secret</span>      <span class="title">u:object_r</span>:<span class="title">netd_stable_secret_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys</span>.            <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.safemode</span>    <span class="title">u:object_r</span>:<span class="title">safemode_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.sys.safemode</span>         <span class="title">u:object_r</span>:<span class="title">safemode_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.audit_safemode</span>      <span class="title">u:object_r</span>:<span class="title">safemode_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.service</span>.        <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.service.bdroid</span>. <span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.security</span>.       <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.traced.enable</span>   <span class="title">u:object_r</span>:<span class="title">traced_enabled_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.vendor.overlay</span>.  <span class="title">u:object_r</span>:<span class="title">overlay_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.vendor.overlay</span>.  <span class="title">u:object_r</span>:<span class="title">overlay_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boottime</span>.             <span class="title">u:object_r</span>:<span class="title">boottime_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.serialno</span>             <span class="title">u:object_r</span>:<span class="title">serialno_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.btmacaddr</span>       <span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.serialno</span>        <span class="title">u:object_r</span>:<span class="title">serialno_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bt</span>.                  <span class="title">u:object_r</span>:<span class="title">bluetooth_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.bootreason</span>      <span class="title">u:object_r</span>:<span class="title">bootloader_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.boot.reason</span> <span class="title">u:object_r</span>:<span class="title">last_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">sys.boot.reason</span>         <span class="title">u:object_r</span>:<span class="title">system_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">pm</span>.                     <span class="title">u:object_r</span>:<span class="title">pm_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">test.sys.boot.reason</span>    <span class="title">u:object_r</span>:<span class="title">test_boot_reason_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">Boolean</span> <span class="title">property</span> <span class="title">set</span> <span class="title">by</span> <span class="title">system</span> <span class="title">server</span> <span class="title">upon</span> <span class="title">boot</span> <span class="title">indicating</span></span></span><br><span class="line"><span class="function"># <span class="title">if</span> <span class="title">device</span> <span class="title">owner</span> <span class="title">is</span> <span class="title">provisioned</span>.</span></span><br><span class="line"><span class="function"><span class="title">ro.device_owner</span>         <span class="title">u:object_r</span>:<span class="title">device_logging_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">selinux</span> <span class="title">non</span>-<span class="title">persistent</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">selinux.restorecon_recursive</span>   <span class="title">u:object_r</span>:<span class="title">restorecon_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">default</span> <span class="title">property</span> <span class="title">context</span></span></span><br><span class="line"><span class="function">*                       <span class="title">u:object_r</span>:<span class="title">default_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">data</span> <span class="title">partition</span> <span class="title">encryption</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">vold</span>.                   <span class="title">u:object_r</span>:<span class="title">vold_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.crypto</span>.              <span class="title">u:object_r</span>:<span class="title">vold_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">ro.build.fingerprint</span> <span class="title">is</span> <span class="title">either</span> <span class="title">set</span> <span class="title">in</span> /<span class="title">system</span>/<span class="title">build.prop</span>, <span class="title">or</span> <span class="title">is</span></span></span><br><span class="line"><span class="function"># <span class="title">set</span> <span class="title">at</span> <span class="title">runtime</span> <span class="title">by</span> <span class="title">system_server</span>.</span></span><br><span class="line"><span class="function"><span class="title">ro.build.fingerprint</span>    <span class="title">u:object_r</span>:<span class="title">fingerprint_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">ro.persistent_properties.ready</span>  <span class="title">u:object_r</span>:<span class="title">persistent_properties_ready_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">ctl</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.bootanim</span>            <span class="title">u:object_r</span>:<span class="title">ctl_bootanim_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.android.hardware.dumpstate</span> <span class="title">u:object_r</span>:<span class="title">ctl_dumpstate_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.dumpstate</span>           <span class="title">u:object_r</span>:<span class="title">ctl_dumpstate_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.fuse_</span>               <span class="title">u:object_r</span>:<span class="title">ctl_fuse_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.mdnsd</span>               <span class="title">u:object_r</span>:<span class="title">ctl_mdnsd_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.ril</span>-<span class="title">daemon</span>          <span class="title">u:object_r</span>:<span class="title">ctl_rildaemon_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.bugreport</span>           <span class="title">u:object_r</span>:<span class="title">ctl_bugreport_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.console</span>             <span class="title">u:object_r</span>:<span class="title">ctl_console_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl</span>.                    <span class="title">u:object_r</span>:<span class="title">ctl_default_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">Don</span>&#x27;<span class="title">t</span> <span class="title">allow</span> <span class="title">blind</span> <span class="title">access</span> <span class="title">to</span> <span class="title">all</span> <span class="title">services</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.sigstop_on</span>$         <span class="title">u:object_r</span>:<span class="title">ctl_sigstop_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.sigstop_off</span>$        <span class="title">u:object_r</span>:<span class="title">ctl_sigstop_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.start</span>$              <span class="title">u:object_r</span>:<span class="title">ctl_start_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.stop</span>$               <span class="title">u:object_r</span>:<span class="title">ctl_stop_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.restart</span>$            <span class="title">u:object_r</span>:<span class="title">ctl_restart_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.interface_start</span>$    <span class="title">u:object_r</span>:<span class="title">ctl_interface_start_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.interface_stop</span>$     <span class="title">u:object_r</span>:<span class="title">ctl_interface_stop_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ctl.interface_restart</span>$  <span class="title">u:object_r</span>:<span class="title">ctl_interface_restart_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">NFC</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">nfc</span>.                    <span class="title">u:object_r</span>:<span class="title">nfc_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">These</span> <span class="title">properties</span> <span class="title">are</span> <span class="title">not</span> <span class="title">normally</span> <span class="title">set</span> <span class="title">by</span> <span class="title">processes</span> <span class="title">other</span> <span class="title">than</span> <span class="title">init</span>.</span></span><br><span class="line"><span class="function"># <span class="title">They</span> <span class="title">are</span> <span class="title">only</span> <span class="title">distinguished</span> <span class="title">here</span> <span class="title">for</span> <span class="title">setting</span> <span class="title">by</span> <span class="title">qemu</span>-<span class="title">props</span> <span class="title">on</span> <span class="title">the</span></span></span><br><span class="line"><span class="function"># <span class="title">emulator</span>/<span class="title">goldfish</span>.</span></span><br><span class="line"><span class="function"><span class="title">config</span>.                 <span class="title">u:object_r</span>:<span class="title">config_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config</span>.              <span class="title">u:object_r</span>:<span class="title">config_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik</span>.                 <span class="title">u:object_r</span>:<span class="title">dalvik_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.dalvik</span>.              <span class="title">u:object_r</span>:<span class="title">dalvik_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">Shared</span> <span class="title">between</span> <span class="title">system</span> <span class="title">server</span> <span class="title">and</span> <span class="title">wificond</span></span></span><br><span class="line"><span class="function"><span class="title">wlan</span>.                   <span class="title">u:object_r</span>:<span class="title">wifi_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">Lowpan</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">lowpan</span>.                 <span class="title">u:object_r</span>:<span class="title">lowpan_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.lowpan</span>.              <span class="title">u:object_r</span>:<span class="title">lowpan_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">hwservicemanager</span> <span class="title">properties</span></span></span><br><span class="line"><span class="function"><span class="title">hwservicemanager</span>.       <span class="title">u:object_r</span>:<span class="title">hwservicemanager_prop:s0</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">Common</span> <span class="title">default</span> <span class="title">properties</span> <span class="title">for</span> <span class="title">vendor</span> <span class="title">and</span> <span class="title">odm</span>.</span></span><br><span class="line"><span class="function"><span class="title">init.svc.odm</span>.           <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">init.svc.vendor</span>.        <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware</span>.            <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.odm</span>.                 <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vendor</span>.              <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">odm</span>.                    <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.odm</span>.            <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">persist.vendor</span>.         <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">vendor</span>.                 <span class="title">u:object_r</span>:<span class="title">vendor_default_prop:s0</span></span></span><br><span class="line"><span class="function">#<span class="title">line</span> 1 &quot;<span class="title">packages</span>/<span class="title">services</span>/<span class="title">Car</span>/<span class="title">car_product</span>/<span class="title">sepolicy</span>/<span class="title">private</span>/<span class="title">property_contexts</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">boot.car_service_created</span>   <span class="title">u:object_r</span>:<span class="title">system_prop:s0</span></span></span><br><span class="line"><span class="function">#<span class="title">line</span> 1 &quot;<span class="title">system</span>/<span class="title">sepolicy</span>/<span class="title">public</span>/<span class="title">property_contexts</span>&quot;</span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">readable</span></span></span><br><span class="line"><span class="function"><span class="title">persist.radio.airplane_mode_on</span> <span class="title">u:object_r</span>:<span class="title">exported2_radio_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">settable</span></span></span><br><span class="line"><span class="function"><span class="title">af.fast_track_multiplier</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">audio.camerasound.force</span> <span class="title">u:object_r</span>:<span class="title">exported_audio_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">camera.disable_zsl_mode</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">camera.fifo.disable</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.appimageformat</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.backgroundgctype</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.checkjni</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dex2oat</span>-<span class="title">Xms</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dex2oat</span>-<span class="title">Xmx</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dex2oat</span>-<span class="title">filter</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dex2oat</span>-<span class="title">flags</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dex2oat</span>-<span class="title">threads</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.dexopt.secondary</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.execution</span>-<span class="title">mode</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.extra</span>-<span class="title">opts</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.gctype</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heapgrowthlimit</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heapmaxfree</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heapminfree</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heapsize</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heapstartsize</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.heaptargetutilization</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.hot</span>-<span class="title">startup</span>-<span class="title">method</span>-<span class="title">samples</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.image</span>-<span class="title">dex2oat</span>-<span class="title">Xms</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.image</span>-<span class="title">dex2oat</span>-<span class="title">Xmx</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.image</span>-<span class="title">dex2oat</span>-<span class="title">filter</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.image</span>-<span class="title">dex2oat</span>-<span class="title">flags</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.image</span>-<span class="title">dex2oat</span>-<span class="title">threads</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.arm.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.arm.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.arm64.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.arm64.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.mips.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.mips.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.mips64.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.mips64.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.unknown.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.unknown.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.x86.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.x86.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.x86_64.features</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.isa.x86_64.variant</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jitinitialsize</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jitmaxsize</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jitprithreadweight</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jitthreshold</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jittransitionweight</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.jniopts</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.lockprof.threshold</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.method</span>-<span class="title">trace</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.method</span>-<span class="title">trace</span>-<span class="title">file</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.method</span>-<span class="title">trace</span>-<span class="title">file</span>-<span class="title">siz</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.method</span>-<span class="title">trace</span>-<span class="title">stream</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.profilesystemserver</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.profilebootimage</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.stack</span>-<span class="title">trace</span>-<span class="title">dir</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.usejit</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.usejitprofiles</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dalvik.vm.zygote.max</span>-<span class="title">boot</span>-<span class="title">retry</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">drm.service.enabled</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">keyguard.no_require_sim</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">media.recorder.show_manufacturer_and_model</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">media.stagefright.cache</span>-<span class="title">params</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.bluetooth.a2dp_offload.cap</span> <span class="title">u:object_r</span>:<span class="title">bluetooth_a2dp_offload_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.bluetooth.a2dp_offload.disabled</span> <span class="title">u:object_r</span>:<span class="title">bluetooth_a2dp_offload_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">persist.config.calibration_fac</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.dbg.volte_avail_ovr</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">persist.dbg.vt_avail_ovr</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">persist.dbg.wfc_avail_ovr</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">persist.radio.multisim.config</span> <span class="title">u:object_r</span>:<span class="title">exported3_radio_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.dalvik.vm.lib</span>.2 <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.media.avsync</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.hdmi.keep_awake</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.sf.color_saturation</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.sf.native_mode</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">pm.dexopt.ab</span>-<span class="title">ota</span> <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">pm.dexopt.bg</span>-<span class="title">dexopt</span> <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">pm.dexopt.boot</span> <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">pm.dexopt.first</span>-<span class="title">boot</span> <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">pm.dexopt.install</span> <span class="title">u:object_r</span>:<span class="title">exported_pm_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.audio.monitorRotation</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bluetooth.a2dp_offload.supported</span> <span class="title">u:object_r</span>:<span class="title">bluetooth_a2dp_offload_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.vendor.overlay.theme</span> <span class="title">u:object_r</span>:<span class="title">exported_overlay_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.wificountrycode</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bt.bdaddr_path</span> <span class="title">u:object_r</span>:<span class="title">exported_bluetooth_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.camera.notify_nfc</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.com.android.dataroaming</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.com.android.prov_mobiledata</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.com.google.clientidbase</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.alarm_alert</span> <span class="title">u:object_r</span>:<span class="title">exported2_config_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.media_vol_steps</span> <span class="title">u:object_r</span>:<span class="title">exported2_config_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.notification_sound</span> <span class="title">u:object_r</span>:<span class="title">exported2_config_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.ringtone</span> <span class="title">u:object_r</span>:<span class="title">exported2_config_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.control_privapp_permissions</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.cp_system_other_odex</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.crypto.scrypt_params</span> <span class="title">u:object_r</span>:<span class="title">exported2_vold_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.dalvik.vm.native.bridge</span> <span class="title">u:object_r</span>:<span class="title">exported_dalvik_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.enable_boot_charger_mode</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.gfx.driver</span>.0 <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hdmi.device_type</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hdmi.wake_on_hotplug</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.oem_unlock_supported</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.opengles.version</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.radio.noril</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.retaildemo.video_path</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.sf.disable_triple_buffer</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.sf.lcd_density</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.storage_manager.enabled</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.telephony.call_ring.multiple</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.telephony.default_cdma_sub</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.telephony.default_network</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.url.legal</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.url.legal.android_privacy</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vendor.build.security_patch</span> <span class="title">u:object_r</span>:<span class="title">vendor_security_patch_level_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.zygote</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sendbug.preferred.domain</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.controller</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.ffs.max_read</span> <span class="title">u:object_r</span>:<span class="title">exported_ffs_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.ffs.max_write</span> <span class="title">u:object_r</span>:<span class="title">exported_ffs_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.mtp.device_type</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.state</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">telephony.lteOnCdmaDevice</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">tombstoned.max_tombstone_count</span> <span class="title">u:object_r</span>:<span class="title">exported3_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">vold.post_fs_data_done</span> <span class="title">u:object_r</span>:<span class="title">exported2_vold_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">wlan.driver.status</span> <span class="title">u:object_r</span>:<span class="title">exported_wifi_prop:s0</span> <span class="title">exact</span> <span class="title">enum</span> <span class="title">ok</span> <span class="title">unloaded</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">readable</span>|<span class="title">vendor</span>-<span class="title">init</span>-<span class="title">actionable</span></span></span><br><span class="line"><span class="function"><span class="title">dev.bootcomplete</span> <span class="title">u:object_r</span>:<span class="title">exported3_system_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.usb.usbradio.config</span> <span class="title">u:object_r</span>:<span class="title">exported3_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sys.boot_completed</span> <span class="title">u:object_r</span>:<span class="title">exported3_system_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">sys.retaildemo.enabled</span> <span class="title">u:object_r</span>:<span class="title">exported3_system_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">settable</span>|<span class="title">vendor</span>-<span class="title">init</span>-<span class="title">actionable</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.zram_enabled</span> <span class="title">u:object_r</span>:<span class="title">exported2_system_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.config</span> <span class="title">u:object_r</span>:<span class="title">exported_system_radio_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sys.usb.configfs</span> <span class="title">u:object_r</span>:<span class="title">exported_system_radio_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">public</span>-<span class="title">readable</span></span></span><br><span class="line"><span class="function"><span class="title">aac_drc_boost</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aac_drc_cut</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aac_drc_enc_target_level</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aac_drc_heavy</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aac_drc_reference_level</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.aac_drc_effect_type</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">drm</span>.64<span class="title">bit.enabled</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">dumpstate.dry_run</span> <span class="title">u:object_r</span>:<span class="title">exported_dumpstate_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">hal.instrumentation.enable</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">init.svc.tombstoned</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">libc.debug.malloc.options</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">libc.debug.malloc.program</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">libc.debug.hooks.enable</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">persist.sys.timezone</span> <span class="title">u:object_r</span>:<span class="title">exported_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.adb.secure</span> <span class="title">u:object_r</span>:<span class="title">exported_secure_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.arch</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.audio.ignore_effects</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.baseband</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.avb_version</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.baseband</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.bootdevice</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.bootloader</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.boottime</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.console</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.hardware</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.hardware.color</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.hardware.sku</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.keymaster</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.mode</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.vbmeta.avb_version</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.verifiedbootstate</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.veritymode</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bootimage.build.date</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bootimage.build.date.utc</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bootimage.build.fingerprint</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bootloader</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.date</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.date.utc</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.description</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.display.id</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.fingerprint</span> <span class="title">u:object_r</span>:<span class="title">exported_fingerprint_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.host</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.id</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.product</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.system_root_image</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.tags</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.user</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.base_os</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.codename</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.incremental</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.preview_sdk</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.release</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.sdk</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.version.security_patch</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.crypto.state</span> <span class="title">u:object_r</span>:<span class="title">exported_vold_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.crypto.type</span> <span class="title">u:object_r</span>:<span class="title">exported_vold_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.debuggable</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.brand</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.cpu.abi</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.cpu.abilist</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.device</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.manufacturer</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.model</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.name</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.property_service.version</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.revision</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.secure</span> <span class="title">u:object_r</span>:<span class="title">exported_secure_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">service.bootanim.exit</span> <span class="title">u:object_r</span>:<span class="title">exported_system_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">sys.boot_from_charger_mode</span> <span class="title">u:object_r</span>:<span class="title">exported_system_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">vold.decrypt</span> <span class="title">u:object_r</span>:<span class="title">exported_vold_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">settable</span>|<span class="title">public</span>-<span class="title">readable</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.hw_burst_min_usec</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.minimum_sleep_usec</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.mixer_bursts</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.mmap_exclusive_policy</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.mmap_policy</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">aaudio.wakeup_delay_usec</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">gsm.sim.operator.numeric</span> <span class="title">u:object_r</span>:<span class="title">exported_radio_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">media.mediadrmservice.enable</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">persist.rcs.supported</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">rcs.publish.status</span> <span class="title">u:object_r</span>:<span class="title">exported_radio_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.board.platform</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.fake_battery</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.hardware.revision</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.product.hardware.sku</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.slot_suffix</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.carrier</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.low_ram</span> <span class="title">u:object_r</span>:<span class="title">exported_config_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.config.vc_call_vol_steps</span> <span class="title">u:object_r</span>:<span class="title">exported_config_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.frp.pst</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.activity_recognition</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio.a2dp</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio.hearing_aid</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio.primary</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio.usb</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.audio_policy</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.bootctrl</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.camera</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.consumerir</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.context_hub</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.egl</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.fingerprint</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.flp</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.gatekeeper</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.gps</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.gralloc</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.hdmi_cec</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.hwcomposer</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.input</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.keystore</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.keystore_desede</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.lights</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.local_time</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.memtrack</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.nfc</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.nfc_nci</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.nfc_tag</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.nvram</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.power</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.radio</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.sensors</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.sound_trigger</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.thermal</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.tv_input</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.type</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.vehicle</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.vibrator</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.virtual_device</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.hardware.vulkan</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.kernel.qemu</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.kernel.qemu</span>. <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span></span></span><br><span class="line"><span class="function"><span class="title">ro.kernel.android.bootanim</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.odm.build.date</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.odm.build.date.utc</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.odm.build.fingerprint</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.oem.key1</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.board</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.cpu.abilist32</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.cpu.abilist64</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.first_api_level</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.odm.brand</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.odm.device</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.odm.manufacturer</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.odm.model</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.odm.name</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.vendor.brand</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.vendor.device</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.vendor.manufacturer</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.vendor.model</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.product.vendor.name</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vendor.build.date</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vendor.build.date.utc</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vendor.build.fingerprint</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vndk.lite</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vndk.version</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.vts.coverage</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">wifi.direct.interface</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">wifi.interface</span> <span class="title">u:object_r</span>:<span class="title">exported_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># <span class="title">vendor</span>-<span class="title">init</span>-<span class="title">actionable</span>|<span class="title">public</span>-<span class="title">readable</span></span></span><br><span class="line"><span class="function"><span class="title">ro.boot.revision</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.bootmode</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">ro.build.type</span> <span class="title">u:object_r</span>:<span class="title">exported2_default_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">sys.shutdown.requested</span> <span class="title">u:object_r</span>:<span class="title">exported_system_prop:s0</span> <span class="title">exact</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="title">msmnile_gvmq</span>:/<span class="title">dev</span>/<span class="title">__properties__</span> #</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">LoadPropertyInfoFromFile</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; filename,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;PropertyInfoEntry&gt;* property_infos)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> file_contents = <span class="built_in">std</span>::<span class="built_in">string</span>();</span><br><span class="line">    <span class="comment">//读取&quot;/system/etc/selinux/plat_property_contexts&quot;文件的内容成字符串</span></span><br><span class="line">    <span class="keyword">if</span> (!ReadFileToString(filename, &amp;file_contents)) &#123;</span><br><span class="line">        PLOG(ERROR) &lt;&lt; <span class="string">&quot;Could not read properties from &#x27;&quot;</span> &lt;&lt; filename &lt;&lt; <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> errors = <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;;</span><br><span class="line">    ParsePropertyInfoFile(file_contents, property_infos, &amp;errors);</span><br><span class="line">    <span class="comment">// Individual parsing errors are reported but do not cause a failed boot, which is what</span></span><br><span class="line">    <span class="comment">// returning false would do here.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; error : errors) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; <span class="string">&quot;Could not read line from &#x27;&quot;</span> &lt;&lt; filename &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ParsePropertyInfoFile</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; file_contents,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;PropertyInfoEntry&gt;* property_infos,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;* errors)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Do not clear property_infos to allow this function to be called on multiple files, with</span></span><br><span class="line">  <span class="comment">// their results concatenated.</span></span><br><span class="line">  errors-&gt;clear();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; line : Split(file_contents, <span class="string">&quot;\n&quot;</span>)) &#123;<span class="comment">//遍历整个文件，一行一行的读取</span></span><br><span class="line">    <span class="keyword">auto</span> trimmed_line = Trim(line);</span><br><span class="line">    <span class="keyword">if</span> (trimmed_line.empty() || StartsWith(trimmed_line, <span class="string">&quot;#&quot;</span>)) &#123;<span class="comment">//如果当前行的数据为空，或者起始为#时，跳过该行</span></span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> property_info_entry = PropertyInfoEntry&#123;&#125;;</span><br><span class="line">    <span class="keyword">auto</span> parse_error = <span class="built_in">std</span>::<span class="built_in">string</span>&#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (!ParsePropertyInfoLine(trimmed_line, &amp;property_info_entry, &amp;parse_error)) &#123;</span><br><span class="line">      errors-&gt;emplace_back(parse_error);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    property_infos-&gt;emplace_back(property_info_entry);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ParsePropertyInfoLine</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; line, PropertyInfoEntry* out, <span class="built_in">std</span>::<span class="built_in">string</span>* error)</span> </span>&#123;</span><br><span class="line">  <span class="comment">//假设某一行为sys.shutdown.requested u:object_r:exported_system_prop:s0 exact string</span></span><br><span class="line">  <span class="keyword">auto</span> tokenizer = SpaceTokenizer(line);<span class="comment">//根据空格将line进行分割</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> property = tokenizer.GetNext();<span class="comment">//获取分割后的property</span></span><br><span class="line">  <span class="keyword">if</span> (property.empty()) &#123;</span><br><span class="line">    *error = <span class="string">&quot;Did not find a property entry in &#x27;&quot;</span> + line + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> context = tokenizer.GetNext();</span><br><span class="line">  <span class="keyword">if</span> (context.empty()) &#123;</span><br><span class="line">    *error = <span class="string">&quot;Did not find a context entry in &#x27;&quot;</span> + line + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// It is not an error to not find exact_match or a type, as older files will not contain them.</span></span><br><span class="line">  <span class="keyword">auto</span> exact_match = tokenizer.GetNext();</span><br><span class="line">  <span class="comment">// We reformat type to be space deliminated regardless of the input whitespace for easier storage</span></span><br><span class="line">  <span class="comment">// and subsequent parsing.</span></span><br><span class="line">  <span class="keyword">auto</span> type_strings = <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;;</span><br><span class="line">  <span class="keyword">auto</span> type = tokenizer.GetNext();</span><br><span class="line">  <span class="keyword">while</span> (!type.empty()) &#123;</span><br><span class="line">    type_strings.emplace_back(type);</span><br><span class="line">    type = tokenizer.GetNext();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!type_strings.empty() &amp;&amp; !IsTypeValid(type_strings)) &#123;</span><br><span class="line">    *error = <span class="string">&quot;Type &#x27;&quot;</span> + Join(type_strings, <span class="string">&quot; &quot;</span>) + <span class="string">&quot;&#x27; is not valid&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  *out = &#123;property, context, Join(type_strings, <span class="string">&quot; &quot;</span>), exact_match == <span class="string">&quot;exact&quot;</span>&#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.3 __system_property_area_init</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///bionic/libc/bionic/system_property_api.cpp</span></span><br><span class="line"><span class="keyword">int</span> __system_property_area_init() &#123;</span><br><span class="line">  <span class="keyword">bool</span> fsetxattr_failed = <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//#define PROP_FILENAME &quot;/dev/__properties__&quot;</span></span><br><span class="line">  <span class="keyword">return</span> system_properties.AreaInit(PROP_FILENAME, &amp;fsetxattr_failed) &amp;&amp; !fsetxattr_failed ? <span class="number">0</span> : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化属性内存区域</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SystemProperties::AreaInit</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* filename, <span class="keyword">bool</span>* fsetxattr_failed)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">strlen</span>(filename) &gt; PROP_FILENAME_MAX) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">strcpy</span>(property_filename_, filename);</span><br><span class="line"></span><br><span class="line">  contexts_ = <span class="keyword">new</span> (contexts_data_) ContextsSerialized();</span><br><span class="line">  <span class="keyword">if</span> (!contexts_-&gt;Initialize(<span class="literal">true</span>, property_filename_, fsetxattr_failed)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  initialized_ = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ContextsSerialized::Initialize</span><span class="params">(<span class="keyword">bool</span> writable, <span class="keyword">const</span> <span class="keyword">char</span>* filename, <span class="keyword">bool</span>* fsetxattr_failed)</span> </span>&#123;</span><br><span class="line">  filename_ = filename;</span><br><span class="line">  <span class="comment">//1.</span></span><br><span class="line">  <span class="keyword">if</span> (!InitializeProperties()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (writable) &#123;</span><br><span class="line">    mkdir(filename_, S_IRWXU | S_IXGRP | S_IXOTH);</span><br><span class="line">    <span class="keyword">bool</span> open_failed = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (fsetxattr_failed) &#123;</span><br><span class="line">      *fsetxattr_failed = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; num_context_nodes_; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!context_nodes_[i].Open(<span class="literal">true</span>, fsetxattr_failed)) &#123;</span><br><span class="line">        open_failed = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (open_failed || !MapSerialPropertyArea(<span class="literal">true</span>, fsetxattr_failed)) &#123;</span><br><span class="line">      FreeAndUnmap();</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!MapSerialPropertyArea(<span class="literal">false</span>, <span class="literal">nullptr</span>)) &#123;</span><br><span class="line">      FreeAndUnmap();</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ContextsSerialized::InitializeProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!property_info_area_file_.LoadDefaultPath()) &#123;<span class="comment">//&quot;/dev/__properties__/property_info&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!InitializeContextNodes()) &#123;</span><br><span class="line">    FreeAndUnmap();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PropertyInfoAreaFile::LoadDefaultPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> LoadPath(<span class="string">&quot;/dev/__properties__/property_info&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PropertyInfoAreaFile::LoadPath</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* filename)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> fd = open(filename, O_CLOEXEC | O_NOFOLLOW | O_RDONLY);</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">fd_stat</span>;</span></span><br><span class="line">  <span class="keyword">if</span> (fstat(fd, &amp;fd_stat) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((fd_stat.st_uid != <span class="number">0</span>) || (fd_stat.st_gid != <span class="number">0</span>) ||</span><br><span class="line">      ((fd_stat.st_mode &amp; (S_IWGRP | S_IWOTH)) != <span class="number">0</span>) ||</span><br><span class="line">      (fd_stat.st_size &lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">off_t</span>&gt;(<span class="keyword">sizeof</span>(PropertyInfoArea)))) &#123;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> mmap_size = fd_stat.st_size;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span>* map_result = mmap(<span class="literal">nullptr</span>, mmap_size, PROT_READ, MAP_SHARED, fd, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (map_result == MAP_FAILED) &#123;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> property_info_area = <span class="keyword">reinterpret_cast</span>&lt;PropertyInfoArea*&gt;(map_result);</span><br><span class="line">  <span class="keyword">if</span> (property_info_area-&gt;minimum_supported_version() &gt; <span class="number">1</span> ||</span><br><span class="line">      property_info_area-&gt;size() != mmap_size) &#123;</span><br><span class="line">    munmap(map_result, mmap_size);</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  close(fd);</span><br><span class="line">  mmap_base_ = map_result;</span><br><span class="line">  mmap_size_ = mmap_size;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3-加载启动默认属性"><a href="#3-加载启动默认属性" class="headerlink" title="3.加载启动默认属性"></a>3.加载启动默认属性</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">property_load_boot_defaults</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!load_properties_from_file(<span class="string">&quot;/system/etc/prop.default&quot;</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">        <span class="comment">// Try recovery path</span></span><br><span class="line">        <span class="keyword">if</span> (!load_properties_from_file(<span class="string">&quot;/prop.default&quot;</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">            <span class="comment">// Try legacy path</span></span><br><span class="line">            load_properties_from_file(<span class="string">&quot;/default.prop&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    load_properties_from_file(<span class="string">&quot;/product/build.prop&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    load_properties_from_file(<span class="string">&quot;/odm/default.prop&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    load_properties_from_file(<span class="string">&quot;/vendor/default.prop&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    update_sys_usb_config();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Filter is used to decide which properties to load: NULL loads all keys,</span></span><br><span class="line"><span class="comment">// &quot;ro.foo.*&quot; is a prefix match, and &quot;ro.foo.bar&quot; is an exact match.</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">load_properties_from_file</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* filename, <span class="keyword">const</span> <span class="keyword">char</span>* filter)</span> </span>&#123;</span><br><span class="line">    Timer t;</span><br><span class="line">    <span class="keyword">auto</span> file_contents = ReadFile(filename);</span><br><span class="line">    <span class="keyword">if</span> (!file_contents) &#123;</span><br><span class="line">        PLOG(WARNING) &lt;&lt; <span class="string">&quot;Couldn&#x27;t load property file &#x27;&quot;</span> &lt;&lt; filename</span><br><span class="line">                      &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; file_contents.error();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    file_contents-&gt;push_back(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    LoadProperties(file_contents-&gt;data(), filter, filename);</span><br><span class="line">    LOG(VERBOSE) &lt;&lt; <span class="string">&quot;(Loading properties from &quot;</span> &lt;&lt; filename &lt;&lt; <span class="string">&quot; took &quot;</span> &lt;&lt; t &lt;&lt; <span class="string">&quot;.)&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LoadProperties</span><span class="params">(<span class="keyword">char</span>* data, <span class="keyword">const</span> <span class="keyword">char</span>* filter, <span class="keyword">const</span> <span class="keyword">char</span>* filename)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *key, *value, *eol, *sol, *tmp, *fn;</span><br><span class="line">    <span class="keyword">size_t</span> flen = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* context = kInitContext.c_str();</span><br><span class="line">    <span class="keyword">if</span> (SelinuxHasVendorInit()) &#123;<span class="comment">//默认返回true</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; [path_prefix, secontext] : paths_and_secontexts) &#123;</span><br><span class="line">            <span class="keyword">if</span> (StartsWith(filename, path_prefix)) &#123;</span><br><span class="line">                context = secontext;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (filter) &#123;</span><br><span class="line">        flen = <span class="built_in">strlen</span>(filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sol = data;</span><br><span class="line">    <span class="keyword">while</span> ((eol = <span class="built_in">strchr</span>(sol, <span class="string">&#x27;\n&#x27;</span>))) &#123;</span><br><span class="line">        key = sol;</span><br><span class="line">        *eol++ = <span class="number">0</span>;</span><br><span class="line">        sol = eol;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isspace</span>(*key)) key++;</span><br><span class="line">        <span class="keyword">if</span> (*key == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        tmp = eol - <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> ((tmp &gt; key) &amp;&amp; <span class="built_in">isspace</span>(*tmp)) *tmp-- = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(key, <span class="string">&quot;import &quot;</span>, <span class="number">7</span>) &amp;&amp; flen == <span class="number">0</span>) &#123;</span><br><span class="line">            fn = key + <span class="number">7</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isspace</span>(*fn)) fn++;</span><br><span class="line"></span><br><span class="line">            key = <span class="built_in">strchr</span>(fn, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (key) &#123;</span><br><span class="line">                *key++ = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (<span class="built_in">isspace</span>(*key)) key++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            load_properties_from_file(fn, key);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            value = <span class="built_in">strchr</span>(key, <span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!value) <span class="keyword">continue</span>;</span><br><span class="line">            *value++ = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            tmp = value - <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> ((tmp &gt; key) &amp;&amp; <span class="built_in">isspace</span>(*tmp)) *tmp-- = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isspace</span>(*value)) value++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (filter[flen - <span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strncmp</span>(key, filter, flen - <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, filter)) <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (StartsWith(key, <span class="string">&quot;ctl.&quot;</span>) || key == <span class="string">&quot;sys.powerctl&quot;</span>s ||</span><br><span class="line">                key == <span class="string">&quot;selinux.restorecon_recursive&quot;</span>s) &#123;</span><br><span class="line">                LOG(ERROR) &lt;&lt; <span class="string">&quot;Ignoring disallowed property &#x27;&quot;</span> &lt;&lt; key</span><br><span class="line">                           &lt;&lt; <span class="string">&quot;&#x27; with special meaning in prop file &#x27;&quot;</span> &lt;&lt; filename &lt;&lt; <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">uint32_t</span> result = <span class="number">0</span>;</span><br><span class="line">            ucred cr = &#123;.pid = <span class="number">1</span>, .uid = <span class="number">0</span>, .gid = <span class="number">0</span>&#125;;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">string</span> error;</span><br><span class="line">            result = HandlePropertySet(key, value, context, cr, &amp;error);</span><br><span class="line">            <span class="keyword">if</span> (result != PROP_SUCCESS) &#123;</span><br><span class="line">                LOG(ERROR) &lt;&lt; <span class="string">&quot;Unable to set property &#x27;&quot;</span> &lt;&lt; key &lt;&lt; <span class="string">&quot;&#x27; to &#x27;&quot;</span> &lt;&lt; value</span><br><span class="line">                           &lt;&lt; <span class="string">&quot;&#x27; in property file &#x27;&quot;</span> &lt;&lt; filename &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; error;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;属性服务的初始化是init进程的第二阶段执行的，因此，本文主要从init进程的属性初始化开始，对属性服务进行分析。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/init%E4%B9%8BPropertyService/init-1604401861370.bmp&quot;</summary>
      
    
    
    
    <category term="init进程" scheme="http://example.com/categories/init%E8%BF%9B%E7%A8%8B/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/11/02/android%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2020/11/02/android%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-11-02T02:39:40.620Z</published>
    <updated>2020-11-03T06:54:18.205Z</updated>
    
    <content type="html"><![CDATA[<p>android常用命令</p><p>ps:</p><p>ps -ef</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;android常用命令&lt;/p&gt;
&lt;p&gt;ps:&lt;/p&gt;
&lt;p&gt;ps -ef&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>init进程-02</title>
    <link href="http://example.com/2020/11/02/init-02/"/>
    <id>http://example.com/2020/11/02/init-02/</id>
    <published>2020-11-02T01:50:34.000Z</published>
    <updated>2020-11-03T11:19:16.690Z</updated>
    
    <content type="html"><![CDATA[<p>init进程是Linux系统中用户空间的第一个进程，进程号固定为1。Kernel启动后，在用户空间启动init进<br>程，并调用init中的main()方法执行init进程的职责。  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> __ref <span class="title">kernel_init</span><span class="params">(<span class="keyword">void</span> *unused)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">kernel_init_freeable();<span class="comment">//进行init进程的一些初始化操作</span></span><br><span class="line"><span class="comment">/* need to finish all async __init code before freeing the memory */</span></span><br><span class="line">    <span class="comment">// 等待所有异步调用执行完成,在释放内存前，必须完成所有的异步 __init 代码</span></span><br><span class="line">async_synchronize_full();</span><br><span class="line">    <span class="comment">// 释放所有init.* 段中的内存</span></span><br><span class="line">ftrace_free_init_mem();</span><br><span class="line">free_initmem();</span><br><span class="line">mark_readonly();</span><br><span class="line">    <span class="comment">// 设置系统状态为运行状态</span></span><br><span class="line">system_state = SYSTEM_RUNNING;</span><br><span class="line">    <span class="comment">// 设定NUMA系统的默认内存访问策略</span></span><br><span class="line">numa_default_policy();</span><br><span class="line"></span><br><span class="line">rcu_end_inkernel_boot();</span><br><span class="line">place_marker(<span class="string">&quot;M - DRIVER Kernel Boot Done&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ramdisk_execute_command的值为&quot;/init&quot;</span></span><br><span class="line"><span class="keyword">if</span> (ramdisk_execute_command) &#123;</span><br><span class="line">ret = run_init_process(ramdisk_execute_command);<span class="comment">//运行根目录下的init程序</span></span><br><span class="line"><span class="keyword">if</span> (!ret)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">pr_err(<span class="string">&quot;Failed to execute %s (error %d)\n&quot;</span>,</span><br><span class="line">       ramdisk_execute_command, ret);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * We try each of these until one succeeds.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The Bourne shell can be used instead of init if we are</span></span><br><span class="line"><span class="comment"> * trying to recover a really broken machine.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (execute_command) &#123;<span class="comment">//execute_command的值如果有定义就去根目录下找对应的应用程序,然后启动</span></span><br><span class="line">ret = run_init_process(execute_command);</span><br><span class="line"><span class="keyword">if</span> (!ret)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">panic(<span class="string">&quot;Requested init %s failed (error %d).&quot;</span>,</span><br><span class="line">      execute_command, ret);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//如果ramdisk_execute_command和execute_command定义的应用程序都没有找到，</span></span><br><span class="line">    <span class="comment">//就到根目录下找 /sbin/init，/etc/init，/bin/init,/bin/sh 这四个应用程序进行启动</span></span><br><span class="line"><span class="keyword">if</span> (!try_to_run_init_process(<span class="string">&quot;/sbin/init&quot;</span>) ||</span><br><span class="line">    !try_to_run_init_process(<span class="string">&quot;/etc/init&quot;</span>) ||</span><br><span class="line">    !try_to_run_init_process(<span class="string">&quot;/bin/init&quot;</span>) ||</span><br><span class="line">    !try_to_run_init_process(<span class="string">&quot;/bin/sh&quot;</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">panic(<span class="string">&quot;No working init found.  Try passing init= option to kernel. &quot;</span></span><br><span class="line">      <span class="string">&quot;See Linux Documentation/admin-guide/init.rst for guidance.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>kernel_init主要工作是完成一些init的初始化操作，然后去系统根目录下依次找ramdisk_execute_command和execute_command设置的应用程序，如果这两个目录都找不到，就依次去根目录下找 /sbin/init，/etc/init，/bin/init,/bin/sh 这四个应用程序进行启动，只要这些应用程序有一个启动了，其他就不启动了.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1.第一个参数argc表示参数个数，第二个参数是参数列表，也就是具体的参数</span></span><br><span class="line"><span class="comment"> * 2.main函数有四个参数入口，</span></span><br><span class="line"><span class="comment"> *一是参数中有ueventd，进入ueventd_main</span></span><br><span class="line"><span class="comment"> *二是参数中有watchdogd，进入watchdogd_main</span></span><br><span class="line"><span class="comment"> *三是参数中有subcontext，进入InitKernelLogging 和 SubcontextMain</span></span><br><span class="line"><span class="comment"> *3.main的执行顺序如下：</span></span><br><span class="line"><span class="comment">   *  (1)ueventd_main    init进程创建子进程ueventd，</span></span><br><span class="line"><span class="comment">   *      并将创建设备节点文件的工作托付给ueventd，ueventd通过两种方式创建设备节点文件</span></span><br><span class="line"><span class="comment">   *  (2)启动第一阶段</span></span><br><span class="line"><span class="comment">   *     1.</span></span><br><span class="line"><span class="comment">   *  (3)启动第二阶段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(basename(argv[<span class="number">0</span>]), <span class="string">&quot;ueventd&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ueventd_main(argc, argv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(basename(argv[<span class="number">0</span>]), <span class="string">&quot;watchdogd&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> watchdogd_main(argc, argv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &gt; <span class="number">1</span> &amp;&amp; !<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;subcontext&quot;</span>)) &#123;</span><br><span class="line">        InitKernelLogging(argv);</span><br><span class="line">        <span class="keyword">const</span> BuiltinFunctionMap function_map;</span><br><span class="line">        <span class="keyword">return</span> SubcontextMain(argc, argv, &amp;function_map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (REBOOT_BOOTLOADER_ON_PANIC) &#123;</span><br><span class="line">        <span class="comment">//将各种信号量，如SIGABRT,SIGBUS等的行为设置为SA_RESTART,一旦监听到这些信号即执行重启系统</span></span><br><span class="line">        InstallRebootSignalHandlers();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> is_first_stage = (getenv(<span class="string">&quot;INIT_SECOND_STAGE&quot;</span>) == <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_first_stage) &#123;</span><br><span class="line">        boot_clock::time_point start_time = boot_clock::now();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Clear the umask.</span></span><br><span class="line">        umask(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        clearenv();</span><br><span class="line">        <span class="comment">/*setenv函数</span></span><br><span class="line"><span class="comment">        setenv:</span></span><br><span class="line"><span class="comment"> * 将名为name,对应值为value的环境变量放入环境变量列表中.</span></span><br><span class="line"><span class="comment"> * 如果rewrite值为0且名为name的环境变量已经存在，则先删除该变量的现有定义；</span></span><br><span class="line"><span class="comment"> * 如果rewrite值为0，则不删除起原来定义，也不设置新的vaule值，而且也不出错;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        setenv(<span class="string">&quot;PATH&quot;</span>, _PATH_DEFPATH, <span class="number">1</span>);<span class="comment">//#define_PATH_DEFPATH&quot;/usr/bin:/bin&quot;,这个就是设置环境变量</span></span><br><span class="line">        <span class="comment">// Get the basic filesystem setup we need put together in the initramdisk</span></span><br><span class="line">        <span class="comment">// on / and then we&#x27;ll let the rc file figure out the rest.</span></span><br><span class="line">        mount(<span class="string">&quot;tmpfs&quot;</span>, <span class="string">&quot;/dev&quot;</span>, <span class="string">&quot;tmpfs&quot;</span>, MS_NOSUID, <span class="string">&quot;mode=0755&quot;</span>);</span><br><span class="line">        mkdir(<span class="string">&quot;/dev/pts&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">        mkdir(<span class="string">&quot;/dev/socket&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        source：将要挂上的文件系统，通常是一个设备名。</span></span><br><span class="line"><span class="comment">target：文件系统所要挂在的目标目录。</span></span><br><span class="line"><span class="comment">filesystemtype：文件系统的类型，可以是&quot;ext2&quot;，&quot;msdos&quot;，&quot;proc&quot;，&quot;nfs&quot;，&quot;iso9660&quot; 。。。</span></span><br><span class="line"><span class="comment">mountflags：指定文件系统的读写访问标志，可能值有以下</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        mount(<span class="string">&quot;devpts&quot;</span>, <span class="string">&quot;/dev/pts&quot;</span>, <span class="string">&quot;devpts&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">define</span> MAKE_STR(x) __STRING(x)</span></span><br><span class="line">        mount(<span class="string">&quot;proc&quot;</span>, <span class="string">&quot;/proc&quot;</span>, <span class="string">&quot;proc&quot;</span>, <span class="number">0</span>, <span class="string">&quot;hidepid=2,gid=&quot;</span> MAKE_STR(AID_READPROC));</span><br><span class="line">        <span class="comment">// Don&#x27;t expose the raw commandline to unprivileged processes.</span></span><br><span class="line">        chmod(<span class="string">&quot;/proc/cmdline&quot;</span>, <span class="number">0440</span>);</span><br><span class="line">        <span class="keyword">gid_t</span> groups[] = &#123; AID_READPROC &#125;;</span><br><span class="line">        setgroups(arraysize(groups), groups);</span><br><span class="line">        mount(<span class="string">&quot;sysfs&quot;</span>, <span class="string">&quot;/sys&quot;</span>, <span class="string">&quot;sysfs&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        mount(<span class="string">&quot;selinuxfs&quot;</span>, <span class="string">&quot;/sys/fs/selinux&quot;</span>, <span class="string">&quot;selinuxfs&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);<span class="comment">//8.0之后新增，挂载selinuxfs文件系统</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        第一个参数表示你要创建的文件的名称，</span></span><br><span class="line"><span class="comment">        第二个参数表示文件类型，</span></span><br><span class="line"><span class="comment">        第三个参数表示该文件对应的设备文件的设备号。只有当文件类型为 S_IFCHR 或 S_IFBLK 的时候该文件才有设备号，创建普通文件时传入0即可。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        mknod(<span class="string">&quot;/dev/kmsg&quot;</span>, S_IFCHR | <span class="number">0600</span>, makedev(<span class="number">1</span>, <span class="number">11</span>));;<span class="comment">//创建kmsg设备节点，用户kernel log输出</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">if</span> <span class="title">constexpr</span> <span class="params">(WORLD_WRITABLE_KMSG)</span> </span>&#123;</span><br><span class="line">            mknod(<span class="string">&quot;/dev/kmsg_debug&quot;</span>, S_IFCHR | <span class="number">0622</span>, makedev(<span class="number">1</span>, <span class="number">11</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mknod(<span class="string">&quot;/dev/random&quot;</span>, S_IFCHR | <span class="number">0666</span>, makedev(<span class="number">1</span>, <span class="number">8</span>));</span><br><span class="line">        mknod(<span class="string">&quot;/dev/urandom&quot;</span>, S_IFCHR | <span class="number">0666</span>, makedev(<span class="number">1</span>, <span class="number">9</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Mount staging areas for devices managed by vold</span></span><br><span class="line">        <span class="comment">// See storage config details at http://source.android.com/devices/storage/</span></span><br><span class="line">        mount(<span class="string">&quot;tmpfs&quot;</span>, <span class="string">&quot;/mnt&quot;</span>, <span class="string">&quot;tmpfs&quot;</span>, MS_NOEXEC | MS_NOSUID | MS_NODEV,</span><br><span class="line">              <span class="string">&quot;mode=0755,uid=0,gid=1000&quot;</span>);</span><br><span class="line">        <span class="comment">// /mnt/vendor is used to mount vendor-specific partitions that can not be</span></span><br><span class="line">        <span class="comment">// part of the vendor partition, e.g. because they are mounted read-write.</span></span><br><span class="line">        mkdir(<span class="string">&quot;/mnt/vendor&quot;</span>, <span class="number">0755</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now that tmpfs is mounted on /dev and we have /dev/kmsg, we can actually</span></span><br><span class="line">        <span class="comment">// talk to the outside world...</span></span><br><span class="line">        InitKernelLogging(argv);</span><br><span class="line"></span><br><span class="line">        LOG(INFO) &lt;&lt; <span class="string">&quot;init first stage started!&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!DoFirstStageMount()) &#123;</span><br><span class="line">            LOG(FATAL) &lt;&lt; <span class="string">&quot;Failed to mount required partitions early ...&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SetInitAvbVersionInRecovery();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Enable seccomp if global boot option was passed (otherwise it is enabled in zygote).</span></span><br><span class="line">        global_seccomp();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set up SELinux, loading the SELinux policy.</span></span><br><span class="line">        SelinuxSetupKernelLogging();</span><br><span class="line">        SelinuxInitialize();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We&#x27;re in the kernel domain, so re-exec init to transition to the init domain now</span></span><br><span class="line">        <span class="comment">// that the SELinux policy has been loaded.</span></span><br><span class="line">        <span class="keyword">if</span> (selinux_android_restorecon(<span class="string">&quot;/init&quot;</span>, <span class="number">0</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">            PLOG(FATAL) &lt;&lt; <span class="string">&quot;restorecon failed of /init failed&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        setenv(<span class="string">&quot;INIT_SECOND_STAGE&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">uint32_t</span> kNanosecondsPerMillisecond = <span class="number">1e6</span>;</span><br><span class="line">        <span class="keyword">uint64_t</span> start_ms = start_time.time_since_epoch().count() / kNanosecondsPerMillisecond;</span><br><span class="line">        setenv(<span class="string">&quot;INIT_STARTED_AT&quot;</span>, <span class="built_in">std</span>::to_string(start_ms).c_str(), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>* path = argv[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">char</span>* args[] = &#123; path, <span class="literal">nullptr</span> &#125;;</span><br><span class="line">        execv(path, args);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// execv() only returns if an error happened, in which case we</span></span><br><span class="line">        <span class="comment">// panic and never fall through this conditional.</span></span><br><span class="line">        PLOG(FATAL) &lt;&lt; <span class="string">&quot;execv(\&quot;&quot;</span> &lt;&lt; path &lt;&lt; <span class="string">&quot;\&quot;) failed&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// At this point we&#x27;re in the second stage of init.</span></span><br><span class="line">    InitKernelLogging(argv);</span><br><span class="line">    LOG(INFO) &lt;&lt; <span class="string">&quot;init second stage started!&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set up a session keyring that all processes will have access to. It</span></span><br><span class="line">    <span class="comment">// will hold things like FBE encryption keys. No process should override</span></span><br><span class="line">    <span class="comment">// its session keyring.</span></span><br><span class="line">    keyctl_get_keyring_ID(KEY_SPEC_SESSION_KEYRING, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Indicate that booting is in progress to background fw loaders, etc.</span></span><br><span class="line">    close(open(<span class="string">&quot;/dev/.booting&quot;</span>, O_WRONLY | O_CREAT | O_CLOEXEC, <span class="number">0000</span>));</span><br><span class="line"></span><br><span class="line">    property_init();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If arguments are passed both on the command line and in DT,</span></span><br><span class="line">    <span class="comment">// properties set in DT always have priority over the command-line ones.</span></span><br><span class="line">    process_kernel_dt();</span><br><span class="line">    process_kernel_cmdline();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Propagate the kernel variables to internal variables</span></span><br><span class="line">    <span class="comment">// used by init as well as the current required properties.</span></span><br><span class="line">    export_kernel_boot_props();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Make the time that init started available for bootstat to log.</span></span><br><span class="line">    property_set(<span class="string">&quot;ro.boottime.init&quot;</span>, getenv(<span class="string">&quot;INIT_STARTED_AT&quot;</span>));</span><br><span class="line">    property_set(<span class="string">&quot;ro.boottime.init.selinux&quot;</span>, getenv(<span class="string">&quot;INIT_SELINUX_TOOK&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set libavb version for Framework-only OTA match in Treble build.</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* avb_version = getenv(<span class="string">&quot;INIT_AVB_VERSION&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (avb_version) property_set(<span class="string">&quot;ro.boot.avb_version&quot;</span>, avb_version);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clean up our environment.</span></span><br><span class="line">    unsetenv(<span class="string">&quot;INIT_SECOND_STAGE&quot;</span>);</span><br><span class="line">    unsetenv(<span class="string">&quot;INIT_STARTED_AT&quot;</span>);</span><br><span class="line">    unsetenv(<span class="string">&quot;INIT_SELINUX_TOOK&quot;</span>);</span><br><span class="line">    unsetenv(<span class="string">&quot;INIT_AVB_VERSION&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Now set up SELinux for second stage.</span></span><br><span class="line">    SelinuxSetupKernelLogging();</span><br><span class="line">    SelabelInitialize();</span><br><span class="line">    SelinuxRestoreContext();</span><br><span class="line"></span><br><span class="line">    epoll_fd = epoll_create1(EPOLL_CLOEXEC);</span><br><span class="line">    <span class="keyword">if</span> (epoll_fd == <span class="number">-1</span>) &#123;</span><br><span class="line">        PLOG(FATAL) &lt;&lt; <span class="string">&quot;epoll_create1 failed&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sigchld_handler_init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!IsRebootCapable()) &#123;</span><br><span class="line">        <span class="comment">// If init does not have the CAP_SYS_BOOT capability, it is running in a container.</span></span><br><span class="line">        <span class="comment">// In that case, receiving SIGTERM will cause the system to shut down.</span></span><br><span class="line">        InstallSigtermHandler();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    property_load_boot_defaults();</span><br><span class="line">    export_oem_lock_status();</span><br><span class="line">    start_property_service();</span><br><span class="line">    set_usb_controller();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> BuiltinFunctionMap function_map;</span><br><span class="line">    Action::set_function_map(&amp;function_map);</span><br><span class="line"></span><br><span class="line">    subcontexts = InitializeSubcontexts();</span><br><span class="line"></span><br><span class="line">    ActionManager&amp; am = ActionManager::GetInstance();</span><br><span class="line">    ServiceList&amp; sm = ServiceList::GetInstance();</span><br><span class="line"></span><br><span class="line">    LoadBootScripts(am, sm);<span class="comment">//加载启动脚本</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Turning this on and letting the INFO logging be discarded adds 0.2s to</span></span><br><span class="line">    <span class="comment">// Nexus 9 boot time, so it&#x27;s disabled by default.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span>) DumpState();</span><br><span class="line"></span><br><span class="line">    am.QueueEventTrigger(<span class="string">&quot;early-init&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Queue an action that waits for coldboot done so we know ueventd has set up all of /dev...</span></span><br><span class="line">    am.QueueBuiltinAction(wait_for_coldboot_done_action, <span class="string">&quot;wait_for_coldboot_done&quot;</span>);</span><br><span class="line">    <span class="comment">// ... so that we can start queuing up actions that require stuff from /dev.</span></span><br><span class="line">    am.QueueBuiltinAction(MixHwrngIntoLinuxRngAction, <span class="string">&quot;MixHwrngIntoLinuxRng&quot;</span>);</span><br><span class="line">    am.QueueBuiltinAction(SetMmapRndBitsAction, <span class="string">&quot;SetMmapRndBits&quot;</span>);</span><br><span class="line">    am.QueueBuiltinAction(SetKptrRestrictAction, <span class="string">&quot;SetKptrRestrict&quot;</span>);</span><br><span class="line">    am.QueueBuiltinAction(keychord_init_action, <span class="string">&quot;keychord_init&quot;</span>);</span><br><span class="line">    am.QueueBuiltinAction(console_init_action, <span class="string">&quot;console_init&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Trigger all the boot actions to get us started.</span></span><br><span class="line">    am.QueueEventTrigger(<span class="string">&quot;init&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Repeat mix_hwrng_into_linux_rng in case /dev/hw_random or /dev/random</span></span><br><span class="line">    <span class="comment">// wasn&#x27;t ready immediately after wait_for_coldboot_done</span></span><br><span class="line">    am.QueueBuiltinAction(MixHwrngIntoLinuxRngAction, <span class="string">&quot;MixHwrngIntoLinuxRng&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Don&#x27;t mount filesystems or start core system services in charger mode.</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> bootmode = GetProperty(<span class="string">&quot;ro.bootmode&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (bootmode == <span class="string">&quot;charger&quot;</span>) &#123;</span><br><span class="line">        am.QueueEventTrigger(<span class="string">&quot;charger&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        am.QueueEventTrigger(<span class="string">&quot;late-init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Run all property triggers based on current state of the properties.</span></span><br><span class="line">    am.QueueBuiltinAction(queue_property_triggers_action, <span class="string">&quot;queue_property_triggers&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">// By default, sleep until something happens.</span></span><br><span class="line">        <span class="keyword">int</span> epoll_timeout_ms = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (do_shutdown &amp;&amp; !shutting_down) &#123;</span><br><span class="line">            do_shutdown = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (HandlePowerctlMessage(shutdown_command)) &#123;</span><br><span class="line">                shutting_down = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(waiting_for_prop || Service::is_exec_service_running())) &#123;</span><br><span class="line">            am.ExecuteOneCommand();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!(waiting_for_prop || Service::is_exec_service_running())) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!shutting_down) &#123;</span><br><span class="line">                <span class="keyword">auto</span> next_process_restart_time = RestartProcesses();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// If there&#x27;s a process that needs restarting, wake up in time for that.</span></span><br><span class="line">                <span class="keyword">if</span> (next_process_restart_time) &#123;</span><br><span class="line">                    epoll_timeout_ms = <span class="built_in">std</span>::chrono::<span class="built_in">ceil</span>&lt;<span class="built_in">std</span>::chrono::milliseconds&gt;(</span><br><span class="line">                                           *next_process_restart_time - boot_clock::now())</span><br><span class="line">                                           .count();</span><br><span class="line">                    <span class="keyword">if</span> (epoll_timeout_ms &lt; <span class="number">0</span>) epoll_timeout_ms = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If there&#x27;s more work to do, wake up again immediately.</span></span><br><span class="line">            <span class="keyword">if</span> (am.HasMoreCommands()) epoll_timeout_ms = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        epoll_event ev;</span><br><span class="line">        <span class="keyword">int</span> nr = TEMP_FAILURE_RETRY(epoll_wait(epoll_fd, &amp;ev, <span class="number">1</span>, epoll_timeout_ms));</span><br><span class="line">        <span class="keyword">if</span> (nr == <span class="number">-1</span>) &#123;</span><br><span class="line">            PLOG(ERROR) &lt;&lt; <span class="string">&quot;epoll_wait failed&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nr == <span class="number">1</span>) &#123;</span><br><span class="line">            ((<span class="keyword">void</span> (*)()) ev.data.ptr)();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitKernelLogging</span><span class="params">(<span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Make stdin/stdout/stderr all point to /dev/null.</span></span><br><span class="line">    <span class="keyword">int</span> fd = open(<span class="string">&quot;/sys/fs/selinux/null&quot;</span>, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> saved_errno = errno;</span><br><span class="line">        android::base::InitLogging(argv, &amp;android::base::KernelLogger, InitAborter);</span><br><span class="line">        errno = saved_errno;</span><br><span class="line">        PLOG(FATAL) &lt;&lt; <span class="string">&quot;Couldn&#x27;t open /sys/fs/selinux/null&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dup2(fd, <span class="number">0</span>);</span><br><span class="line">    dup2(fd, <span class="number">1</span>);</span><br><span class="line">    dup2(fd, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (fd &gt; <span class="number">2</span>) close(fd);</span><br><span class="line"></span><br><span class="line">    android::base::InitLogging(argv, &amp;android::base::KernelLogger, InitAborter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Parser <span class="title">CreateParser</span><span class="params">(ActionManager&amp; action_manager, ServiceList&amp; service_list)</span> </span>&#123;</span><br><span class="line">    Parser parser;</span><br><span class="line"></span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;service&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ServiceParser&gt;(&amp;service_list, subcontexts));</span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;on&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ActionParser&gt;(&amp;action_manager, subcontexts));</span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;import&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ImportParser&gt;(&amp;parser));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LoadBootScripts</span><span class="params">(ActionManager&amp; action_manager, ServiceList&amp; service_list)</span> </span>&#123;</span><br><span class="line">    Parser parser = CreateParser(action_manager, service_list);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> bootscript = GetProperty(<span class="string">&quot;ro.boot.init_rc&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (bootscript.empty()) &#123;</span><br><span class="line">        parser.ParseConfig(<span class="string">&quot;/init.rc&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/system/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/system/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/product/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/product/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/odm/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/odm/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/vendor/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/vendor/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        parser.ParseConfig(bootscript);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考博客</p><p><a href="https://blog.csdn.net/tkwxty/article/details/106113298">https://blog.csdn.net/tkwxty/article/details/106113298</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;init进程是Linux系统中用户空间的第一个进程，进程号固定为1。Kernel启动后，在用户空间启动init进&lt;br&gt;程，并调用init中的main()方法执行init进程的职责。  &lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    
    <category term="init" scheme="http://example.com/tags/init/"/>
    
  </entry>
  
  <entry>
    <title>dumpsys</title>
    <link href="http://example.com/2020/10/28/dumpsys/"/>
    <id>http://example.com/2020/10/28/dumpsys/</id>
    <published>2020-10-28T08:07:06.000Z</published>
    <updated>2020-11-06T15:04:31.655Z</updated>
    
    
    
    
    <category term="android调试" scheme="http://example.com/categories/android%E8%B0%83%E8%AF%95/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>adb</title>
    <link href="http://example.com/2020/10/28/adb/"/>
    <id>http://example.com/2020/10/28/adb/</id>
    <published>2020-10-28T07:39:36.000Z</published>
    <updated>2020-11-06T14:49:55.619Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述：使用adb push 指令向安卓设备copy文件时，报错：remote couldn’t create file:Read-only file system</p><p><img src="/images/adb/image-20201028154109682.png" alt="image-20201028154109682"></p><p>分析过程:通过报错信息可以看出，是因为文件夹权限不足导致的，因为是只读文件系统，所以在进行文件复制过程中无法写入文件导致复制失败。</p><p>解决方法：使用下列指令</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb disable-verity//这个的作用是，出现对vendor目录下的文件操作没有权限</span><br><span class="line">adb reboot</span><br><span class="line"></span><br><span class="line">adb root</span><br><span class="line">adb remount</span><br><span class="line">adb shell</span><br></pre></td></tr></table></figure><p>重新加载文件系统，改变文件夹权限，然后重新push,问题解决。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述：使用adb push 指令向安卓设备copy文件时，报错：remote couldn’t create file:Read-only file system&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/adb/image-20201028154109682.</summary>
      
    
    
    
    <category term="android调试" scheme="http://example.com/categories/android%E8%B0%83%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>init_01</title>
    <link href="http://example.com/2020/10/28/init-01/"/>
    <id>http://example.com/2020/10/28/init-01/</id>
    <published>2020-10-28T00:57:28.000Z</published>
    <updated>2020-11-06T14:57:08.348Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="Android-Init-Language"><a href="#Android-Init-Language" class="headerlink" title="Android Init Language"></a>Android Init Language</h3><p>Android Init Language中由5类语法组成，分别是Actions, Commands, Services, Options, and Imports </p><p>每一行是一个语句，单词之间用空格分开，如果单词中有空格可以用反斜杠转义，也可以用双引号来引用文本避免和空格冲突，如果一行语句太长可以用 \ 换行，用 # 表示注释</p><p>Actions和Services可以作为一个独立的Section,所有的Commands和Options从属于紧挨着的Actions或Services，定义在第一个Section前的Commands和Options将被忽略掉 </p><p>Actions和Services都是唯一的，如果定义了两个一样的Action，第二个Action的Command将追加到第一个Action，<br>如果定义了两个一样的Service，第二个Service将被忽略掉并打印错误日志</p><h3 id="Init-rc-Files"><a href="#Init-rc-Files" class="headerlink" title="Init .rc Files"></a>Init .rc Files</h3><p>Android Init Language是用后缀为.rc的纯文本编写的,而且是由多个分布在不同目录下的.rc文件组成,如下所述 </p><p>/init.rc 是最主要的一个.rc文件，它由init进程在初始化时加载，主要负责系统初始化,它会导入 /init.${ro.hardware}.rc ，这个是系统级核心厂商提供的主要.rc文件</p><p>当执行 mount_all 语句时，init进程将加载所有在 /{system,vendor,odm}/etc/init/ 目录下的文件，挂载好文件系统后，这些目录将会为Actions和Services服务</p><p>有一个特殊的目录可能被用来替换上面的三个默认目录，这主要是为了支持工厂模式和其他非标准的启动模式,上面三个目录用于正常的启动过程</p><p>这三个用于扩展的目录是</p><ol><li><p>/system/etc/init/ 用于系统本身，比如SurfaceFlinger, MediaService, and logcatd.</p></li><li><p>/vendor/etc/init/ 用于SoC(系统级核心厂商，如高通),为他们提供一些核心功能和服务</p></li><li><p>/odm/etc/init/ 用于设备制造商（odm定制厂商，如华为、小米），为他们的传感器或外围设备提供一些核心功能和服务</p></li></ol><p>所有放在这三个目录下的Services二进制文件都必须有一个对应的.rc文件放在该目录下，并且要在.rc文件中定义service结构,<br> 有一个宏LOCAL_INIT_RC,可以帮助开发者处理这个问题. 每个.rc文件还应当包含一些与该服务相关的actions</p><p> 举个例子，在system/core/logcat目录下有logcatd.rc和Android.mk这两个文件. Android.mk文件中用LOCAL_INIT_RC这个宏，在编译时将logcatd.rc放在/system/etc/init/目录下,init进程在调用 mount_all 时将其加载，在合适的时机运行其定义的service并将action放入队列</p><p><img src="/images/init-01/image-20201028091011189.png" alt="image-20201028091011189"></p><p><img src="/images/init-01/image-20201028090932631.png" alt="image-20201028090932631"></p><p> 将init.rc根据不同服务分拆到不同目录，要比之前放在单个init.rc文件好. 这种方案确保init读取的service和action信息能和同目录下的Services二进制文件更加符合,不再像以前单个init.rc那样.<br> 另外，这样还可以解决多个services加入到系统时发生的冲突，因为他们都拆分到了不同的文件中</p><p> 在 mount_all 语句中有 “early” 和 “late” 两个可选项，当 early 设置的时候，init进程将跳过被 latemount 标记的挂载操作，并触发fs encryption state 事件， 当 late 被设置的时候，init进程只会执行 latemount 标记的挂载操作，但是会跳过导入的 .rc文件的执行. 默认情况下，不设置任何选项，init进程将执行所有挂载操作</p><p><img src="/images/init-01/20161118093614002" alt="这里写图片描述"></p><h3 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a>Actions</h3><p>Actions由一行行命令组成. trigger用来决定什么时候触发这些命令,当一个事件满足trigger的触发条件时，这个action就会被加入到处理队列中（除非队列中已经存在） 队列中的action按顺序取出执行，action中的命令按顺序执行. 这些命令主要用来执行一些操作（设备创建/销毁，属性设置，进程重启）</p><p> Actions的格式如下：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">on <span class="tag">&lt;<span class="name">trigger</span>&gt;</span> [&amp;&amp; <span class="tag">&lt;<span class="name">trigger</span>&gt;</span>]*</span><br><span class="line">   <span class="tag">&lt;<span class="name">command</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">command</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">command</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><p>Services是init进程启动的程序,它们也可能在退出时自动重启. Services的格式如下：</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service &lt;name&gt; &lt;pathname&gt; [ &lt;argument&gt; ]*</span><br><span class="line">   &lt;option&gt;</span><br><span class="line">   &lt;option&gt;</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server</span><br><span class="line">    class main</span><br><span class="line">    priority -20</span><br><span class="line">    user root</span><br><span class="line">    group root readproc</span><br><span class="line">    socket zygote stream 660 root system #socket &lt;name&gt; &lt;type&gt; &lt;perm&gt; [ &lt;user&gt; [ &lt;group&gt; [ &lt;seclabel&gt; ] ] ]</span><br><span class="line">    onrestart write /sys/android_power/request_state wake</span><br><span class="line">    onrestart write /sys/power/state on</span><br><span class="line">    onrestart restart audioserver</span><br><span class="line">    onrestart restart cameraserver</span><br><span class="line">    onrestart restart media</span><br><span class="line">    onrestart restart netd</span><br><span class="line">    onrestart restart wificond</span><br><span class="line">    writepid /dev/cpuset/foreground/tasks</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><h3 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h3><p>Options是Services的参数配置. 它们影响Service如何运行及运行时机</p><p>console [<console>]</console></p><p>Service需要控制台. 第二个参数console的意思是可以设置你想要的控制台类型，默认控制台是/dev/console ,/dev 这个前缀通常是被忽略的，比如你要设置控制台 /dev/tty0 ,那么只需要设置为console tty0</p><p>critical</p><p>表示Service是严格模式. 如果这个Service在4分钟内退出超过4次，那么设备将重启进入recovery模式</p><p>disabled</p><p>表示Service不能以class的形式启动，只能以name的形式启动</p><p>setenv <name> <value></value></name></p><p>在Service启动时设置name-value的环境变量</p><p>socket <name> <type> <perm> [ <user> [ <group> [ <seclabel> ] ] ]</seclabel></group></user></perm></type></name></p><p>创建一个unix域的socket,名字叫/dev/socket/name , 并将fd返回给Service. type 只能是 “dgram”, “stream” or “seqpacket”.<br>User 和 group 默认值是 0. ‘seclabel’ 是这个socket的SELinux安全上下文,它的默认值是service安全策略或者基于其可执行文件的安全上下文.<br>它对应的本地实现在libcutils的android_get_control_socket</p><p>file <path></path> <type></type></p><p>打开一个文件，并将fd返回给这个Service. type 只能是 “r”, “w” or “rw”. 它对应的本地实现在libcutils的android_get_control_file </p><p>user <username></username></p><p>在启动Service前将user改为username,默认启动时user为root(或许默认是无).在Android M版本，如果一个进程想拥有Linux capabilities（相当于Android中的权限吧），也只能通过设置这个值. 以前，一个程序要想有Linux capabilities，必须先以root身份运行，然后再降级到所需的uid.<br>        现在已经有一套新的机制取而代之，它通过fs_config允许厂商赋予特殊二进制文件Linux capabilities. 这套机制的说明文档在<a href="http://source.android.com/devices/tech/config/filesystem.html.%E5%BD%93%E4%BD%BF%E7%94%A8%E8%BF%99%E5%A5%97%E6%96%B0%E7%9A%84%E6%9C%BA%E5%88%B6%E6%97%B6%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87user%E5%8F%82%E6%95%B0%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E6%89%80%E9%9C%80%E7%9A%84uid,%E8%80%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E4%BB%A5root%E6%9D%83%E9%99%90%E8%BF%90%E8%A1%8C">http://source.android.com/devices/tech/config/filesystem.html.当使用这套新的机制时，程序可以通过user参数选择自己所需的uid,而不需要以root权限运行</a>. 在Android O版本，<br>程序可以通过capabilities参数直接申请所需的能力，参见下面的capabilities说明</p><p>group <groupname> [ <groupname>* ]</groupname></groupname></p><p>在启动Service前将group改为第一个groupname,第一个groupname是必须有的，默认值为root（或许默认值是无），第二个groupname可以不设置，用于追加组（通过setgroups）.</p><p>capabilities <capability> [ <capability>* ]</capability></capability></p><p>在启动Service时将capabilities设置为capability. ‘capability’ 不能是”CAP_” prefix, like “NET_ADMIN” or “SETPCAP”. 参考<br><a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">http://man7.org/linux/man-pages/man7/capabilities.7.html</a> ，里面有capability的说明.</p><p>seclabel <seclabel></seclabel></p><p>在启动Service前将seclabel设置为seclabel. 主要用于在rootfs上启动的service，比如ueventd, adbd.在系统分区上运行的service有自己的SELinux安全策略，如果不设置，默认使用init的安全策略.</p><p>oneshot</p><p>退出后不再重启</p><p>class <name> [ <name>* ]</name></name></p><p>为Service指定class名字. 同一个class名字的Service会被一起启动或退出,默认值是”default”,第二个name可以不设置，用于service组.</p><p>animation class</p><p>animation class 主要包含为开机动画或关机动画服务的service. 它们很早被启动，而且直到关机最后一步才退出.它们不允许访问/data 目录，它们可以检查/data目录，但是不能打开 /data 目录，而且需要在 /data 不能用时也正常工作 .</p><p>onrestart </p><p>在Service重启时执行命令.</p><p>writepid <file> [ <file>* ]</file></file></p><p>当Service调用fork时将子进程的pid写入到指定文件. 用于cgroup/cpuset的使用，当/dev/cpuset/下面没有文件但ro.cpuset.default的值却不为空时,将pid的值写入到/dev/cpuset/cpuset_name/tasks文件中</p><p>priority <priority></priority></p><p>设置进程优先级. 在-20～19之间，默认值是0,能过setpriority实现</p><p>namespace &lt;pid|mnt&gt;</p><p>当fork这个service时，设置pid或mnt标记</p><p>oom_score_adjust <value></value></p><p>设置子进程的 /proc/self/oom_score_adj 的值为 value,在 -1000 ～ 1000之间.</p><h3 id="Triggers"><a href="#Triggers" class="headerlink" title="Triggers"></a>Triggers</h3><p>Triggers 是个字符串，当一些事件发生满足该条件时，一些actions就会被执行Triggers分为事件Trigger和属性Trigger：</p><p>事件Trigger由trigger 命令或QueueEventTrigger方法触发.它的格式是个简单的字符串，比如’boot’ 或 ‘late-init’.</p><p>属性Trigger是在属性被设置或发生改变时触发. 格式是’property:<name>=<value>‘或’property:<name>=*’,它会在init初始化设置属性的时候触发.</name></value></name></p><p>属性Trigger定义的Action可能有多种触发方式，但是事件Trigger定义的Action可能只有一种触发方式</p><p>比如：</p><p>on boot &amp;&amp; property:a=b 定义了action的触发条件是，boot Trigger触发，并且属性a的值等于b</p><p>on property:a=b &amp;&amp; property:c=d 这个定义有三种触发方式:</p><ol><li>在初始化时，属性a=b,属性c=d.</li><li>在属性c=d的情况下，属性a被改为b.</li><li>A在属性a=b的情况下，属性c被改为d.</li></ol><h3 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootchart [start|stop]</span><br></pre></td></tr></table></figure><p> 启动或终止bootcharting. 这个出现在init.rc文件中，但是只有在/data/bootchart/enabled文件存在的时候才有效，否则不能工作</p><p> chmod <octal-mode> <path></path></octal-mode></p><p> 修改文件读写权限</p><p> chown <owner> <group> <path></path></group></owner></p><p> 修改文件所有者或所属用户组</p><p> class_start <serviceclass></serviceclass></p><p> 启动所有以serviceclass命名的未启动的service(service有一个name，也有个class，<br> 这里的serviceclass就是class,class_start和后面的start是两种启动方式，class_start是class形式启动，start是name形式启动)</p><p> class_stop <serviceclass> </serviceclass></p><p> 终止所有以serviceclass命名的正在运行的service</p><p> class_reset <serviceclass></serviceclass></p><p> 终止所有以serviceclass命名的正在运行的service,但是不禁用它们. 它们可以稍后被class_start重启</p><p> class_restart <serviceclass></serviceclass></p><p> 重启所有以serviceclass命名的service</p><p> copy <src> <dst></dst></src></p><p> 复制一个文件，与write相似，比较适合二进制或比较大的文件.</p><p> 对于src,从链接文件、world-writable或group-writable复制是不允许的.</p><p> 对于dst，如果目标文件不存在，则默认权限是0600,如果存在就覆盖掉</p><p> domainname <name></name></p><p> 设置域名</p><p> enable <servicename></servicename></p><p> 将一个禁用的service设置为可用.<br> 如果这个service在运行，那么就会重启.<br> 一般用在bootloader时设置属性，然后启动一个service，比如<br> on property:ro.boot.myfancyhardware=1<br> enable my_fancy_service_for_my_fancy_hardware<br> exec [ <seclabel> [ <user> [ <group>* ] ] ] – <command> [ <argument>* ]<br> 新建子进程并运行一个带指定参数的命令. 这个命令指定了seclabel（安全策略），user(所有者)，group(用户组).<br> 直到这个命令运行完才可以运行其他命令，seclabel可以设置为 - 表示用默认值，argument表示属性值.<br> 直到子进程新建完毕，init进程才继续执行.</argument></group></user></seclabel></p><p> exec_start <service></service></p><p> 启动一个service，只有当执行结果返回，init进程才能继续执行. 这个跟exec相似，只是将一堆参数的设置改在在service中定义</p><p> export <name> <value></value></name></p><p> 设置环境变量name-value. 这个环境变量将被所有已经启动的service继承</p><p> hostname <name> </name></p><p> 设置主机名</p><p> ifup <interface></interface></p><p> 开启指定的网络接口</p><p> insmod [-f] <path></path> [<options>]</options></p><p> 安装path下的模块，指定参数options.</p><p> -f 表示强制安装，即便是当前Linux内核版本与之不匹配</p><p> load_all_props</p><p> 加载/system, /vendor等目录下的属性，这个用在init.rc中</p><p> load_persist_props</p><p> 加载/data 下的持久化属性. 这个用在init.rc中</p><p> loglevel <level></level></p><p> 设置日志输出等级，level表示等级</p><p> mkdir <path></path> [mode] [owner] [group]</p><p> 创建一个目录，path是路径，mode是读写权限，默认值是755,owner是所有者，默认值root,group是用户组,默认值是root.<br> 如果该目录已存在，则覆盖他们的mode,owner等设置</p><p> mount_all <fstab> [ <path></path> ]* [–<option>]</option></fstab></p><p> 当手动触发 “early” 和 “late”时，调用fs_mgr_mount_all 函数，指定fstab配置文件，并导入指定目录下的.rc文件<br> 详情可以查看init.rc文件中的有关定义</p><p> mount <type> <device> <dir> [ <flag>* ] [<options>]</options></flag></dir></device></type></p><p> 在dir目录下挂载一个名叫device的设备</p><p> _flag 包括 “ro”, “rw”, “remount”, “noatime”, …</p><p> options 包括 “barrier=1”, “noauto_da_alloc”, “discard”, … 用逗号分开，比如 barrier=1,noauto_da_alloc</p><p> restart <service></service></p><p> 终止后重启一个service,如果这个service刚被重启就什么都不做，如果没有在运行，就启动</p><p> restorecon <path></path> [ <path></path>* ]</p><p> 恢复指定目录下文件的安全上下文.第二个path是安全策略文件. 指定目录不需要必须存在，因为它只需要在init中正确标记</p><p> restorecon_recursive <path></path> [ <path></path>* ]</p><p> 递归地恢复指定目录下的安全上下文，第二个path是安全策略文件位置</p><p> rm <path></path></p><p> 调用 unlink(2)删除指定文件. 最好用exec – rm …代替，因为这样可以确保系统分区已经挂载好</p><p> rmdir <path></path></p><p> 调用 rmdir(2) 删除指定目录</p><p> setprop <name> <value></value></name></p><p> 设置属性name-value </p><p> setrlimit <resource> <cur> <max></max></cur></resource></p><p> 指定一个进程的资源限制</p><p> start <service> </service></p><p> 启动一个未运行的service</p><p> stop <service></service></p><p> 终止一个正在运行的service</p><p> swapon_all <fstab></fstab></p><p> 调用 fs_mgr_swapon_all，指定fstab配置文件.</p><p> symlink <target> <path></path></target></p><p> 在path下创建一个指向target的链接</p><p> sysclktz <mins_west_of_gmt></mins_west_of_gmt></p><p> 重置系统基准时间(如果是格林尼治标准时间则设置为0)</p><p> trigger <event></event></p><p> 触发事件event，由一个action触发到另一个action队列</p><p> umount <path></path></p><p> 卸载指定path的文件系统</p><p> verity_load_state</p><p> 内部实现是加载dm-verity的状态</p><p> verity_update_state <mount-point></mount-point></p><p> 内部实现是设置dm-verity的状态，并且设置partition.mount-point.verified的属性. 用于adb重新挂载，<br> 因为fs_mgr 不能直接设置它。 </p><p> wait <path></path> [ <timeout> ]</timeout></p><p> 查看指定路径是否存在. 如果发现则返回,可以设置超时时间，默认值是5秒</p><p> wait_for_prop <name> <value></value></name></p><p> 等待name属性的值被设置为value，如果name的值一旦被设置为value，马上继续</p><p> write <path></path> <content></content></p><p> 打开path下的文件，并用write(2)写入content内容. 如果文件不存在就会被创建，如果存在就会被覆盖掉</p><h3 id="Imports"><a href="#Imports" class="headerlink" title="Imports"></a>Imports</h3><p>import关键字不是一个命令，但是如果有.rc文件包含它就会马上解析它里面的section,用法如下：</p><p> import <path></path></p><p> 解析path下的.rc文件 ，括展当前文件的配置。如果path是个目录，这个目录下所有.rc文件都被解析，但是不会递归,<br> import被用于以下两个地方：</p><p> 1.在初始化时解析init.rc文件</p><p> 2.在mount_all时解析{system,vendor,odm}/etc/init/等目录下的.rc文件</p><p> 后面的内容主要是一些跟调试init进程相关的东西，比如init.svc.<name>可以查看service启动的状态，<br> ro.boottime.init记录一些关键的时间点，Bootcharting是一个图表化的性能监测工具等</name></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;Android-Init-Language&quot;&gt;&lt;a href=&quot;#Android-Init-Language&quot; class=&quot;headerlink&quot; title=&quot;Android Init Language&quot;&gt;&lt;/a&gt;Android In</summary>
      
    
    
    
    <category term="init进程" scheme="http://example.com/categories/init%E8%BF%9B%E7%A8%8B/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>concurrent_01</title>
    <link href="http://example.com/2020/10/27/concurrent-01/"/>
    <id>http://example.com/2020/10/27/concurrent-01/</id>
    <published>2020-10-27T12:19:27.000Z</published>
    <updated>2020-10-27T12:33:28.599Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>AMS注册到ServiceManager中的流程分析</title>
    <link href="http://example.com/2020/10/26/ServiceManager-addService/"/>
    <id>http://example.com/2020/10/26/ServiceManager-addService/</id>
    <published>2020-10-26T11:38:59.000Z</published>
    <updated>2020-10-27T11:55:26.619Z</updated>
    
    <content type="html"><![CDATA[<p>当zygote启动SystemServer后，会调用SystemServer的main函数，SystemServer开始启动之后会拉起一系列的系统服务，因此，本文主要分析AMS启动后，如何将自己注册到ServiceManager中的。</p><h1 id="1-启动SystemServer"><a href="#1-启动SystemServer" class="headerlink" title="1.启动SystemServer"></a>1.启动SystemServer</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The main entry point from zygote.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> SystemServer().run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当zygote启动SystemServer后，调用SystemServer的main函数，并启动主线程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            .........</span><br><span class="line">            <span class="comment">// The system server should never make non-oneway calls</span></span><br><span class="line">            Binder.setWarnOnBlocking(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// The system server should always load safe labels</span></span><br><span class="line">            PackageItemInfo.setForceSafeLabels(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Default to FULL within the system server.</span></span><br><span class="line">            SQLiteGlobal.sDefaultSyncMode = SQLiteGlobal.SYNC_MODE_FULL;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Deactivate SQLiteCompatibilityWalFlags until settings provider is initialized</span></span><br><span class="line">            SQLiteCompatibilityWalFlags.init(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Here we go!</span></span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;Entered the Android system server!&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> uptimeMillis = (<span class="keyword">int</span>) SystemClock.elapsedRealtime();</span><br><span class="line">            EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_SYSTEM_RUN, uptimeMillis);</span><br><span class="line">            <span class="keyword">if</span> (!mRuntimeRestart) &#123;</span><br><span class="line">                MetricsLogger.histogram(<span class="keyword">null</span>, <span class="string">&quot;boot_system_server_init&quot;</span>, uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line">            ...........</span><br><span class="line">            <span class="comment">// Create the system service manager.</span></span><br><span class="line">            mSystemServiceManager = <span class="keyword">new</span> SystemServiceManager(mSystemContext);</span><br><span class="line">            mSystemServiceManager.setStartInfo(mRuntimeRestart,</span><br><span class="line">                    mRuntimeStartElapsedTime, mRuntimeStartUptime);</span><br><span class="line">            LocalServices.addService(SystemServiceManager.class, mSystemServiceManager);</span><br><span class="line">            <span class="comment">// Prepare the thread pool for init tasks that can be parallelized</span></span><br><span class="line">            SystemServerInitThreadPool.get();</span><br><span class="line">            .........</span><br><span class="line">        <span class="comment">// Start services.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            traceBeginAndSlog(<span class="string">&quot;StartServices&quot;</span>);</span><br><span class="line">            startBootstrapServices();</span><br><span class="line">            startCoreServices();</span><br><span class="line">            startOtherServices();</span><br><span class="line">            SystemServerInitThreadPool.shutdown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;******************************************&quot;</span>);</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;************ Failure starting system services&quot;</span>, ex);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            traceEnd();</span><br><span class="line">        &#125;</span><br><span class="line">       .........</span><br><span class="line">        <span class="comment">// Loop forever.</span></span><br><span class="line">        Looper.loop();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Main thread loop unexpectedly exited&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="1-1-启动AMS"><a href="#1-1-启动AMS" class="headerlink" title="1.1 启动AMS"></a>1.1 启动AMS</h2><p>这里主要关注startBootstrapServices();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBootstrapServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        .......</span><br><span class="line">        <span class="comment">// Activity manager runs the show.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartActivityManager&quot;</span>);</span><br><span class="line">        mActivityManagerService = mSystemServiceManager.startService(</span><br><span class="line">                ActivityManagerService.Lifecycle.class).getService();</span><br><span class="line">        mActivityManagerService.setSystemServiceManager(mSystemServiceManager);</span><br><span class="line">        mActivityManagerService.setInstaller(installer);</span><br><span class="line">        traceEnd();</span><br><span class="line">    ........</span><br><span class="line">        <span class="comment">// Set up the Application instance for the system process and get started.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;SetSystemProcess&quot;</span>);</span><br><span class="line">        mActivityManagerService.setSystemProcess();</span><br><span class="line">        traceEnd();</span><br><span class="line">    .........</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里startBootstrapServices主要是启动一些启动阶段的服务，这里主要看这几个函数：</p><p><strong>1）mSystemServiceManager.startService（）</strong></p><p><strong>2）ActivityManagerService.Lifecycle.class</strong></p><p><strong>3）mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class).getService();</strong></p><p><strong>4）mActivityManagerService.setSystemProcess();</strong></p><h3 id="1-1-1-Lifecycle-class和getService"><a href="#1-1-1-Lifecycle-class和getService" class="headerlink" title="1.1.1 Lifecycle.class和getService()"></a>1.1.1 Lifecycle.class和getService()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span>  <span class="keyword">extends</span> <span class="title">SystemService</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> ActivityManagerService mService;</span><br><span class="line"><span class="comment">//通过反射的方式，调用构造函数，并通过构造函数创建出ActivityManagerService</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Lifecycle</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(context);</span><br><span class="line">            mService = <span class="keyword">new</span> ActivityManagerService(context);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            mService.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBootPhase</span><span class="params">(<span class="keyword">int</span> phase)</span> </span>&#123;</span><br><span class="line">            mService.mBootPhase = phase;</span><br><span class="line">            <span class="keyword">if</span> (phase == PHASE_SYSTEM_SERVICES_READY) &#123;</span><br><span class="line">                mService.mBatteryStatsService.systemServicesReady();</span><br><span class="line">                mService.mServices.systemServicesReady();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCleanupUser</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">            mService.mBatteryStatsService.onCleanupUser(userId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回AMS</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActivityManagerService <span class="title">getService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mService;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-2-startService"><a href="#1-1-2-startService" class="headerlink" title="1.1.2 startService"></a>1.1.2 startService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/services/core/java/com/android/server/SystemServiceManager.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Starts a service by class name.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> The service instance.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> SystemService <span class="title">startService</span><span class="params">(String className)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">final</span> Class&lt;SystemService&gt; serviceClass;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           serviceClass = (Class&lt;SystemService&gt;)Class.forName(className);<span class="comment">//获取服务的名字</span></span><br><span class="line">       &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">           Slog.i(TAG, <span class="string">&quot;Starting &quot;</span> + className);</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + className</span><br><span class="line">                   + <span class="string">&quot;: service class not found, usually indicates that the caller should &quot;</span></span><br><span class="line">                   + <span class="string">&quot;have called PackageManager.hasSystemFeature() to check whether the &quot;</span></span><br><span class="line">                   + <span class="string">&quot;feature is available on this device before trying to start the &quot;</span></span><br><span class="line">                   + <span class="string">&quot;services that implement it&quot;</span>, ex);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> startService(serviceClass);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Creates and starts a system service. The class must be a subclass of</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@link</span> com.android.server.SystemService&#125;.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> serviceClass A Java class that implements the SystemService interface.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> The service instance, never null.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> RuntimeException if the service fails to start.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> &lt;T extends SystemService&gt; <span class="function">T <span class="title">startService</span><span class="params">(Class&lt;T&gt; serviceClass)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">final</span> String name = serviceClass.getName();</span><br><span class="line">           Slog.i(TAG, <span class="string">&quot;Starting &quot;</span> + name);</span><br><span class="line">           Trace.traceBegin(Trace.TRACE_TAG_SYSTEM_SERVER, <span class="string">&quot;StartService &quot;</span> + name);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Create the service.</span></span><br><span class="line">           <span class="keyword">if</span> (!SystemService.class.isAssignableFrom(serviceClass)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create &quot;</span> + name</span><br><span class="line">                       + <span class="string">&quot;: service must extend &quot;</span> + SystemService.class.getName());</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">final</span> T service;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               Constructor&lt;T&gt; constructor = serviceClass.getConstructor(Context.class);</span><br><span class="line">               <span class="comment">//通过反射，创建出AMS</span></span><br><span class="line">               service = constructor.newInstance(mContext);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (InstantiationException ex) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                       + <span class="string">&quot;: service could not be instantiated&quot;</span>, ex);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                       + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                       + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                       + <span class="string">&quot;: service constructor threw an exception&quot;</span>, ex);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           startService(service);</span><br><span class="line">           <span class="keyword">return</span> service;</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           Trace.traceEnd(Trace.TRACE_TAG_SYSTEM_SERVER);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startService</span><span class="params">(<span class="meta">@NonNull</span> <span class="keyword">final</span> SystemService service)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// Register it.</span></span><br><span class="line">       mServices.add(service);<span class="comment">//将AMS添加到ArrayList&lt;SystemService&gt; 中</span></span><br><span class="line">       <span class="comment">// Start it.</span></span><br><span class="line">       <span class="keyword">long</span> time = SystemClock.elapsedRealtime();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           service.onStart();<span class="comment">//启动AMS，即调用Lifecycle的onStart方法</span></span><br><span class="line">       &#125; <span class="keyword">catch</span> (RuntimeException ex) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to start service &quot;</span> + service.getClass().getName()</span><br><span class="line">                   + <span class="string">&quot;: onStart threw an exception&quot;</span>, ex);</span><br><span class="line">       &#125;</span><br><span class="line">       warnIfTooLong(SystemClock.elapsedRealtime() - time, service, <span class="string">&quot;onStart&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-建立起BpBinder与BinderProxy之间的联系"><a href="#1-2-建立起BpBinder与BinderProxy之间的联系" class="headerlink" title="1.2 建立起BpBinder与BinderProxy之间的联系"></a>1.2 建立起BpBinder与BinderProxy之间的联系</h2><h3 id="1-2-1-AMS与ServiceManager的联系"><a href="#1-2-1-AMS与ServiceManager的联系" class="headerlink" title="1.2.1 AMS与ServiceManager的联系"></a>1.2.1 AMS与ServiceManager的联系</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSystemProcess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//将AMS注册到ServiceManager中</span></span><br><span class="line">            ServiceManager.addService(Context.ACTIVITY_SERVICE, <span class="keyword">this</span>, <span class="comment">/* allowIsolated= */</span> <span class="keyword">true</span>,</span><br><span class="line">                    DUMP_FLAG_PRIORITY_CRITICAL | DUMP_FLAG_PRIORITY_NORMAL | DUMP_FLAG_PROTO);</span><br><span class="line">            ServiceManager.addService(ProcessStats.SERVICE_NAME, mProcessStats);</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;meminfo&quot;</span>, <span class="keyword">new</span> MemBinder(<span class="keyword">this</span>), <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>,</span><br><span class="line">                    DUMP_FLAG_PRIORITY_HIGH);</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;gfxinfo&quot;</span>, <span class="keyword">new</span> GraphicsBinder(<span class="keyword">this</span>));</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;dbinfo&quot;</span>, <span class="keyword">new</span> DbBinder(<span class="keyword">this</span>));</span><br><span class="line">            <span class="keyword">if</span> (MONITOR_CPU_USAGE) &#123;</span><br><span class="line">                ServiceManager.addService(<span class="string">&quot;cpuinfo&quot;</span>, <span class="keyword">new</span> CpuBinder(<span class="keyword">this</span>),</span><br><span class="line">                        <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>, DUMP_FLAG_PRIORITY_CRITICAL);</span><br><span class="line">            &#125;</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;permission&quot;</span>, <span class="keyword">new</span> PermissionController(<span class="keyword">this</span>));</span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;processinfo&quot;</span>, <span class="keyword">new</span> ProcessInfoService(<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">            ApplicationInfo info = mContext.getPackageManager().getApplicationInfo(</span><br><span class="line">                    <span class="string">&quot;android&quot;</span>, STOCK_PM_FLAGS | MATCH_SYSTEM_ONLY);</span><br><span class="line">            mSystemThread.installSystemApplicationInfo(info, getClass().getClassLoader());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">                ProcessRecord app = newProcessRecordLocked(info, info.processName, <span class="keyword">false</span>, <span class="number">0</span>);</span><br><span class="line">                app.persistent = <span class="keyword">true</span>;</span><br><span class="line">                app.pid = MY_PID;</span><br><span class="line">                app.maxAdj = ProcessList.SYSTEM_ADJ;</span><br><span class="line">                app.makeActive(mSystemThread.getApplicationThread(), mProcessStats);</span><br><span class="line">                <span class="keyword">synchronized</span> (mPidsSelfLocked) &#123;</span><br><span class="line">                    mPidsSelfLocked.put(app.pid, app);</span><br><span class="line">                &#125;</span><br><span class="line">                updateLruProcessLocked(app, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">                updateOomAdjLocked();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PackageManager.NameNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                    <span class="string">&quot;Unable to find android system package&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start watching app ops after we and the package manager are up and running.</span></span><br><span class="line">        mAppOpsService.startWatchingMode(AppOpsManager.OP_RUN_IN_BACKGROUND, <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> IAppOpsCallback.Stub() &#123;</span><br><span class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">opChanged</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> uid, String packageName)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (op == AppOpsManager.OP_RUN_IN_BACKGROUND &amp;&amp; packageName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (mAppOpsService.checkOperation(op, uid, packageName)</span><br><span class="line">                                    != AppOpsManager.MODE_ALLOWED) &#123;</span><br><span class="line">                                runInBackgroundDisabled(uid);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-2-ServiceManager获取ServiceManagerProxy"><a href="#1-2-2-ServiceManager获取ServiceManagerProxy" class="headerlink" title="1.2.2 ServiceManager获取ServiceManagerProxy"></a>1.2.2 ServiceManager获取ServiceManagerProxy</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/java/android/os/ServiceManager.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Place a new <span class="doctag">@a</span> service called <span class="doctag">@a</span> name into the service</span></span><br><span class="line"><span class="comment">     * manager.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name the name of the new service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> service the service object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allowIsolated set to true to allow isolated sandboxed processes</span></span><br><span class="line"><span class="comment">     * to access this service</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(String name, IBinder service, <span class="keyword">boolean</span> allowIsolated)</span> </span>&#123;</span><br><span class="line">    addService(name, service, allowIsolated, IServiceManager.DUMP_FLAG_PRIORITY_DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Place a new <span class="doctag">@a</span> service called <span class="doctag">@a</span> name into the service</span></span><br><span class="line"><span class="comment">     * manager.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name the name of the new service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> service the service object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allowIsolated set to true to allow isolated sandboxed processes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dumpPriority supported dump priority levels as a bitmask</span></span><br><span class="line"><span class="comment">     * to access this service</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(String name, IBinder service, <span class="keyword">boolean</span> allowIsolated,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> dumpPriority)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        getIServiceManager().addService(name, service, allowIsolated, dumpPriority);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;error in addService&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IServiceManager <span class="title">getIServiceManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sServiceManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> sServiceManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Find the service manager</span></span><br><span class="line">    sServiceManager = ServiceManagerNative</span><br><span class="line">        .asInterface(Binder.allowBlocking(BinderInternal.getContextObject()));</span><br><span class="line">    <span class="keyword">return</span> sServiceManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要做了两件事：</p><p>1）调用ServiceManagerNative.asInterface函数</p><p>2）调用BinderInternal.getContextObject()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ServiceManagerNative.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Cast a Binder object into a service manager interface, generating</span></span><br><span class="line"><span class="comment">  * a proxy if needed.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="comment">//由于IServiceManager中的descriptor是一个静态常量</span></span><br><span class="line"><span class="comment">//static final String descriptor = &quot;android.os.IServiceManager&quot;;</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> IServiceManager <span class="title">asInterface</span><span class="params">(IBinder obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;<span class="comment">//obj为BpBinder</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//由于obj为BpBinder，该方法默认返回null</span></span><br><span class="line">    IServiceManager in = (IServiceManager)obj.queryLocalInterface(descriptor);</span><br><span class="line">    <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> in;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ServiceManagerProxy(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Binder.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use information supplied to attachInterface() to return the</span></span><br><span class="line"><span class="comment">     * associated IInterface if it matches the requested</span></span><br><span class="line"><span class="comment">     * descriptor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">private</span> String mDescriptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@Nullable</span> <span class="function">IInterface <span class="title">queryLocalInterface</span><span class="params">(<span class="meta">@NonNull</span> String descriptor)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//由于一开始mDescriptor为空，所以这里queryLocalInterface默认就是返回null</span></span><br><span class="line">    <span class="keyword">if</span> (mDescriptor != <span class="keyword">null</span> &amp;&amp; mDescriptor.equals(descriptor)) &#123;</span><br><span class="line">        <span class="keyword">return</span> mOwner;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-3-创建BpBinder"><a href="#1-2-3-创建BpBinder" class="headerlink" title="1.2.3 创建BpBinder"></a>1.2.3 创建BpBinder</h3><p>BinderInternal的getContextObject()函数是一个jni函数，因此，会调用到android_util_binder.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> jobject <span class="title">android_os_BinderInternal_getContextObject</span><span class="params">(JNIEnv* env, jobject clazz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sp&lt;IBinder&gt; b = ProcessState::self()-&gt;getContextObject(<span class="literal">NULL</span>);<span class="comment">//返回的就是new BpBinder(0);</span></span><br><span class="line">    <span class="keyword">return</span> javaObjectForIBinder(env, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jni函数做勒两件事：</p><p>1）ProcessState::self()-&gt;getContextObject(NULL);</p><p>2）javaObjectForIBinder(env, b);</p><p>根据前面对于ProcessState::self()-&gt;getContextObject(NULL)的分析，我们知道这个函数返回的是一个BpBinder对象。因此，着重对第二件事进行分析.</p><h4 id="1-2-3-创建BinderProxy"><a href="#1-2-3-创建BinderProxy" class="headerlink" title="1.2.3 创建BinderProxy"></a>1.2.3 创建BinderProxy</h4><p>javaObjectForIBinder函数的作用就是将BpBinder对象转化为BinderProxy对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果参数是JavaBBinder，则返回用于创建它的Java对象。 否则，返回IBinder的BinderProxy。 如果先前的呼叫通过了相同的IBinder，并且原始的BinderProxy仍然有效，则返回相同的BinderProxy。</span></span><br><span class="line"><span class="function">jobject <span class="title">javaObjectForIBinder</span><span class="params">(JNIEnv* env, <span class="keyword">const</span> sp&lt;IBinder&gt;&amp; val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (val == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//如果是Binder的子类，类型转换为JavaBBinder并返回</span></span><br><span class="line">    <span class="keyword">if</span> (val-&gt;checkSubclass(&amp;gBinderOffsets)) &#123;</span><br><span class="line">        <span class="comment">// It&#x27;s a JavaBBinder created by ibinderForJavaObject. Already has Java object.</span></span><br><span class="line">        jobject object = <span class="keyword">static_cast</span>&lt;JavaBBinder*&gt;(val.get())-&gt;object();</span><br><span class="line">        LOGDEATH(<span class="string">&quot;objectForBinder %p: it&#x27;s our own %p!\n&quot;</span>, val.get(), object);</span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For the rest of the function we will hold this lock, to serialize</span></span><br><span class="line">    <span class="comment">// looking/creation/destruction of Java proxies for native Binder proxies.</span></span><br><span class="line">    AutoMutex _l(gProxyLock);</span><br><span class="line"></span><br><span class="line">    BinderProxyNativeData* nativeData = gNativeDataCache;</span><br><span class="line">    <span class="keyword">if</span> (nativeData == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        nativeData = <span class="keyword">new</span> BinderProxyNativeData();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// gNativeDataCache is now logically empty.</span></span><br><span class="line">    <span class="comment">//通过JNI调用BinderProxy.getInstance()获取BinderProxy对象</span></span><br><span class="line">    jobject object = env-&gt;CallStaticObjectMethod(gBinderProxyOffsets.mClass,</span><br><span class="line">            gBinderProxyOffsets.mGetInstance, (jlong) nativeData, (jlong) val.get());</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;ExceptionCheck()) &#123;</span><br><span class="line">        <span class="comment">// In the exception case, getInstance still took ownership of nativeData.</span></span><br><span class="line">        gNativeDataCache = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获得BinderProxy.mNativeData</span></span><br><span class="line">    BinderProxyNativeData* actualNativeData = getBPNativeData(env, object);</span><br><span class="line">    <span class="keyword">if</span> (actualNativeData == nativeData) &#123;</span><br><span class="line">        <span class="comment">// New BinderProxy; we still have exclusive access.</span></span><br><span class="line">        nativeData-&gt;mOrgue = <span class="keyword">new</span> DeathRecipientList;</span><br><span class="line">        nativeData-&gt;mObject = val;</span><br><span class="line">        gNativeDataCache = <span class="literal">nullptr</span>;</span><br><span class="line">        ++gNumProxies;</span><br><span class="line">        <span class="keyword">if</span> (gNumProxies &gt;= gProxiesWarned + PROXY_WARN_INTERVAL) &#123;</span><br><span class="line">            ALOGW(<span class="string">&quot;Unexpectedly many live BinderProxies: %d\n&quot;</span>, gNumProxies);</span><br><span class="line">            gProxiesWarned = gNumProxies;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// nativeData wasn&#x27;t used. Reuse it the next time.</span></span><br><span class="line">        gNativeDataCache = nativeData;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 返回BinderProxy对象</span></span><br><span class="line">    <span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>javaObjectForIBinder函数主要做了以下几件事：</p><p>1）nativeData = new BinderProxyNativeData();</p><p>2）jobject object = env-&gt;CallStaticObjectMethod(gBinderProxyOffsets.mClass,<br>            gBinderProxyOffsets.mGetInstance, (jlong) nativeData, (jlong) val.get());</p><p>3）BinderProxyNativeData* actualNativeData = getBPNativeData(env, object);</p><p>那BinderProxyNativeData又代表什么数据呢？</p><p>BinderProxyNativeData</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// We aggregate native pointer fields for BinderProxy in a single object to allow</span></span><br><span class="line"><span class="comment">// management with a single NativeAllocationRegistry, and to reduce the number of JNI</span></span><br><span class="line"><span class="comment">// Java field accesses. This costs us some extra indirections here.</span></span><br><span class="line"><span class="comment">//我们将BinderProxy的本机指针字段聚合在单个对象中，以允许使用单个NativeAllocationRegistry进行管理，并减少JNI Java字段访问的次数。 这使我们在这里花费了一些额外的间接费用。</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BinderProxyNativeData</span> &#123;</span></span><br><span class="line">    <span class="comment">// Both fields are constant and not null once javaObjectForIBinder returns this as</span></span><br><span class="line">    <span class="comment">// part of a BinderProxy.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// The native IBinder proxied by this BinderProxy.</span></span><br><span class="line">    sp&lt;IBinder&gt; mObject;<span class="comment">////BinderProxy.mObject成员变量记录BpBinder对象</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Death recipients for mObject. Reference counted only because DeathRecipients</span></span><br><span class="line">    <span class="comment">// hold a weak reference that can be temporarily promoted.</span></span><br><span class="line">    sp&lt;DeathRecipientList&gt; mOrgue;  <span class="comment">// Death recipients for mObject.</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">BinderProxyNativeData* <span class="title">getBPNativeData</span><span class="params">(JNIEnv* env, jobject obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (BinderProxyNativeData *) env-&gt;GetLongField(obj, gBinderProxyOffsets.mNativeData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CallStaticObjectMethod方法</p><p>并且根据前面的分析，Binder的JNI函数注册时，BinderProxy与jni建立联系：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* <span class="keyword">const</span> kBinderProxyPathName = <span class="string">&quot;android/os/BinderProxy&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">int_register_android_os_BinderProxy</span><span class="params">(JNIEnv* env)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass clazz = FindClassOrDie(env, <span class="string">&quot;java/lang/Error&quot;</span>);</span><br><span class="line">    gErrorOffsets.mClass = MakeGlobalRefOrDie(env, clazz);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其中kBinderProxyPathName = &quot;android/os/BinderProxy&quot;;查找kBinderProxyPathName路径所属类</span></span><br><span class="line">    clazz = FindClassOrDie(env, kBinderProxyPathName);</span><br><span class="line">    <span class="comment">//将Java层BinderProxy类保存到mClass变量；</span></span><br><span class="line">    gBinderProxyOffsets.mClass = MakeGlobalRefOrDie(env, clazz);</span><br><span class="line">    <span class="comment">//将Java层getInstance方法保存到mGetInstance变量；</span></span><br><span class="line">    gBinderProxyOffsets.mGetInstance = GetStaticMethodIDOrDie(env, clazz, <span class="string">&quot;getInstance&quot;</span>,</span><br><span class="line">            <span class="string">&quot;(JJ)Landroid/os/BinderProxy;&quot;</span>);</span><br><span class="line">    gBinderProxyOffsets.mSendDeathNotice = GetStaticMethodIDOrDie(env, clazz, <span class="string">&quot;sendDeathNotice&quot;</span>,</span><br><span class="line">            <span class="string">&quot;(Landroid/os/IBinder$DeathRecipient;)V&quot;</span>);</span><br><span class="line">    gBinderProxyOffsets.mDumpProxyDebugInfo = GetStaticMethodIDOrDie(env, clazz, <span class="string">&quot;dumpProxyDebugInfo&quot;</span>,</span><br><span class="line">            <span class="string">&quot;()V&quot;</span>);</span><br><span class="line">    gBinderProxyOffsets.mNativeData = GetFieldIDOrDie(env, clazz, <span class="string">&quot;mNativeData&quot;</span>, <span class="string">&quot;J&quot;</span>);</span><br><span class="line"></span><br><span class="line">    clazz = FindClassOrDie(env, <span class="string">&quot;java/lang/Class&quot;</span>);</span><br><span class="line">    gClassOffsets.mGetName = GetMethodIDOrDie(env, clazz, <span class="string">&quot;getName&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RegisterMethodsOrDie(</span><br><span class="line">        env, kBinderProxyPathName,</span><br><span class="line">        gBinderProxyMethods, NELEM(gBinderProxyMethods));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册 Binder类的jni方法，其中：</p><ul><li>FindClassOrDie(env, kBinderProxyPathName) 基本等价于 env-&gt;FindClass(kBinderProxyPathName)</li><li>MakeGlobalRefOrDie() 等价于 env-&gt;NewGlobalRef()</li><li>GetMethodIDOrDie() 等价于 env-&gt;GetMethodID()</li><li>GetFieldIDOrDie() 等价于 env-&gt;GeFieldID()</li><li>RegisterMethodsOrDie() 等价于 Android::registerNativeMethods();</li></ul><p>因此</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jobject object = env-&gt;CallStaticObjectMethod(</span><br><span class="line">​gBinderProxyOffsets.mClass, <span class="comment">//MakeGlobalRefOrDie(env, clazz);</span></span><br><span class="line">​            gBinderProxyOffsets.mGetInstance,<span class="comment">//GetStaticMethodIDOrDie(env, clazz, &quot;getInstance&quot;,&quot;(JJ)Landroid/os/BinderProxy;&quot;);</span></span><br><span class="line">​(jlong) nativeData,</span><br><span class="line">​(jlong) val.get());</span><br></pre></td></tr></table></figure><p>通过反射调用BinderProxy的构造函数，创建出BinderProxy对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return a BinderProxy for IBinder.</span></span><br><span class="line"><span class="comment">     * This method is thread-hostile!  The (native) caller serializes getInstance() calls using</span></span><br><span class="line"><span class="comment">     * gProxyLock.</span></span><br><span class="line"><span class="comment">     * If we previously returned a BinderProxy bp for the same iBinder, and bp is still</span></span><br><span class="line"><span class="comment">     * in use, then we return the same bp.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nativeData C++ pointer to (possibly still empty) BinderProxyNativeData.</span></span><br><span class="line"><span class="comment">     * Takes ownership of nativeData iff &lt;result&gt;.mNativeData == nativeData, or if</span></span><br><span class="line"><span class="comment">     * we exit via an exception.  If neither applies, it&#x27;s the callers responsibility to</span></span><br><span class="line"><span class="comment">     * recycle nativeData.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iBinder C++ pointer to IBinder. Does not take ownership of referenced object.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> BinderProxy <span class="title">getInstance</span><span class="params">(<span class="keyword">long</span> nativeData, <span class="keyword">long</span> iBinder)</span> </span>&#123;</span><br><span class="line">        BinderProxy result;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = sProxyMap.get(iBinder);</span><br><span class="line">            <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            result = <span class="keyword">new</span> BinderProxy(nativeData);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            <span class="comment">// We&#x27;re throwing an exception (probably OOME); don&#x27;t drop nativeData.</span></span><br><span class="line">            NativeAllocationRegistry.applyFreeFunction(NoImagePreloadHolder.sNativeFinalizer,</span><br><span class="line">                    nativeData);</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        NoImagePreloadHolder.sRegistry.registerNativeAllocation(result, nativeData);</span><br><span class="line">        <span class="comment">// The registry now owns nativeData, even if registration threw an exception.</span></span><br><span class="line">        sProxyMap.set(iBinder, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据BpBinder(C++)生成BinderProxy(Java)对象. 主要工作是创建BinderProxy对象,并把BpBinder对象地址保存到BinderProxy.mObject成员变量. 到此，可知ServiceManagerNative.asInterface(BinderInternal.getContextObject()) 等价于ServiceManagerNative.asInterface(new BinderProxy())；</p><h2 id="1-3-将AMS添加到Service-Manager中"><a href="#1-3-将AMS添加到Service-Manager中" class="headerlink" title="1.3 将AMS添加到Service_Manager中"></a>1.3 将AMS添加到Service_Manager中</h2><p>由于AMS继承自IActivityManager.Stub，而IActivityManager.Stub又继承自Binder，而Binder实现了IBinder接口，因此AMS是IBinder的子类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(String name, IBinder service, <span class="keyword">boolean</span> allowIsolated,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> dumpPriority)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        getIServiceManager().addService(name, service, allowIsolated, dumpPriority);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;error in addService&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据前面的分析 getIServiceManager()就是获取ServiceManagerProxy的对象，因此，这里开始分析通过ServiceManagerProxy的addService方法将AMS添加进Service_Manager中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ServiceManagerProxy.java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addService</span><span class="params">(String name, IBinder service, <span class="keyword">boolean</span> allowIsolated, <span class="keyword">int</span> dumpPriority)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        Parcel data = Parcel.obtain();</span><br><span class="line">        Parcel reply = Parcel.obtain();</span><br><span class="line">        data.writeInterfaceToken(IServiceManager.descriptor);</span><br><span class="line">        data.writeString(name);</span><br><span class="line">        data.writeStrongBinder(service);<span class="comment">//这里的service是AMS</span></span><br><span class="line">        data.writeInt(allowIsolated ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        data.writeInt(dumpPriority);</span><br><span class="line">        mRemote.transact(ADD_SERVICE_TRANSACTION, data, reply, <span class="number">0</span>);</span><br><span class="line">        reply.recycle();</span><br><span class="line">        data.recycle();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>ServiceManagerProxy的addService方法主要做了以下几件事：</p><p>1）data.writeStrongBinder(service);</p><p>2）mRemote.transact(ADD_SERVICE_TRANSACTION, data, reply, 0);</p><h3 id="1-3-1-Parcel的writeStrongBinder方法"><a href="#1-3-1-Parcel的writeStrongBinder方法" class="headerlink" title="1.3.1 Parcel的writeStrongBinder方法"></a>1.3.1 Parcel的writeStrongBinder方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Write an object into the parcel at the current dataPosition(),</span></span><br><span class="line"><span class="comment">    * growing dataCapacity() if needed.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">writeStrongBinder</span><span class="params">(IBinder val)</span> </span>&#123;</span><br><span class="line">       nativeWriteStrongBinder(mNativePtr, val);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>调用到JNI的Parcel类的android_os_Parcel_writeStrongBinder</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//android_os_Parcel.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">android_os_Parcel_writeStrongBinder</span><span class="params">(JNIEnv* env, jclass clazz, jlong nativePtr, jobject object)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Parcel* parcel = <span class="keyword">reinterpret_cast</span>&lt;Parcel*&gt;(nativePtr);<span class="comment">////将java层Parcel转换为native层Parcel</span></span><br><span class="line">    <span class="keyword">if</span> (parcel != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">//用native的Parcel类对数据进行处理</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">status_t</span> err = parcel-&gt;writeStrongBinder(ibinderForJavaObject(env, object));</span><br><span class="line">        <span class="keyword">if</span> (err != NO_ERROR) &#123;</span><br><span class="line">            signalExceptionForError(env, clazz, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-1-1-ibinderForJavaObject"><a href="#1-3-1-1-ibinderForJavaObject" class="headerlink" title="1.3.1.1 ibinderForJavaObject"></a>1.3.1.1 ibinderForJavaObject</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//android_util_binder.cpp</span></span><br><span class="line"><span class="function">sp&lt;IBinder&gt; <span class="title">ibinderForJavaObject</span><span class="params">(JNIEnv* env, jobject obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Instance of Binder?</span></span><br><span class="line">    <span class="keyword">if</span> (env-&gt;IsInstanceOf(obj, gBinderOffsets.mClass)) &#123;<span class="comment">//mClass指向Java层中的Binder class</span></span><br><span class="line">        JavaBBinderHolder* jbh = (JavaBBinderHolder*)</span><br><span class="line">            env-&gt;GetLongField(obj, gBinderOffsets.mObject);</span><br><span class="line">        <span class="keyword">return</span> jbh-&gt;get(env, obj);<span class="comment">//get() 返回一個JavaBBinder，继承自BBinder</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Instance of BinderProxy?</span></span><br><span class="line">    <span class="keyword">if</span> (env-&gt;IsInstanceOf(obj, gBinderProxyOffsets.mClass)) &#123;<span class="comment">//mClass 指向Java层的BinderProxy class</span></span><br><span class="line">        <span class="keyword">return</span> getBPNativeData(env, obj)-&gt;mObject;<span class="comment">//返回一个BpBinder，mObject是它的地址值</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ALOGW(<span class="string">&quot;ibinderForJavaObject: %p is not a Binder object&quot;</span>, obj);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ibinderForJavaObject函数，就是根据传进来的Java对象找到对应的C++对象，这里的参数obj,可能会指向两种对象：Binder对象或者BinderProxy对象。</p><p>如果传进來的是Binder对象，那么就会把gBinderOffsets.mObject转化成JavaBBinderHolder, 并从中获得一个JavaBBinder对象。JavaBBinder继承自BBinder。</p><p>如果传进來的是BinderProxy對象。就会返回一个BpBinder，这个BpBinder的地址值就保存在gBinderProxyOffsets.mObject中。</p><h4 id="1-3-1-2-flatten-binder"><a href="#1-3-1-2-flatten-binder" class="headerlink" title="1.3.1.2 flatten_binder"></a>1.3.1.2 flatten_binder</h4><p>接着通过用native的Parcel类对数据进行处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">Parcel::writeStrongBinder</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> flatten_binder(ProcessState::self(), val, <span class="keyword">this</span>);<span class="comment">//参数分别为：ProcessState，</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着分析flatten_binder</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">flatten_binder</span><span class="params">(<span class="keyword">const</span> sp&lt;ProcessState&gt;&amp; <span class="comment">/*proc*/</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> sp&lt;IBinder&gt;&amp; binder, Parcel* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    flat_binder_object obj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (IPCThreadState::self()-&gt;backgroundSchedulingDisabled()) &#123;</span><br><span class="line">        <span class="comment">/* minimum priority for all nodes is nice 0 */</span></span><br><span class="line">        obj.flags = FLAT_BINDER_FLAG_ACCEPTS_FDS;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/* minimum priority for all nodes is MAX_NICE(19) */</span></span><br><span class="line">        obj.flags = <span class="number">0x13</span> | FLAT_BINDER_FLAG_ACCEPTS_FDS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (binder != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        IBinder *local = binder-&gt;localBinder();<span class="comment">//这里调用的是谁的localBinder？BBinder的还是IBinder的？</span></span><br><span class="line">        <span class="keyword">if</span> (!local) &#123;</span><br><span class="line">            BpBinder *proxy = binder-&gt;remoteBinder();</span><br><span class="line">            <span class="keyword">if</span> (proxy == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                ALOGE(<span class="string">&quot;null proxy&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">int32_t</span> handle = proxy ? proxy-&gt;handle() : <span class="number">0</span>;</span><br><span class="line">            obj.hdr.type = BINDER_TYPE_HANDLE;</span><br><span class="line">            obj.binder = <span class="number">0</span>; <span class="comment">/* Don&#x27;t pass uninitialized stack data to a remote process */</span></span><br><span class="line">            obj.handle = handle;</span><br><span class="line">            obj.cookie = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">//走这个分支，说明local不为空，因此走的是BBinder的localBinder()函数，那为什么是BBinder的？</span></span><br><span class="line">            obj.hdr.type = BINDER_TYPE_BINDER;</span><br><span class="line">            obj.binder = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(local-&gt;getWeakRefs());</span><br><span class="line">            obj.cookie = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(local);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj.hdr.type = BINDER_TYPE_BINDER;</span><br><span class="line">        obj.binder = <span class="number">0</span>;</span><br><span class="line">        obj.cookie = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> finish_flatten_binder(binder, obj, out);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//frameworks/native/libs/binder/Binder.cpp</span></span><br><span class="line"><span class="function">BBinder* <span class="title">BBinder::localBinder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//frameworks/native/libs/binder/Binder.cpp</span></span><br><span class="line"><span class="function">BBinder* <span class="title">IBinder::localBinder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-2-mRemote-transact方法"><a href="#1-3-2-mRemote-transact方法" class="headerlink" title="1.3.2 mRemote.transact方法"></a>1.3.2 mRemote.transact方法</h3><p>根据前文的分析，java端的mRemote是BinderProxy，所以这里调用的是BinderProxy的transact方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">transact</span><span class="params">(<span class="keyword">int</span> code, Parcel data, Parcel reply, <span class="keyword">int</span> flags)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        Binder.checkParcel(<span class="keyword">this</span>, code, data, <span class="string">&quot;Unreasonably large binder buffer&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mWarnOnBlocking &amp;&amp; ((flags &amp; FLAG_ONEWAY) == <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="comment">// For now, avoid spamming the log by disabling after we&#x27;ve logged</span></span><br><span class="line">            <span class="comment">// about this interface at least once</span></span><br><span class="line">            mWarnOnBlocking = <span class="keyword">false</span>;</span><br><span class="line">            Log.w(Binder.TAG, <span class="string">&quot;Outgoing transactions from this process must be FLAG_ONEWAY&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> Throwable());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> tracingEnabled = Binder.isTracingEnabled();</span><br><span class="line">        <span class="keyword">if</span> (tracingEnabled) &#123;</span><br><span class="line">            <span class="keyword">final</span> Throwable tr = <span class="keyword">new</span> Throwable();</span><br><span class="line">            Binder.getTransactionTracker().addTrace(tr);</span><br><span class="line">            StackTraceElement stackTraceElement = tr.getStackTrace()[<span class="number">1</span>];</span><br><span class="line">            Trace.traceBegin(Trace.TRACE_TAG_ALWAYS,</span><br><span class="line">                    stackTraceElement.getClassName() + <span class="string">&quot;.&quot;</span> + stackTraceElement.getMethodName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> transactNative(code, data, reply, flags);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (tracingEnabled) &#123;</span><br><span class="line">                Trace.traceEnd(Trace.TRACE_TAG_ALWAYS);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>继续调用transactNative，这是个JNI方法，由于在创建虚拟机的时候，已经完成了Java与native之间的函数的注册，因此继续调用native层的transact。即android_os_BinderProxy_transact函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> jboolean <span class="title">android_os_BinderProxy_transact</span><span class="params">(JNIEnv* env, jobject obj,</span></span></span><br><span class="line"><span class="function"><span class="params">        jint code, jobject dataObj, jobject replyObj, jint flags)</span> <span class="comment">// throws RemoteException</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dataObj == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        jniThrowNullPointerException(env, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Parcel* data = parcelForJavaObject(env, dataObj);<span class="comment">//获取 data对象</span></span><br><span class="line">    <span class="keyword">if</span> (data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    Parcel* reply = parcelForJavaObject(env, replyObj);<span class="comment">//获取 data对象</span></span><br><span class="line">    <span class="keyword">if</span> (reply == <span class="literal">NULL</span> &amp;&amp; replyObj != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IBinder* target = getBPNativeData(env, obj)-&gt;mObject.get();<span class="comment">//获取BpBinder对象</span></span><br><span class="line">    <span class="keyword">if</span> (target == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        jniThrowException(env, <span class="string">&quot;java/lang/IllegalStateException&quot;</span>, <span class="string">&quot;Binder has been finalized!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ALOGV(<span class="string">&quot;Java code calling transact on %p in Java object %p with code %&quot;</span> PRId32 <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">            target, obj, code);</span><br><span class="line">    <span class="keyword">bool</span> time_binder_calls;</span><br><span class="line">    <span class="keyword">int64_t</span> start_millis;</span><br><span class="line">    <span class="keyword">if</span> (kEnableBinderSample) &#123;</span><br><span class="line">        <span class="comment">// Only log the binder call duration for things on the Java-level main thread.</span></span><br><span class="line">        <span class="comment">// But if we don&#x27;t</span></span><br><span class="line">        time_binder_calls = should_time_binder_calls();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (time_binder_calls) &#123;</span><br><span class="line">            start_millis = uptimeMillis();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;Transact from Java code to %p sending: &quot;, target); data-&gt;print();</span></span><br><span class="line">    <span class="keyword">status_t</span> err = target-&gt;transact(code, *data, reply, flags);</span><br><span class="line">    <span class="comment">//if (reply) printf(&quot;Transact from Java code to %p received: &quot;, target); reply-&gt;print();</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (kEnableBinderSample) &#123;</span><br><span class="line">        <span class="keyword">if</span> (time_binder_calls) &#123;</span><br><span class="line">            conditionally_log_binder_call(start_millis, target, code);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (err == NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err == UNKNOWN_TRANSACTION) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    signalExceptionForError(env, obj, err, <span class="literal">true</span> <span class="comment">/*canThrowRemoteException*/</span>, data-&gt;dataSize());</span><br><span class="line">    <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终调用BpBinder的transact函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">BpBinder::transact</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">uint32_t</span> code, <span class="keyword">const</span> Parcel&amp; data, Parcel* reply, <span class="keyword">uint32_t</span> flags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Once a binder has died, it will never come back to life.</span></span><br><span class="line">    <span class="keyword">if</span> (mAlive) &#123;</span><br><span class="line">        <span class="keyword">status_t</span> status = IPCThreadState::self()-&gt;transact(</span><br><span class="line">            mHandle, code, data, reply, flags);</span><br><span class="line">        <span class="keyword">if</span> (status == DEAD_OBJECT) mAlive = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> DEAD_OBJECT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部又是通过调用IPCThreadState的transact方法，因此再看IPCThreadState的transact方法。</p><h4 id="1-3-2-1IPCThreadState的transact方法"><a href="#1-3-2-1IPCThreadState的transact方法" class="headerlink" title="1.3.2.1IPCThreadState的transact方法"></a>1.3.2.1IPCThreadState的transact方法</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">IPCThreadState::transact</span><span class="params">(<span class="keyword">int32_t</span> handle,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">uint32_t</span> code, <span class="keyword">const</span> Parcel&amp; data,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  Parcel* reply, <span class="keyword">uint32_t</span> flags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">status_t</span> err;</span><br><span class="line"></span><br><span class="line">    flags |= TF_ACCEPT_FDS;</span><br><span class="line"></span><br><span class="line">    IF_LOG_TRANSACTIONS() &#123;</span><br><span class="line">        TextOutput::Bundle _b(alog);</span><br><span class="line">        alog &lt;&lt; <span class="string">&quot;BC_TRANSACTION thr &quot;</span> &lt;&lt; (<span class="keyword">void</span>*)pthread_self() &lt;&lt; <span class="string">&quot; / hand &quot;</span></span><br><span class="line">            &lt;&lt; handle &lt;&lt; <span class="string">&quot; / code &quot;</span> &lt;&lt; TypeCode(code) &lt;&lt; <span class="string">&quot;: &quot;</span></span><br><span class="line">            &lt;&lt; indent &lt;&lt; data &lt;&lt; dedent &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LOG_ONEWAY(<span class="string">&quot;&gt;&gt;&gt;&gt; SEND from pid %d uid %d %s&quot;</span>, getpid(), getuid(),</span><br><span class="line">        (flags &amp; TF_ONE_WAY) == <span class="number">0</span> ? <span class="string">&quot;READ REPLY&quot;</span> : <span class="string">&quot;ONE WAY&quot;</span>);</span><br><span class="line">    <span class="comment">//传输数据</span></span><br><span class="line">    err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (err != NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">if</span> (reply) reply-&gt;setError(err);</span><br><span class="line">        <span class="keyword">return</span> (mLastError = err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((flags &amp; TF_ONE_WAY) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">        <span class="keyword">if</span> (code == <span class="number">4</span>) &#123; <span class="comment">// relayout</span></span><br><span class="line">            ALOGI(<span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt; CALLING transaction 4&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ALOGI(<span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt; CALLING transaction %d&quot;</span>, code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="keyword">if</span> (reply) &#123;</span><br><span class="line">            <span class="comment">//等待响应 </span></span><br><span class="line">            err = waitForResponse(reply);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Parcel fakeReply;</span><br><span class="line">            err = waitForResponse(&amp;fakeReply);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">        <span class="keyword">if</span> (code == <span class="number">4</span>) &#123; <span class="comment">// relayout</span></span><br><span class="line">            ALOGI(<span class="string">&quot;&lt;&lt;&lt;&lt;&lt;&lt; RETURNING transaction 4&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ALOGI(<span class="string">&quot;&lt;&lt;&lt;&lt;&lt;&lt; RETURNING transaction %d&quot;</span>, code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        IF_LOG_TRANSACTIONS() &#123;</span><br><span class="line">            TextOutput::Bundle _b(alog);</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;BR_REPLY thr &quot;</span> &lt;&lt; (<span class="keyword">void</span>*)pthread_self() &lt;&lt; <span class="string">&quot; / hand &quot;</span></span><br><span class="line">                &lt;&lt; handle &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (reply) alog &lt;&lt; indent &lt;&lt; *reply &lt;&lt; dedent &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span> alog &lt;&lt; <span class="string">&quot;(none requested)&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        err = waitForResponse(<span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IPCThreadState进行trancsact事物处理2部分：</p><p>1）writeTransactionData()： 负责传输数据</p><p>2）waitForResponse()： 负责等待响应</p><p>先看第一部分，数据传输：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">IPCThreadState::writeTransactionData</span><span class="params">(<span class="keyword">int32_t</span> cmd, <span class="keyword">uint32_t</span> binderFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">int32_t</span> handle, <span class="keyword">uint32_t</span> code, <span class="keyword">const</span> Parcel&amp; data, <span class="keyword">status_t</span>* statusBuffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    binder_transaction_data tr;<span class="comment">//创建binder_transaction_data数据结构</span></span><br><span class="line"></span><br><span class="line">    tr.target.ptr = <span class="number">0</span>; <span class="comment">/* Don&#x27;t pass uninitialized stack data to a remote process */</span></span><br><span class="line">    tr.target.handle = handle;<span class="comment">//Handler = 0；</span></span><br><span class="line">    tr.code = code;<span class="comment">//code=ADD_SERVICE_TRANSACTION</span></span><br><span class="line">    tr.flags = binderFlags;<span class="comment">// binderFlags=0</span></span><br><span class="line">    tr.cookie = <span class="number">0</span>;</span><br><span class="line">    tr.sender_pid = <span class="number">0</span>;</span><br><span class="line">    tr.sender_euid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">status_t</span> err = data.errorCheck();<span class="comment">//数据错误校验</span></span><br><span class="line">    <span class="keyword">if</span> (err == NO_ERROR) &#123;</span><br><span class="line">        tr.data_size = data.ipcDataSize();</span><br><span class="line">        tr.data.ptr.buffer = data.ipcData();</span><br><span class="line">        tr.offsets_size = data.ipcObjectsCount()*<span class="keyword">sizeof</span>(<span class="keyword">binder_size_t</span>);</span><br><span class="line">        tr.data.ptr.offsets = data.ipcObjects();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (statusBuffer) &#123;</span><br><span class="line">        tr.flags |= TF_STATUS_CODE;</span><br><span class="line">        *statusBuffer = err;</span><br><span class="line">        tr.data_size = <span class="keyword">sizeof</span>(<span class="keyword">status_t</span>);</span><br><span class="line">        tr.data.ptr.buffer = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(statusBuffer);</span><br><span class="line">        tr.offsets_size = <span class="number">0</span>;</span><br><span class="line">        tr.data.ptr.offsets = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (mLastError = err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mOut.writeInt32(cmd);<span class="comment">//BC_TRANSACTION</span></span><br><span class="line">    mOut.write(&amp;tr, <span class="keyword">sizeof</span>(tr));<span class="comment">// 写入binder_transaction_data数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中handle的值用来标示目的端，注册服务过程的目的端为service manager，此处handle=0所对应的是binder_context_mgr_node对象，正是service manager所对应的binder实体对象。其中 binder_transaction_data结构体是binder驱动通信的数据结构，该过程最终是把Binder请求码BC_TRANSACTION和binder_transaction_data写入mOut。</p><p>transact的过程，先写完binder_transaction_data数据，接下来执行waitForResponse。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">IPCThreadState::waitForResponse</span><span class="params">(Parcel *reply, <span class="keyword">status_t</span> *acquireResult)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> cmd;</span><br><span class="line">    <span class="keyword">int32_t</span> err;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((err=talkWithDriver()) &lt; NO_ERROR) <span class="keyword">break</span>;</span><br><span class="line">        err = mIn.errorCheck();</span><br><span class="line">        <span class="keyword">if</span> (err &lt; NO_ERROR) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (mIn.dataAvail() == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        cmd = (<span class="keyword">uint32_t</span>)mIn.readInt32();</span><br><span class="line"></span><br><span class="line">        IF_LOG_COMMANDS() &#123;</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;Processing waitForResponse Command: &quot;</span></span><br><span class="line">                &lt;&lt; getReturnString(cmd) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">        <span class="keyword">case</span> BR_TRANSACTION_COMPLETE:</span><br><span class="line">            <span class="keyword">if</span> (!reply &amp;&amp; !acquireResult) <span class="keyword">goto</span> finish;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> BR_DEAD_REPLY:</span><br><span class="line">            err = DEAD_OBJECT;</span><br><span class="line">            <span class="keyword">goto</span> finish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> BR_FAILED_REPLY:</span><br><span class="line">            err = FAILED_TRANSACTION;</span><br><span class="line">            <span class="keyword">goto</span> finish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> BR_ACQUIRE_RESULT:</span><br><span class="line">            &#123;</span><br><span class="line">                ALOG_ASSERT(acquireResult != <span class="literal">NULL</span>, <span class="string">&quot;Unexpected brACQUIRE_RESULT&quot;</span>);</span><br><span class="line">                <span class="keyword">const</span> <span class="keyword">int32_t</span> result = mIn.readInt32();</span><br><span class="line">                <span class="keyword">if</span> (!acquireResult) <span class="keyword">continue</span>;</span><br><span class="line">                *acquireResult = result ? NO_ERROR : INVALID_OPERATION;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">goto</span> finish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> BR_REPLY:</span><br><span class="line">            &#123;</span><br><span class="line">                binder_transaction_data tr;</span><br><span class="line">                err = mIn.read(&amp;tr, <span class="keyword">sizeof</span>(tr));</span><br><span class="line">                ALOG_ASSERT(err == NO_ERROR, <span class="string">&quot;Not enough command data for brREPLY&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (err != NO_ERROR) <span class="keyword">goto</span> finish;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (reply) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((tr.flags &amp; TF_STATUS_CODE) == <span class="number">0</span>) &#123;</span><br><span class="line">                        reply-&gt;ipcSetDataReference(</span><br><span class="line">                            <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">uint8_t</span>*&gt;(tr.data.ptr.buffer),</span><br><span class="line">                            tr.data_size,</span><br><span class="line">                            <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">binder_size_t</span>*&gt;(tr.data.ptr.offsets),</span><br><span class="line">                            tr.offsets_size/<span class="keyword">sizeof</span>(<span class="keyword">binder_size_t</span>),</span><br><span class="line">                            freeBuffer, <span class="keyword">this</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        err = *<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">status_t</span>*&gt;(tr.data.ptr.buffer);</span><br><span class="line">                        freeBuffer(<span class="literal">NULL</span>,</span><br><span class="line">                            <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">uint8_t</span>*&gt;(tr.data.ptr.buffer),</span><br><span class="line">                            tr.data_size,</span><br><span class="line">                            <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">binder_size_t</span>*&gt;(tr.data.ptr.offsets),</span><br><span class="line">                            tr.offsets_size/<span class="keyword">sizeof</span>(<span class="keyword">binder_size_t</span>), <span class="keyword">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    freeBuffer(<span class="literal">NULL</span>,</span><br><span class="line">                        <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">uint8_t</span>*&gt;(tr.data.ptr.buffer),</span><br><span class="line">                        tr.data_size,</span><br><span class="line">                        <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">binder_size_t</span>*&gt;(tr.data.ptr.offsets),</span><br><span class="line">                        tr.offsets_size/<span class="keyword">sizeof</span>(<span class="keyword">binder_size_t</span>), <span class="keyword">this</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">goto</span> finish;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            err = executeCommand(cmd);</span><br><span class="line">            <span class="keyword">if</span> (err != NO_ERROR) <span class="keyword">goto</span> finish;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">finish:</span><br><span class="line">    <span class="keyword">if</span> (err != NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">if</span> (acquireResult) *acquireResult = err;</span><br><span class="line">        <span class="keyword">if</span> (reply) reply-&gt;setError(err);</span><br><span class="line">        mLastError = err;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最主要的是talkWithDriver函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">IPCThreadState::talkWithDriver</span><span class="params">(<span class="keyword">bool</span> doReceive)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mProcess-&gt;mDriverFD &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> -EBADF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    binder_write_read bwr;<span class="comment">//创建binder_write_read结构体</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is the read buffer empty?</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">bool</span> needRead = mIn.dataPosition() &gt;= mIn.dataSize();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We don&#x27;t want to write anything if we are still reading</span></span><br><span class="line">    <span class="comment">// from data left in the input buffer and the caller</span></span><br><span class="line">    <span class="comment">// has requested to read the next data.</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">size_t</span> outAvail = (!doReceive || needRead) ? mOut.dataSize() : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    bwr.write_size = outAvail;</span><br><span class="line">    bwr.write_buffer = (<span class="keyword">uintptr_t</span>)mOut.data();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This is what we&#x27;ll read.</span></span><br><span class="line">    <span class="keyword">if</span> (doReceive &amp;&amp; needRead) &#123;</span><br><span class="line">        <span class="comment">//接受数据缓冲区信息的填充，如果以后收到数据，就直接填在mIn中了。</span></span><br><span class="line">        bwr.read_size = mIn.dataCapacity();</span><br><span class="line">        bwr.read_buffer = (<span class="keyword">uintptr_t</span>)mIn.data();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        bwr.read_size = <span class="number">0</span>;</span><br><span class="line">        bwr.read_buffer = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IF_LOG_COMMANDS() &#123;</span><br><span class="line">        TextOutput::Bundle _b(alog);</span><br><span class="line">        <span class="keyword">if</span> (outAvail != <span class="number">0</span>) &#123;</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;Sending commands to driver: &quot;</span> &lt;&lt; indent;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">void</span>* cmds = (<span class="keyword">const</span> <span class="keyword">void</span>*)bwr.write_buffer;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">void</span>* end = ((<span class="keyword">const</span> <span class="keyword">uint8_t</span>*)cmds)+bwr.write_size;</span><br><span class="line">            alog &lt;&lt; HexDump(cmds, bwr.write_size) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">while</span> (cmds &lt; end) cmds = printCommand(alog, cmds);</span><br><span class="line">            alog &lt;&lt; dedent;</span><br><span class="line">        &#125;</span><br><span class="line">        alog &lt;&lt; <span class="string">&quot;Size of receive buffer: &quot;</span> &lt;&lt; bwr.read_size</span><br><span class="line">            &lt;&lt; <span class="string">&quot;, needRead: &quot;</span> &lt;&lt; needRead &lt;&lt; <span class="string">&quot;, doReceive: &quot;</span> &lt;&lt; doReceive &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Return immediately if there is nothing to do.// 当读缓冲和写缓冲都为空，则直接返回</span></span><br><span class="line">    <span class="keyword">if</span> ((bwr.write_size == <span class="number">0</span>) &amp;&amp; (bwr.read_size == <span class="number">0</span>)) <span class="keyword">return</span> NO_ERROR;</span><br><span class="line"></span><br><span class="line">    bwr.write_consumed = <span class="number">0</span>;</span><br><span class="line">    bwr.read_consumed = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">status_t</span> err;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        IF_LOG_COMMANDS() &#123;</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;About to read/write, write size = &quot;</span> &lt;&lt; mOut.dataSize() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__ANDROID__)</span></span><br><span class="line">        <span class="comment">//通过ioctl不停的读写操作，跟Binder驱动进行通信</span></span><br><span class="line">        <span class="keyword">if</span> (ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= <span class="number">0</span>)</span><br><span class="line">            err = NO_ERROR;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            err = -errno;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        err = INVALID_OPERATION;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="keyword">if</span> (mProcess-&gt;mDriverFD &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            err = -EBADF;</span><br><span class="line">        &#125;</span><br><span class="line">        IF_LOG_COMMANDS() &#123;</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;Finished read/write, write size = &quot;</span> &lt;&lt; mOut.dataSize() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (err == -EINTR);</span><br><span class="line"></span><br><span class="line">    IF_LOG_COMMANDS() &#123;</span><br><span class="line">        alog &lt;&lt; <span class="string">&quot;Our err: &quot;</span> &lt;&lt; (<span class="keyword">void</span>*)(<span class="keyword">intptr_t</span>)err &lt;&lt; <span class="string">&quot;, write consumed: &quot;</span></span><br><span class="line">            &lt;&lt; bwr.write_consumed &lt;&lt; <span class="string">&quot; (of &quot;</span> &lt;&lt; mOut.dataSize()</span><br><span class="line">                        &lt;&lt; <span class="string">&quot;), read consumed: &quot;</span> &lt;&lt; bwr.read_consumed &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (err &gt;= NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bwr.write_consumed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bwr.write_consumed &lt; mOut.dataSize())</span><br><span class="line">                mOut.remove(<span class="number">0</span>, bwr.write_consumed);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                mOut.setDataSize(<span class="number">0</span>);</span><br><span class="line">                processPostWriteDerefs();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bwr.read_consumed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            mIn.setDataSize(bwr.read_consumed);</span><br><span class="line">            mIn.setDataPosition(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        IF_LOG_COMMANDS() &#123;</span><br><span class="line">            TextOutput::Bundle _b(alog);</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;Remaining data size: &quot;</span> &lt;&lt; mOut.dataSize() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            alog &lt;&lt; <span class="string">&quot;Received commands from driver: &quot;</span> &lt;&lt; indent;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">void</span>* cmds = mIn.data();</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">void</span>* end = mIn.data() + mIn.dataSize();</span><br><span class="line">            alog &lt;&lt; HexDump(cmds, mIn.dataSize()) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">while</span> (cmds &lt; end) cmds = printReturnCommand(alog, cmds);</span><br><span class="line">            alog &lt;&lt; dedent;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>binder_write_read结构体</strong> 用来与Binder设备交换数据的结构，通过ioctl与mDriverFD通信，是真正与Binder驱动进行数据读写交互的过程。主要操作是mOut和mIn变量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当zygote启动SystemServer后，会调用SystemServer的main函数，SystemServer开始启动之后会拉起一系列的系统服务，因此，本文主要分析AMS启动后，如何将自己注册到ServiceManager中的。&lt;/p&gt;
&lt;h1 id=&quot;1-启动Sys</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ProcessState</title>
    <link href="http://example.com/2020/10/22/ProcessState/"/>
    <id>http://example.com/2020/10/22/ProcessState/</id>
    <published>2020-10-22T01:55:04.000Z</published>
    <updated>2020-11-06T14:59:51.516Z</updated>
    
    <content type="html"><![CDATA[<p>ProcessState是一个Singleton类别，每一个进程只有一个Instance。此对象负责打开Binder Driver(/dev/binder驱动)，建立起进程中的程序与Binder 驱动之间的联系。</p><p>ProcessState创建出BpBinder对象，BpBinder对象的线程透过Binder驱动，转接到IPC线程，去执行另一个进程里函数功能。</p><h2 id="1-1-ProcessState-self"><a href="#1-1-ProcessState-self" class="headerlink" title="1.1 ProcessState::self()"></a>1.1 ProcessState::self()</h2><p>ProcessState采用单例的方式提供ProcessState对象，这就说明每个进程只有一个ProcessState对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sp&lt;ProcessState&gt; <span class="title">ProcessState::self</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mutex::Autolock _l(gProcessMutex);</span><br><span class="line">    <span class="keyword">if</span> (gProcess != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> gProcess;<span class="comment">//gProcess是在Static.cpp中定义的一个全局变量，程序刚开始执行时，gProcess一定为空。</span></span><br><span class="line">    &#125;</span><br><span class="line">    gProcess = <span class="keyword">new</span> ProcessState(<span class="string">&quot;/dev/binder&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> gProcess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ProcessState::ProcessState(<span class="keyword">const</span> <span class="keyword">char</span> *driver)</span><br><span class="line">    : mDriverName(String8(driver))</span><br><span class="line">    , mDriverFD(open_driver(driver))<span class="comment">//打开binder驱动</span></span><br><span class="line">    , mVMStart(MAP_FAILED)<span class="comment">//映射内存的起始地址</span></span><br><span class="line">    , mThreadCountLock(PTHREAD_MUTEX_INITIALIZER)</span><br><span class="line">    , mThreadCountDecrement(PTHREAD_COND_INITIALIZER)</span><br><span class="line">    , mExecutingThreadsCount(<span class="number">0</span>)</span><br><span class="line">    , mMaxThreads(DEFAULT_MAX_BINDER_THREADS)</span><br><span class="line">    , mStarvationStartTimeMs(<span class="number">0</span>)</span><br><span class="line">    , mManagesContexts(<span class="literal">false</span>)</span><br><span class="line">    , mBinderContextCheckFunc(<span class="literal">NULL</span>)</span><br><span class="line">    , mBinderContextUserData(<span class="literal">NULL</span>)</span><br><span class="line">    , mThreadPoolStarted(<span class="literal">false</span>)</span><br><span class="line">    , mThreadPoolSeq(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (mDriverFD &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// mmap the binder, providing a chunk of virtual address space to receive transactions.</span></span><br><span class="line">        mVMStart = mmap(<span class="number">0</span>, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (mVMStart == MAP_FAILED) &#123;</span><br><span class="line">            <span class="comment">// *sigh*</span></span><br><span class="line">            ALOGE(<span class="string">&quot;Using %s failed: unable to mmap transaction memory.\n&quot;</span>, mDriverName.c_str());</span><br><span class="line">            close(mDriverFD);</span><br><span class="line">            mDriverFD = <span class="number">-1</span>;</span><br><span class="line">            mDriverName.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LOG_ALWAYS_FATAL_IF(mDriverFD &lt; <span class="number">0</span>, <span class="string">&quot;Binder driver could not be opened.  Terminating.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里比较关键语句有：</p><p>1）mDriverFD(open_driver(driver))</p><p>2）mVMStart = mmap(0, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, 0);</p><h3 id="1-1-1-mDriverFD-open-driver-driver"><a href="#1-1-1-mDriverFD-open-driver-driver" class="headerlink" title="1.1.1 mDriverFD(open_driver(driver))"></a>1.1.1 mDriverFD(open_driver(driver))</h3><p>根据参数可知，传入的是”/dev/binder”，因此这里主要是通过系统调用，打开binder驱动。并对当前线程，设置最大的线程数目。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">open_driver</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *driver)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd = open(driver, O_RDWR | O_CLOEXEC);<span class="comment">//打开binder驱动</span></span><br><span class="line">    <span class="keyword">if</span> (fd &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> vers = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">status_t</span> result = ioctl(fd, BINDER_VERSION, &amp;vers);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">-1</span>) &#123;</span><br><span class="line">            ALOGE(<span class="string">&quot;Binder ioctl to obtain version failed: %s&quot;</span>, strerror(errno));</span><br><span class="line">            close(fd);</span><br><span class="line">            fd = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="number">0</span> || vers != BINDER_CURRENT_PROTOCOL_VERSION) &#123;</span><br><span class="line">          ALOGE(<span class="string">&quot;Binder driver protocol(%d) does not match user space protocol(%d)! ioctl() return value: %d&quot;</span>,</span><br><span class="line">                vers, BINDER_CURRENT_PROTOCOL_VERSION, result);</span><br><span class="line">            close(fd);</span><br><span class="line">            fd = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">size_t</span> maxThreads = DEFAULT_MAX_BINDER_THREADS;</span><br><span class="line">        result = ioctl(fd, BINDER_SET_MAX_THREADS, &amp;maxThreads);<span class="comment">//设置线程最大的线程数</span></span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">-1</span>) &#123;</span><br><span class="line">            ALOGE(<span class="string">&quot;Binder ioctl to set max threads failed: %s&quot;</span>, strerror(errno));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ALOGW(<span class="string">&quot;Opening &#x27;%s&#x27; failed: %s\n&quot;</span>, driver, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-2-mmap"><a href="#1-1-2-mmap" class="headerlink" title="1.1.2 mmap"></a>1.1.2 mmap</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mVMStart &#x3D; mmap(0, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, 0);</span><br></pre></td></tr></table></figure><p>采用内存映射函数 mmap，给 binder分配一块大小为 (1M-8K)的虚拟地址空间,用来接收事务  </p><p>总结来讲，ProcessState::self()主要是返回ProcessState对象，但是其中一并完成以下工作：</p><p>1）ProcessState的单利模式的唯一性，因此一个进程只打开binder设备一次，其中ProcessState的成员变量mDriverFD记录binder驱动的fd，用于访问binder设备。</p><p>2）BINDER_VM_SIZE=(1<em>1024</em>1024- (4096<em>2))，所以binder分配的默认内存大小是1024</em>1016也就是1M-8K(1M减去8k)</p><p>3）DEFAULT_MAX_BINDER_THREAD=15，binder默认的最大可并发的线程数为16。</p><h2 id="1-2-getContextObject-方法"><a href="#1-2-getContextObject-方法" class="headerlink" title="1.2 getContextObject()方法"></a>1.2 getContextObject()方法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sp&lt;IBinder&gt; <span class="title">ProcessState::getContextObject</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; <span class="comment">/*caller*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getStrongProxyForHandle(<span class="number">0</span>);<span class="comment">//传入的参数为0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">sp&lt;IBinder&gt; <span class="title">ProcessState::getStrongProxyForHandle</span><span class="params">(<span class="keyword">int32_t</span> handle)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sp&lt;IBinder&gt; result;</span><br><span class="line"></span><br><span class="line">    AutoMutex _l(mLock);</span><br><span class="line"><span class="comment">//当handle值所对应的IBinder不存在或弱引用无效时会创建BpBinder，否则直接获取。</span></span><br><span class="line">    handle_entry* e = lookupHandleLocked(handle);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (e != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        IBinder* b = e-&gt;binder;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="literal">NULL</span> || !e-&gt;refs-&gt;attemptIncWeak(<span class="keyword">this</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (handle == <span class="number">0</span>) &#123;</span><br><span class="line">                Parcel data;</span><br><span class="line">                <span class="comment">//针对hande==0的特殊情况，通过PING_TRANSACTION来判断是否准备就绪。</span></span><br><span class="line">                <span class="keyword">status_t</span> status = IPCThreadState::self()-&gt;transact(</span><br><span class="line">                        <span class="number">0</span>, IBinder::PING_TRANSACTION, data, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span> (status == DEAD_OBJECT)</span><br><span class="line">                   <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            b = BpBinder::create(handle);<span class="comment">//这里的handle=0</span></span><br><span class="line">            e-&gt;binder = b;</span><br><span class="line">            <span class="keyword">if</span> (b) e-&gt;refs = b-&gt;getWeakRefs();</span><br><span class="line">            result = b;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result.force_set(b);</span><br><span class="line">            e-&gt;refs-&gt;decWeak(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ProcessState是一个Singleton类别，每一个进程只有一个Instance。此对象负责打开Binder Driver(/dev/binder驱动)，建立起进程中的程序与Binder 驱动之间的联系。&lt;/p&gt;
&lt;p&gt;ProcessState创建出BpBinder</summary>
      
    
    
    
    <category term="AMS" scheme="http://example.com/categories/AMS/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>获取 IServiceManager 流程分析</title>
    <link href="http://example.com/2020/10/22/get-IServiceManager/"/>
    <id>http://example.com/2020/10/22/get-IServiceManager/</id>
    <published>2020-10-22T01:05:40.000Z</published>
    <updated>2020-11-06T15:05:27.184Z</updated>
    
    <content type="html"><![CDATA[<p>代码目录:</p><p>./frameworks/rs/cpp/util/RefBase.h</p><p>./frameworks/native/include/binder/IInterface.h  </p><h1 id="1-获取defaultServiceManager"><a href="#1-获取defaultServiceManager" class="headerlink" title="1 获取defaultServiceManager"></a>1 获取defaultServiceManager</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sp&lt;IServiceManager&gt; <span class="title">defaultServiceManager</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/* 单例模式，如果不为空直接返回 */</span></span><br><span class="line">    <span class="keyword">if</span> (gDefaultServiceManager != <span class="literal">NULL</span>) <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        AutoMutex _l(gDefaultServiceManagerLock);</span><br><span class="line">        <span class="comment">/* 创建或者获取 SM时，SM可能未准备就绪，这时通过 sleep 1秒后，循环尝试获取直到成功*/</span></span><br><span class="line">        <span class="keyword">while</span> (gDefaultServiceManager == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            gDefaultServiceManager = interface_cast&lt;IServiceManager&gt;(</span><br><span class="line">                ProcessState::self()-&gt;getContextObject(<span class="literal">NULL</span>));</span><br><span class="line">            <span class="keyword">if</span> (gDefaultServiceManager == <span class="literal">NULL</span>)</span><br><span class="line">                sleep(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在获取gDefaultServiceManager时，采用单例的模式，当已经创建了gDefaultServiceManager时，就直接返回gDefaultServiceManager对象.如果没有，则通过一个while循环来进行判断，直到创建好了gDefaultServiceManager对象。</p><p>而创建gDefaultServiceManager时，最关键的就是gDefaultServiceManager = interface_cast<IServiceManager>(<br>                ProcessState::self()-&gt;getContextObject(NULL));</IServiceManager></p><p>这里分为三个部分来进行分析：</p><p><strong>1）ProcessState::self()</strong></p><p><strong>3）getContextObject(NULL)</strong></p><p><strong>3）interface_cast<IServiceManager>()</IServiceManager></strong></p><h2 id="1-1-interface-cast-解析"><a href="#1-1-interface-cast-解析" class="headerlink" title="1.1 interface_cast()解析"></a>1.1 interface_cast<IServiceManager>()解析</IServiceManager></h2><p>1)、2)可参考ProcessState解析，因此主要对interface_cast<IServiceManager>()进行分析。</IServiceManager></p><p>interface_cast是在IInterface中定义的一个模板函数，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> INTERFACE&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> sp&lt;INTERFACE&gt; <span class="title">interface_cast</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> INTERFACE::asInterface(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此这里的interface_cast<IServiceManager>()就可以转化为下面的代码：</IServiceManager></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> IServiceManager&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> sp&lt;IServiceManager&gt; <span class="title">interface_cast</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> IServiceManager::asInterface(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，调用interface_cast<IServiceManager>()，其实就是调用IServiceManager::asInterface(obj)，这里再来看IServiceManager的asInterface函数。</IServiceManager></p><p>对于IServiceManager的asInterface函数，其实是在IInterface.h中通过模板定义。</p><p>这里主要看IServiceManager的DECLARE_META_INTERFACE(ServiceManager)的申明以及在BpServiceManager中对实现的申明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IServiceManager</span> :</span> <span class="keyword">public</span> IInterface</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    DECLARE_META_INTERFACE(ServiceManager)</span><br><span class="line">    .......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BpServiceManager</span> :</span> <span class="keyword">public</span> BpInterface&lt;IServiceManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    .......</span><br><span class="line">IMPLEMENT_META_INTERFACE(ServiceManager, <span class="string">&quot;android.os.IServiceManager&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>回到IInterface.h中，发现，这两个是通过#define进行定义的：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DECLARE_META_INTERFACE(INTERFACE)                               \</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> ::android::String16 descriptor;                        \</span><br><span class="line">    static ::android::sp&lt;I##INTERFACE&gt; asInterface(                     \</span><br><span class="line">            <span class="keyword">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj);              \</span><br><span class="line">    <span class="keyword">virtual</span> <span class="keyword">const</span> ::<span class="function">android::String16&amp; <span class="title">getInterfaceDescriptor</span><span class="params">()</span> <span class="keyword">const</span></span>;  \</span><br><span class="line">    I##INTERFACE();                                                     \</span><br><span class="line">    <span class="keyword">virtual</span> ~I##INTERFACE();                                            \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IMPLEMENT_META_INTERFACE(INTERFACE, NAME)                       \</span></span><br><span class="line">    <span class="keyword">const</span> ::android::String16 I##INTERFACE::descriptor(NAME);           \</span><br><span class="line">    <span class="keyword">const</span> ::android::String16&amp;                                          \</span><br><span class="line">            I##INTERFACE::getInterfaceDescriptor() <span class="keyword">const</span> &#123;              \</span><br><span class="line">        <span class="keyword">return</span> I##INTERFACE::descriptor;                                \</span><br><span class="line">    &#125;                                                                   \</span><br><span class="line">    ::android::sp&lt;I##INTERFACE&gt; I##INTERFACE::asInterface(              \</span><br><span class="line">            <span class="keyword">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj)               \</span><br><span class="line">    &#123;                                                                   \</span><br><span class="line">        ::android::sp&lt;I##INTERFACE&gt; intr;                               \</span><br><span class="line">        <span class="keyword">if</span> (obj != <span class="literal">NULL</span>) &#123;                                              \</span><br><span class="line">            intr = <span class="keyword">static_cast</span>&lt;I##INTERFACE*&gt;(                          \</span><br><span class="line">                obj-&gt;queryLocalInterface(                               \</span><br><span class="line">                        I##INTERFACE::descriptor).get());               \</span><br><span class="line">            <span class="keyword">if</span> (intr == <span class="literal">NULL</span>) &#123;                                         \</span><br><span class="line">                intr = <span class="keyword">new</span> Bp##INTERFACE(obj);                          \</span><br><span class="line">            &#125;                                                           \</span><br><span class="line">        &#125;                                                               \</span><br><span class="line">        <span class="keyword">return</span> intr;                                                    \</span><br><span class="line">    &#125;                                                                   \</span><br><span class="line">    I##INTERFACE::I##INTERFACE() &#123; &#125;                                    \</span><br><span class="line">    I##INTERFACE::~I##INTERFACE() &#123; &#125;                                   \</span><br></pre></td></tr></table></figure><p>根据#define的定义，同时将INTERFACE=ServiceManager，对内容进行展开即：</p><p>DECLARE_META_INTERFACE(ServiceManager)代表如下代码,表示的是对asInterface的申明。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> ::android::String16 descriptor;                       </span><br><span class="line"><span class="keyword">static</span> ::<span class="function">android::sp&lt;IServiceManager&gt; <span class="title">asInterface</span><span class="params">(                     </span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj)</span></span>;              </span><br><span class="line">    <span class="keyword">virtual</span> <span class="keyword">const</span> ::<span class="function">android::String16&amp; <span class="title">getInterfaceDescriptor</span><span class="params">()</span> <span class="keyword">const</span></span>;  </span><br><span class="line">    IServiceManager();                                                     </span><br><span class="line">    <span class="keyword">virtual</span> ~IServiceManager();                                            </span><br></pre></td></tr></table></figure><p>同样的对#define IMPLEMENT_META_INTERFACE(INTERFACE, NAME)进行展开，可知是对上述申明的实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ::<span class="function">android::String16 <span class="title">IServiceManager::descriptor</span><span class="params">(NAME)</span></span>;           </span><br><span class="line">    <span class="keyword">const</span> ::android::String16&amp;                                          </span><br><span class="line">            IServiceManager::getInterfaceDescriptor() <span class="keyword">const</span> &#123;              </span><br><span class="line">        <span class="keyword">return</span> IServiceManager::descriptor;                                </span><br><span class="line">    &#125;                                                                   </span><br><span class="line">    ::<span class="function">android::sp&lt;IServiceManager&gt; <span class="title">IServiceManager::asInterface</span><span class="params">(              </span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj)</span>               </span></span><br><span class="line"><span class="function">    </span>&#123;                                                                   </span><br><span class="line">        ::android::sp&lt;IServiceManager&gt; intr;                               </span><br><span class="line">        <span class="keyword">if</span> (obj != <span class="literal">NULL</span>) &#123;                                              </span><br><span class="line">            intr = <span class="keyword">static_cast</span>&lt;IServiceManager*&gt;(                          </span><br><span class="line">                obj-&gt;queryLocalInterface(                               </span><br><span class="line">                        IServiceManager::descriptor).get());               </span><br><span class="line">            <span class="keyword">if</span> (intr == <span class="literal">NULL</span>) &#123;                                         </span><br><span class="line">                intr = <span class="keyword">new</span> BpServiceManager(obj);                          </span><br><span class="line">            &#125;                                                           </span><br><span class="line">        &#125;                                                               </span><br><span class="line">        <span class="keyword">return</span> intr;                                                    </span><br><span class="line">    &#125;                                                                   </span><br><span class="line">    IServiceManager::IServiceManager() &#123; &#125;                                    </span><br><span class="line">    IServiceManager::~IServiceManager() &#123; &#125;                                   </span><br></pre></td></tr></table></figure><p>根据上述展开的代码，不难发现，上面说的IServiceManager::asInterface() 等价于new BpServiceManager()。</p><p>并且结合前面的分析：interface_cast<IServiceManager>(ProcessState::self()-&gt;getContextObject(NULL));</IServiceManager></p><p>ProcessState::self()-&gt;getContextObject(NULL)返回的是BpBinder，因此，在这里，更确切地说应该是new   BpServiceManager(BpBinder)。</p><p>所以，总结起来，其实是就是:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gDefaultServiceManager = interface_cast&lt;IServiceManager&gt;(ProcessState::self()-&gt;getContextObject(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">gDefaultServiceManager = <span class="keyword">new</span> BpServiceManager(BpBinder);</span><br></pre></td></tr></table></figure><h2 id="1-2-BpServiceManager"><a href="#1-2-BpServiceManager" class="headerlink" title="1.2 BpServiceManager"></a>1.2 BpServiceManager</h2><p>BpServiceManager是IServiceManager的内部类，BpServiceManager继承自BpInterface。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">explicit</span> <span class="title">BpServiceManager</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; impl)</span></span></span><br><span class="line"><span class="function">        : BpInterface&lt;IServiceManager&gt;<span class="params">(impl)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>会调用父类的BpInterface<IServiceManager>(impl)，因此继续看父类的实现：</IServiceManager></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//./frameworks/native/include/binder/IInterface.h  </span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> INTERFACE&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BpInterface</span> :</span> <span class="keyword">public</span> INTERFACE, <span class="keyword">public</span> BpRefBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span>                    <span class="title">BpInterface</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; remote)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> IBinder*            <span class="title">onAsBinder</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//./frameworks/native/include/binder/binder.h</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BpRefBase</span> :</span> <span class="keyword">public</span> <span class="keyword">virtual</span> RefBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span>                <span class="title">BpRefBase</span><span class="params">(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; o)</span></span>;</span><br><span class="line">    <span class="keyword">virtual</span>                 ~BpRefBase();</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span>            <span class="title">onFirstRef</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span>            <span class="title">onLastStrongRef</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span>            <span class="title">onIncStrongAttempted</span><span class="params">(<span class="keyword">uint32_t</span> flags, <span class="keyword">const</span> <span class="keyword">void</span>* id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">inline</span>  IBinder*        <span class="title">remote</span><span class="params">()</span>                </span>&#123; <span class="keyword">return</span> mRemote; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span>  IBinder*        <span class="title">remote</span><span class="params">()</span> <span class="keyword">const</span>          </span>&#123; <span class="keyword">return</span> mRemote; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">                            BpRefBase(<span class="keyword">const</span> BpRefBase&amp; o);</span><br><span class="line">    BpRefBase&amp;              <span class="keyword">operator</span>=(<span class="keyword">const</span> BpRefBase&amp; o);</span><br><span class="line"></span><br><span class="line">    IBinder* <span class="keyword">const</span>          mRemote;</span><br><span class="line">    RefBase::weakref_type*  mRefs;</span><br><span class="line">    <span class="built_in">std</span>::atomic&lt;<span class="keyword">int32_t</span>&gt;    mState;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//./frameworks/native/include/binder/binder.cpp</span></span><br><span class="line">BpRefBase::BpRefBase(<span class="keyword">const</span> sp&lt;IBinder&gt;&amp; o)</span><br><span class="line">    : mRemote(o.get()), mRefs(<span class="literal">NULL</span>), mState(<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    extendObjectLifetime(OBJECT_LIFETIME_WEAK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mRemote) &#123;</span><br><span class="line">        mRemote-&gt;incStrong(<span class="keyword">this</span>);           <span class="comment">// Removed on first IncStrong().</span></span><br><span class="line">        mRefs = mRemote-&gt;createWeak(<span class="keyword">this</span>);  <span class="comment">// Held for our entire lifetime.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终通过BpRefBase的构造函数，对mRemote进行赋值，这个就是</p><p><img src="../images/get-IServiceManager/image-20201026173133422.png" alt="image-20201026173133422"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;代码目录:&lt;/p&gt;
&lt;p&gt;./frameworks/rs/cpp/util/RefBase.h&lt;/p&gt;
&lt;p&gt;./frameworks/native/include/binder/IInterface.h  &lt;/p&gt;
&lt;h1 id=&quot;1-获取defaultServiceMa</summary>
      
    
    
    
    <category term="binder" scheme="http://example.com/categories/binder/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
</feed>
