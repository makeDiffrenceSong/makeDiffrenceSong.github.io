<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Make a difference</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-06T13:04:52.424Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SongSong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EventDispatch</title>
    <link href="http://example.com/2020/10/06/EventDispatch/"/>
    <id>http://example.com/2020/10/06/EventDispatch/</id>
    <published>2020-10-06T05:55:43.000Z</published>
    <updated>2020-10-06T13:04:52.424Z</updated>
    
    <content type="html"><![CDATA[<p>事件分发的原理</p><p><img src="/images/EventDispatch/EventDispatch.bmp" alt="EventDispatch"></p><h1 id="1-activity中的事件分发与处理"><a href="#1-activity中的事件分发与处理" class="headerlink" title="1.activity中的事件分发与处理"></a>1.activity中的事件分发与处理</h1><p>当主activity中监控到有触摸事件之后，会触发activity中的dispatchTouchEvent方法执行。</p><p>activity拿到事件之后，会进行如下判断：</p><p>将事件分发给view，让view去决定是否对事件进行处理。这其中就有两种结果</p><p>​    1）view中的控件接收了事件，事件由view去处理；</p><p>​        ①如果view接收了事件，则view会去处理整个事件序列</p><p>​        ②如果view不接受事件，则交给activity去处理。</p><p>​    2）view中的控件不做处理，事件由activity自身去处理，则调用onTouchEvent方法进行事件处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev.getAction() == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">        onUserInteraction();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (getWindow().superDispatchTouchEvent(ev)) &#123;<span class="comment">//并</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> onTouchEvent(ev);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-activity下发事件"><a href="#2-activity下发事件" class="headerlink" title="2.activity下发事件"></a>2.activity下发事件</h1><h2 id="2-1-ViewGroup中的事件分发与处理"><a href="#2-1-ViewGroup中的事件分发与处理" class="headerlink" title="2.1 ViewGroup中的事件分发与处理"></a>2.1 ViewGroup中的事件分发与处理</h2><p>activity通过PhoneWindow将事件分发给DecorView，并由DecorView的父类进行事件分发，而DecorView本身就是一个ViewGroup，所以，事件分发的工作就转交给了ViewGroup。</p><p>ViewGroup拿到事件之后，也会进行判断：</p><p>1）判断自己是否要拦截，如果不拦截，则直接</p><p>当</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onTouchEvent(ev, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the event targets the accessibility focused view and this is it, start</span></span><br><span class="line">    <span class="comment">// normal event dispatch. Maybe a descendant is what will handle the click.</span></span><br><span class="line">    <span class="keyword">if</span> (ev.isTargetAccessibilityFocus() &amp;&amp; isAccessibilityFocusedViewOrHost()) &#123;</span><br><span class="line">        ev.setTargetAccessibilityFocus(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> handled = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (onFilterTouchEventForSecurity(ev)) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> action = ev.getAction();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> actionMasked = action &amp; MotionEvent.ACTION_MASK;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Handle an initial down.</span></span><br><span class="line">        <span class="keyword">if</span> (actionMasked == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">            <span class="comment">// Throw away all previous state when starting a new touch gesture.</span></span><br><span class="line">            <span class="comment">// The framework may have dropped the up or cancel event for the previous gesture</span></span><br><span class="line">            <span class="comment">// due to an app switch, ANR, or some other state change.</span></span><br><span class="line">            cancelAndClearTouchTargets(ev);</span><br><span class="line">            resetTouchState();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check for interception.</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> intercepted;<span class="comment">//用于记录是否拦截事件的标志</span></span><br><span class="line">        <span class="comment">//mFirstTouchTarget成员变量</span></span><br><span class="line">        <span class="comment">//下面的判断就是，如果当前是一个手势，且没有分发给其他的View，就会执行后续的代码</span></span><br><span class="line">        <span class="keyword">if</span> (actionMasked == MotionEvent.ACTION_DOWN<span class="comment">//down事件或者mFirstTouchTarget！=null</span></span><br><span class="line">                || mFirstTouchTarget != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//并通过这个标志来判断是否允许拦截本次事件</span></span><br><span class="line">            <span class="comment">//由于父亲有权利去拦截事件，因此，child view可以组阻止父亲事件拦截，即通过修改这个标志位来实现</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> disallowIntercept = (mGroupFlags &amp; FLAG_DISALLOW_INTERCEPT) != <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!disallowIntercept) &#123;</span><br><span class="line">                <span class="comment">//如果child允许father view拦截</span></span><br><span class="line">                <span class="comment">//则开始进行拦截判断</span></span><br><span class="line">                intercepted = onInterceptTouchEvent(ev);</span><br><span class="line">                ev.setAction(action); <span class="comment">// restore action in case it was changed</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果child不允许father view拦截触摸事件，则直接将截事件的标志置为false</span></span><br><span class="line">                intercepted = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// There are no touch targets and this action is not an initial down</span></span><br><span class="line">            <span class="comment">// so this view group continues to intercept touches.</span></span><br><span class="line">            <span class="comment">//不是初始的down事件，且没有touch targets，直接将截事件的标志置为true</span></span><br><span class="line">            <span class="comment">//简单理解就是不是down事件，且子View不接受事件，这种情况直接当拦截来处理</span></span><br><span class="line">            intercepted = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If intercepted, start normal event dispatch. Also if there is already</span></span><br><span class="line">        <span class="comment">// a view that is handling the gesture, do normal event dispatch.</span></span><br><span class="line">        <span class="keyword">if</span> (intercepted || mFirstTouchTarget != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ev.setTargetAccessibilityFocus(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check for cancelation.检查是否是事件取消</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> canceled = resetCancelNextUpFlag(<span class="keyword">this</span>)</span><br><span class="line">                || actionMasked == MotionEvent.ACTION_CANCEL;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update list of touch targets for pointer down, if needed.</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> split = (mGroupFlags &amp; FLAG_SPLIT_MOTION_EVENTS) != <span class="number">0</span>;</span><br><span class="line">        TouchTarget newTouchTarget = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">boolean</span> alreadyDispatchedToNewTouchTarget = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//也不是取消事件，也没有被拦截，就会将事件分发到child view</span></span><br><span class="line">        <span class="keyword">if</span> (!canceled &amp;&amp; !intercepted) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the event is targeting accessibility focus we give it to the</span></span><br><span class="line">            <span class="comment">// view that has accessibility focus and if it does not handle it</span></span><br><span class="line">            <span class="comment">// we clear the flag and dispatch the event to all children as usual.</span></span><br><span class="line">            <span class="comment">// We are looking up the accessibility focused host to avoid keeping</span></span><br><span class="line">            <span class="comment">// state since these events are very rare.</span></span><br><span class="line">            View childWithAccessibilityFocus = ev.isTargetAccessibilityFocus()</span><br><span class="line">                    ? findChildWithAccessibilityFocus() : <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (actionMasked == MotionEvent.ACTION_DOWN</span><br><span class="line">                    || (split &amp;&amp; actionMasked == MotionEvent.ACTION_POINTER_DOWN)</span><br><span class="line">                    || actionMasked == MotionEvent.ACTION_HOVER_MOVE) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> actionIndex = ev.getActionIndex(); <span class="comment">// always 0 for down</span></span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> idBitsToAssign = split ? <span class="number">1</span> &lt;&lt; ev.getPointerId(actionIndex)</span><br><span class="line">                        : TouchTarget.ALL_POINTER_IDS;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Clean up earlier touch targets for this pointer id in case they</span></span><br><span class="line">                <span class="comment">// have become out of sync.</span></span><br><span class="line">                removePointersFromTouchTargets(idBitsToAssign);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> childrenCount = mChildrenCount;</span><br><span class="line">                <span class="keyword">if</span> (newTouchTarget == <span class="keyword">null</span> &amp;&amp; childrenCount != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">float</span> x = ev.getX(actionIndex);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">float</span> y = ev.getY(actionIndex);</span><br><span class="line">                    <span class="comment">// Find a child that can receive the event.</span></span><br><span class="line">                    <span class="comment">// Scan children from front to back.</span></span><br><span class="line">                    <span class="keyword">final</span> ArrayList&lt;View&gt; preorderedList = buildTouchDispatchChildList();</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">boolean</span> customOrder = preorderedList == <span class="keyword">null</span></span><br><span class="line">                            &amp;&amp; isChildrenDrawingOrderEnabled();</span><br><span class="line">                    <span class="keyword">final</span> View[] children = mChildren;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = childrenCount - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                        <span class="keyword">final</span> <span class="keyword">int</span> childIndex = getAndVerifyPreorderedIndex(</span><br><span class="line">                                childrenCount, i, customOrder);</span><br><span class="line">                        <span class="keyword">final</span> View child = getAndVerifyPreorderedView(</span><br><span class="line">                                preorderedList, children, childIndex);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// If there is a view that has accessibility focus we want it</span></span><br><span class="line">                        <span class="comment">// to get the event first and if not handled we will perform a</span></span><br><span class="line">                        <span class="comment">// normal dispatch. We may do a double iteration but this is</span></span><br><span class="line">                        <span class="comment">// safer given the timeframe.</span></span><br><span class="line">                        <span class="keyword">if</span> (childWithAccessibilityFocus != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (childWithAccessibilityFocus != child) &#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            childWithAccessibilityFocus = <span class="keyword">null</span>;</span><br><span class="line">                            i = childrenCount - <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (!child.canReceivePointerEvents()</span><br><span class="line">                                || !isTransformedTouchPointInView(x, y, child, <span class="keyword">null</span>)) &#123;</span><br><span class="line">                            ev.setTargetAccessibilityFocus(<span class="keyword">false</span>);</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        newTouchTarget = getTouchTarget(child);</span><br><span class="line">                        <span class="keyword">if</span> (newTouchTarget != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="comment">// Child is already receiving touch within its bounds.</span></span><br><span class="line">                            <span class="comment">// Give it the new pointer in addition to the ones it is handling.</span></span><br><span class="line">                            newTouchTarget.pointerIdBits |= idBitsToAssign;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        resetCancelNextUpFlag(child);</span><br><span class="line">                        <span class="keyword">if</span> (dispatchTransformedTouchEvent(ev, <span class="keyword">false</span>, child, idBitsToAssign)) &#123;</span><br><span class="line">                            <span class="comment">// Child wants to receive touch within its bounds.</span></span><br><span class="line">                            mLastTouchDownTime = ev.getDownTime();</span><br><span class="line">                            <span class="keyword">if</span> (preorderedList != <span class="keyword">null</span>) &#123;</span><br><span class="line">                                <span class="comment">// childIndex points into presorted list, find original index</span></span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; childrenCount; j++) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (children[childIndex] == mChildren[j]) &#123;</span><br><span class="line">                                        mLastTouchDownIndex = j;</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                mLastTouchDownIndex = childIndex;</span><br><span class="line">                            &#125;</span><br><span class="line">                            mLastTouchDownX = ev.getX();</span><br><span class="line">                            mLastTouchDownY = ev.getY();</span><br><span class="line">                            newTouchTarget = addTouchTarget(child, idBitsToAssign);</span><br><span class="line">                            alreadyDispatchedToNewTouchTarget = <span class="keyword">true</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// The accessibility focus didn&#x27;t handle the event, so clear</span></span><br><span class="line">                        <span class="comment">// the flag and do a normal dispatch to all children.</span></span><br><span class="line">                        ev.setTargetAccessibilityFocus(<span class="keyword">false</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (preorderedList != <span class="keyword">null</span>) preorderedList.clear();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (newTouchTarget == <span class="keyword">null</span> &amp;&amp; mFirstTouchTarget != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// Did not find a child to receive the event.</span></span><br><span class="line">                    <span class="comment">// Assign the pointer to the least recently added target.</span></span><br><span class="line">                    newTouchTarget = mFirstTouchTarget;</span><br><span class="line">                    <span class="keyword">while</span> (newTouchTarget.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        newTouchTarget = newTouchTarget.next;<span class="comment">//会将View的触摸事件全部记录带newTouchTarget中</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    newTouchTarget.pointerIdBits |= idBitsToAssign;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Dispatch to touch targets.</span></span><br><span class="line">        <span class="keyword">if</span> (mFirstTouchTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// No touch targets so treat this as an ordinary view.</span></span><br><span class="line">            handled = dispatchTransformedTouchEvent(ev, canceled, <span class="keyword">null</span>,</span><br><span class="line">                    TouchTarget.ALL_POINTER_IDS);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Dispatch to touch targets, excluding the new touch target if we already</span></span><br><span class="line">            <span class="comment">// dispatched to it.  Cancel touch targets if necessary.</span></span><br><span class="line">            TouchTarget predecessor = <span class="keyword">null</span>;</span><br><span class="line">            TouchTarget target = mFirstTouchTarget;</span><br><span class="line">            <span class="keyword">while</span> (target != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">final</span> TouchTarget next = target.next;</span><br><span class="line">                <span class="keyword">if</span> (alreadyDispatchedToNewTouchTarget &amp;&amp; target == newTouchTarget) &#123;</span><br><span class="line">                    handled = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">boolean</span> cancelChild = resetCancelNextUpFlag(target.child)</span><br><span class="line">                            || intercepted;</span><br><span class="line">                    <span class="keyword">if</span> (dispatchTransformedTouchEvent(ev, cancelChild,</span><br><span class="line">                            target.child, target.pointerIdBits)) &#123;</span><br><span class="line">                        handled = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (cancelChild) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (predecessor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            mFirstTouchTarget = next;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            predecessor.next = next;</span><br><span class="line">                        &#125;</span><br><span class="line">                        target.recycle();</span><br><span class="line">                        target = next;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                predecessor = target;</span><br><span class="line">                target = next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update list of touch targets for pointer up or cancel, if needed.</span></span><br><span class="line">        <span class="keyword">if</span> (canceled</span><br><span class="line">                || actionMasked == MotionEvent.ACTION_UP</span><br><span class="line">                || actionMasked == MotionEvent.ACTION_HOVER_MOVE) &#123;</span><br><span class="line">            resetTouchState();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (split &amp;&amp; actionMasked == MotionEvent.ACTION_POINTER_UP) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> actionIndex = ev.getActionIndex();</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> idBitsToRemove = <span class="number">1</span> &lt;&lt; ev.getPointerId(actionIndex);</span><br><span class="line">            removePointersFromTouchTargets(idBitsToRemove);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!handled &amp;&amp; mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onUnhandledEvent(ev, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> handled;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev.isFromSource(InputDevice.SOURCE_MOUSE)</span><br><span class="line">            &amp;&amp; ev.getAction() == MotionEvent.ACTION_DOWN</span><br><span class="line">            &amp;&amp; ev.isButtonPressed(MotionEvent.BUTTON_PRIMARY)</span><br><span class="line">            &amp;&amp; isOnScrollbarThumb(ev.getX(), ev.getY())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * child view可以通过这个函数来给标志位进行赋值，来限制father view对事件的拦截</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestDisallowInterceptTouchEvent</span><span class="params">(<span class="keyword">boolean</span> disallowIntercept)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (disallowIntercept == ((mGroupFlags &amp; FLAG_DISALLOW_INTERCEPT) != <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="comment">// We&#x27;re already in this state, assume our ancestors are too</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (disallowIntercept) &#123;</span><br><span class="line">        mGroupFlags |= FLAG_DISALLOW_INTERCEPT;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mGroupFlags &amp;= ~FLAG_DISALLOW_INTERCEPT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Pass it up to our parent</span></span><br><span class="line">    <span class="keyword">if</span> (mParent != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mParent.requestDisallowInterceptTouchEvent(disallowIntercept);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="View-中的事件处理"><a href="#View-中的事件处理" class="headerlink" title="View 中的事件处理"></a>View 中的事件处理</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// If the event should be handled by accessibility focus first.</span></span><br><span class="line">    <span class="keyword">if</span> (event.isTargetAccessibilityFocus()) &#123;</span><br><span class="line">        <span class="comment">// We don&#x27;t have focus or no virtual descendant has it, do not handle the event.</span></span><br><span class="line">        <span class="keyword">if</span> (!isAccessibilityFocusedViewOrHost()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// We have focus and got the event, then use normal event dispatch.</span></span><br><span class="line">        event.setTargetAccessibilityFocus(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onTouchEvent(event, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> actionMasked = event.getActionMasked();</span><br><span class="line">    <span class="keyword">if</span> (actionMasked == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">        <span class="comment">// Defensive cleanup for new gesture</span></span><br><span class="line">        stopNestedScroll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (onFilterTouchEventForSecurity(event)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((mViewFlags &amp; ENABLED_MASK) == ENABLED &amp;&amp; handleScrollBarDragging(event)) &#123;</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        ListenerInfo li = mListenerInfo;</span><br><span class="line">        <span class="comment">//从这里可以看出，只要空间重写了onTouch方法，就一定会执行</span></span><br><span class="line">        <span class="comment">//但是其他的事件监听是否会执行，得看onTouch的返回结果，</span></span><br><span class="line">        <span class="comment">//如果onTouch返回false，则其他的事件任然可以被捕获</span></span><br><span class="line">        <span class="comment">//如果返回为true则事件直接被onTouch消费掉了。</span></span><br><span class="line">        <span class="keyword">if</span> (li != <span class="keyword">null</span> &amp;&amp; li.mOnTouchListener != <span class="keyword">null</span></span><br><span class="line">                &amp;&amp; (mViewFlags &amp; ENABLED_MASK) == ENABLED</span><br><span class="line">                &amp;&amp; li.mOnTouchListener.onTouch(<span class="keyword">this</span>, event)) &#123;</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//如果事件没有被消费，则开始执行onTouchEvent方法。</span></span><br><span class="line">        <span class="keyword">if</span> (!result &amp;&amp; onTouchEvent(event)) &#123;</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!result &amp;&amp; mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onUnhandledEvent(event, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clean up after nested scrolls if this is the end of a gesture;</span></span><br><span class="line">    <span class="comment">// also cancel it if we tried an ACTION_DOWN but we didn&#x27;t want the rest</span></span><br><span class="line">    <span class="comment">// of the gesture.</span></span><br><span class="line">    <span class="keyword">if</span> (actionMasked == MotionEvent.ACTION_UP ||</span><br><span class="line">            actionMasked == MotionEvent.ACTION_CANCEL ||</span><br><span class="line">            (actionMasked == MotionEvent.ACTION_DOWN &amp;&amp; !result)) &#123;</span><br><span class="line">        stopNestedScroll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Implement this method to handle touch screen motion events.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * If this method is used to detect click actions, it is recommended that</span></span><br><span class="line"><span class="comment"> * the actions be performed by implementing and calling</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #performClick()&#125;. This will ensure consistent system behavior,</span></span><br><span class="line"><span class="comment"> * including:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;obeying click sound preferences</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;dispatching OnClickListener calls</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;handling &#123;<span class="doctag">@link</span> AccessibilityNodeInfo#ACTION_CLICK ACTION_CLICK&#125; when</span></span><br><span class="line"><span class="comment"> * accessibility features are enabled</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> event The motion event.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> True if the event was handled, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> x = event.getX();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> y = event.getY();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> viewFlags = mViewFlags;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> action = event.getAction();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> clickable = ((viewFlags &amp; CLICKABLE) == CLICKABLE</span><br><span class="line">            || (viewFlags &amp; LONG_CLICKABLE) == LONG_CLICKABLE)</span><br><span class="line">            || (viewFlags &amp; CONTEXT_CLICKABLE) == CONTEXT_CLICKABLE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((viewFlags &amp; ENABLED_MASK) == DISABLED) &#123;</span><br><span class="line">        <span class="keyword">if</span> (action == MotionEvent.ACTION_UP &amp;&amp; (mPrivateFlags &amp; PFLAG_PRESSED) != <span class="number">0</span>) &#123;</span><br><span class="line">            setPressed(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mPrivateFlags3 &amp;= ~PFLAG3_FINGER_DOWN;</span><br><span class="line">        <span class="comment">// A disabled view that is clickable still consumes the touch</span></span><br><span class="line">        <span class="comment">// events, it just doesn&#x27;t respond to them.</span></span><br><span class="line">        <span class="keyword">return</span> clickable;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mTouchDelegate != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mTouchDelegate.onTouchEvent(event)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (clickable || (viewFlags &amp; TOOLTIP) == TOOLTIP) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                mPrivateFlags3 &amp;= ~PFLAG3_FINGER_DOWN;</span><br><span class="line">                <span class="keyword">if</span> ((viewFlags &amp; TOOLTIP) == TOOLTIP) &#123;</span><br><span class="line">                    handleTooltipUp();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!clickable) &#123;</span><br><span class="line">                    removeTapCallback();</span><br><span class="line">                    removeLongPressCallback();</span><br><span class="line">                    mInContextButtonPress = <span class="keyword">false</span>;</span><br><span class="line">                    mHasPerformedLongPress = <span class="keyword">false</span>;</span><br><span class="line">                    mIgnoreNextUpEvent = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">boolean</span> prepressed = (mPrivateFlags &amp; PFLAG_PREPRESSED) != <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> ((mPrivateFlags &amp; PFLAG_PRESSED) != <span class="number">0</span> || prepressed) &#123;</span><br><span class="line">                    <span class="comment">// take focus if we don&#x27;t have it already and we should in</span></span><br><span class="line">                    <span class="comment">// touch mode.</span></span><br><span class="line">                    <span class="keyword">boolean</span> focusTaken = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (isFocusable() &amp;&amp; isFocusableInTouchMode() &amp;&amp; !isFocused()) &#123;</span><br><span class="line">                        focusTaken = requestFocus();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (prepressed) &#123;</span><br><span class="line">                        <span class="comment">// The button is being released before we actually</span></span><br><span class="line">                        <span class="comment">// showed it as pressed.  Make it show the pressed</span></span><br><span class="line">                        <span class="comment">// state now (before scheduling the click) to ensure</span></span><br><span class="line">                        <span class="comment">// the user sees it.</span></span><br><span class="line">                        setPressed(<span class="keyword">true</span>, x, y);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!mHasPerformedLongPress &amp;&amp; !mIgnoreNextUpEvent) &#123;</span><br><span class="line">                        <span class="comment">// This is a tap, so remove the longpress check</span></span><br><span class="line">                        removeLongPressCallback();</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// Only perform take click actions if we were in the pressed state</span></span><br><span class="line">                        <span class="keyword">if</span> (!focusTaken) &#123;</span><br><span class="line">                            <span class="comment">// Use a Runnable and post this rather than calling</span></span><br><span class="line">                            <span class="comment">// performClick directly. This lets other visual state</span></span><br><span class="line">                            <span class="comment">// of the view update before click actions start.</span></span><br><span class="line">                            <span class="keyword">if</span> (mPerformClick == <span class="keyword">null</span>) &#123;</span><br><span class="line">                                mPerformClick = <span class="keyword">new</span> PerformClick();</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (!post(mPerformClick)) &#123;</span><br><span class="line">                                performClickInternal();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (mUnsetPressedState == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mUnsetPressedState = <span class="keyword">new</span> UnsetPressedState();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (prepressed) &#123;</span><br><span class="line">                        postDelayed(mUnsetPressedState,</span><br><span class="line">                                ViewConfiguration.getPressedStateDuration());</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!post(mUnsetPressedState)) &#123;</span><br><span class="line">                        <span class="comment">// If the post failed, unpress right now</span></span><br><span class="line">                        mUnsetPressedState.run();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    removeTapCallback();</span><br><span class="line">                &#125;</span><br><span class="line">                mIgnoreNextUpEvent = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                <span class="keyword">if</span> (event.getSource() == InputDevice.SOURCE_TOUCHSCREEN) &#123;</span><br><span class="line">                    mPrivateFlags3 |= PFLAG3_FINGER_DOWN;</span><br><span class="line">                &#125;</span><br><span class="line">                mHasPerformedLongPress = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!clickable) &#123;</span><br><span class="line">                    checkForLongClick(</span><br><span class="line">                            ViewConfiguration.getLongPressTimeout(),</span><br><span class="line">                            x,</span><br><span class="line">                            y,</span><br><span class="line">                            TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (performButtonActionOnTouchDown(event)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Walk up the hierarchy to determine if we&#x27;re inside a scrolling container.</span></span><br><span class="line">                <span class="keyword">boolean</span> isInScrollingContainer = isInScrollingContainer();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// For views inside a scrolling container, delay the pressed feedback for</span></span><br><span class="line">                <span class="comment">// a short period in case this is a scroll.</span></span><br><span class="line">                <span class="keyword">if</span> (isInScrollingContainer) &#123;</span><br><span class="line">                    mPrivateFlags |= PFLAG_PREPRESSED;</span><br><span class="line">                    <span class="keyword">if</span> (mPendingCheckForTap == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mPendingCheckForTap = <span class="keyword">new</span> CheckForTap();</span><br><span class="line">                    &#125;</span><br><span class="line">                    mPendingCheckForTap.x = event.getX();</span><br><span class="line">                    mPendingCheckForTap.y = event.getY();</span><br><span class="line">                    postDelayed(mPendingCheckForTap, ViewConfiguration.getTapTimeout());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// Not inside a scrolling container, so show the feedback right away</span></span><br><span class="line">                    setPressed(<span class="keyword">true</span>, x, y);</span><br><span class="line">                    checkForLongClick(</span><br><span class="line">                            ViewConfiguration.getLongPressTimeout(),</span><br><span class="line">                            x,</span><br><span class="line">                            y,</span><br><span class="line">                            TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</span><br><span class="line">                <span class="keyword">if</span> (clickable) &#123;</span><br><span class="line">                    setPressed(<span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                removeTapCallback();</span><br><span class="line">                removeLongPressCallback();</span><br><span class="line">                mInContextButtonPress = <span class="keyword">false</span>;</span><br><span class="line">                mHasPerformedLongPress = <span class="keyword">false</span>;</span><br><span class="line">                mIgnoreNextUpEvent = <span class="keyword">false</span>;</span><br><span class="line">                mPrivateFlags3 &amp;= ~PFLAG3_FINGER_DOWN;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">if</span> (clickable) &#123;</span><br><span class="line">                    drawableHotspotChanged(x, y);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> motionClassification = event.getClassification();</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">boolean</span> ambiguousGesture =</span><br><span class="line">                        motionClassification == MotionEvent.CLASSIFICATION_AMBIGUOUS_GESTURE;</span><br><span class="line">                <span class="keyword">int</span> touchSlop = mTouchSlop;</span><br><span class="line">                <span class="keyword">if</span> (ambiguousGesture &amp;&amp; hasPendingLongPressCallback()) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">float</span> ambiguousMultiplier =</span><br><span class="line">                            ViewConfiguration.getAmbiguousGestureMultiplier();</span><br><span class="line">                    <span class="keyword">if</span> (!pointInView(x, y, touchSlop)) &#123;</span><br><span class="line">                        <span class="comment">// The default action here is to cancel long press. But instead, we</span></span><br><span class="line">                        <span class="comment">// just extend the timeout here, in case the classification</span></span><br><span class="line">                        <span class="comment">// stays ambiguous.</span></span><br><span class="line">                        removeLongPressCallback();</span><br><span class="line">                        <span class="keyword">long</span> delay = (<span class="keyword">long</span>) (ViewConfiguration.getLongPressTimeout()</span><br><span class="line">                                * ambiguousMultiplier);</span><br><span class="line">                        <span class="comment">// Subtract the time already spent</span></span><br><span class="line">                        delay -= event.getEventTime() - event.getDownTime();</span><br><span class="line">                        checkForLongClick(</span><br><span class="line">                                delay,</span><br><span class="line">                                x,</span><br><span class="line">                                y,</span><br><span class="line">                                TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS);</span><br><span class="line">                    &#125;</span><br><span class="line">                    touchSlop *= ambiguousMultiplier;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Be lenient about moving outside of buttons</span></span><br><span class="line">                <span class="keyword">if</span> (!pointInView(x, y, touchSlop)) &#123;</span><br><span class="line">                    <span class="comment">// Outside button</span></span><br><span class="line">                    <span class="comment">// Remove any future long press/tap checks</span></span><br><span class="line">                    removeTapCallback();</span><br><span class="line">                    removeLongPressCallback();</span><br><span class="line">                    <span class="keyword">if</span> ((mPrivateFlags &amp; PFLAG_PRESSED) != <span class="number">0</span>) &#123;</span><br><span class="line">                        setPressed(<span class="keyword">false</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    mPrivateFlags3 &amp;= ~PFLAG3_FINGER_DOWN;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">boolean</span> deepPress =</span><br><span class="line">                        motionClassification == MotionEvent.CLASSIFICATION_DEEP_PRESS;</span><br><span class="line">                <span class="keyword">if</span> (deepPress &amp;&amp; hasPendingLongPressCallback()) &#123;</span><br><span class="line">                    <span class="comment">// process the long click action immediately</span></span><br><span class="line">                    removeLongPressCallback();</span><br><span class="line">                    checkForLongClick(</span><br><span class="line">                            <span class="number">0</span> <span class="comment">/* send immediately */</span>,</span><br><span class="line">                            x,</span><br><span class="line">                            y,</span><br><span class="line">                            TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__DEEP_PRESS);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嵌套滑动必须需要两个角色：父亲，孩子</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;事件分发的原理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/EventDispatch/EventDispatch.bmp&quot; alt=&quot;EventDispatch&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-activity中的事件分发与处理&quot;&gt;&lt;a href=&quot;#1-activ</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="UI" scheme="http://example.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>动态换肤原理分析</title>
    <link href="http://example.com/2020/10/04/CustomizeView-04/"/>
    <id>http://example.com/2020/10/04/CustomizeView-04/</id>
    <published>2020-10-04T01:31:45.000Z</published>
    <updated>2020-10-06T05:13:54.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-apk资源加载流程分析"><a href="#1-apk资源加载流程分析" class="headerlink" title="1.apk资源加载流程分析"></a>1.apk资源加载流程分析</h1><h1 id="2-插件换肤的原理分析"><a href="#2-插件换肤的原理分析" class="headerlink" title="2.插件换肤的原理分析"></a>2.插件换肤的原理分析</h1><p>2.1 制作一个皮肤包 </p><p>2.2 收集XML数据</p><p>收集本应用中需要换肤的控件信息，即从布局文件中，获取控件的属性信息。</p><p>利用View生产对象的过程的Factory2接口的onCreateView</p><p>1）应用在加载布局阶段记录所有View控件，并提取view中的属性，这些属性就是需要通过换肤进行改变的属性。 </p><p>​    ①需要一个List<SkinView>用于保存需要换肤的View</SkinView></p><p>​    ②对于每一个View，其都有很多的属性，因此需要保存对应View的属性List<SkinPair></SkinPair></p><p>2.3 读取皮肤包中的资源</p><p>需要将皮肤应用加载。</p><p>2.4 执行换肤</p><p>将皮肤包中的属性应用到应用中需要换肤控件的属性上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-apk资源加载流程分析&quot;&gt;&lt;a href=&quot;#1-apk资源加载流程分析&quot; class=&quot;headerlink&quot; title=&quot;1.apk资源加载流程分析&quot;&gt;&lt;/a&gt;1.apk资源加载流程分析&lt;/h1&gt;&lt;h1 id=&quot;2-插件换肤的原理分析&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="CustomizeView" scheme="http://example.com/categories/CustomizeView/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>View创建流程分析</title>
    <link href="http://example.com/2020/10/02/CustomizeView-03/"/>
    <id>http://example.com/2020/10/02/CustomizeView-03/</id>
    <published>2020-10-02T09:55:04.000Z</published>
    <updated>2020-10-06T09:29:08.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-布局文件xxx-xml生成view树"><a href="#1-布局文件xxx-xml生成view树" class="headerlink" title="1.布局文件xxx.xml生成view树"></a>1.布局文件xxx.xml生成view树</h1><p>在应用启动之后，是如何根据应用的布局文件，得到整个显示的视图，一般情况下，当应用启动之后，会生成如下的view视图。</p><p><img src="/images/CustomizeView-03/1-1601632892726.png" alt="1"></p><p>每个Activity都会有一个window显示窗口，而且window只有唯一的实例PhoneWindow，PhoneWindow会包含一个根容器DecorView；每个DecorView是一个应用窗口的根容器，它本质上是一个FrameLayout。DecorView有唯一一个子View，它是一个垂直LinearLayout，包含两个子元素，一个是TitleView（ActionBar的容器），另一个是ContentView（窗口内容的容器）。关于ContentView，它是一个FrameLayout（android.R.id.content)，我们平常用的setContentView就是设置它的子View。上图还表达了每个Activity都与一个Window（具体来说是PhoneWindow）相关联，用户界面则由Window所承载。</p><p>下面就从源码的角度来分析，当用户点击应用之后，是如何根据布局文件，得到View视图树。</p><h2 id="1-1-Activity与PhoneWindow的创建"><a href="#1-1-Activity与PhoneWindow的创建" class="headerlink" title="1.1 Activity与PhoneWindow的创建"></a>1.1 Activity与PhoneWindow的创建</h2><h3 id="1-1-1-performLaunchActivity"><a href="#1-1-1-performLaunchActivity" class="headerlink" title="1.1.1 performLaunchActivity"></a>1.1.1 performLaunchActivity</h3><p> 在Activity启动过程中，是通过ActivityThread类的成员函数performLaunchActivity在应用程序进程中创建一个Activity实例，并且为它设置运行上下文环境，即为它创建一个ContextImpl对象。接下来，我们就从ActivityThread类的成员函数performLaunchActivity开始，分析一个Activity实例的创建过程，了解它的运行上下文环境的创建过程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Activity <span class="title">performLaunchActivity</span><span class="params">(ActivityClientRecord r, Intent customIntent)</span> </span>&#123;</span><br><span class="line">    ActivityInfo aInfo = r.activityInfo;</span><br><span class="line">    <span class="keyword">if</span> (r.packageInfo == <span class="keyword">null</span>) &#123;</span><br><span class="line">        r.packageInfo = getPackageInfo(aInfo.applicationInfo, r.compatInfo,</span><br><span class="line">                Context.CONTEXT_INCLUDE_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ComponentName component = r.intent.getComponent();</span><br><span class="line">    <span class="keyword">if</span> (component == <span class="keyword">null</span>) &#123;</span><br><span class="line">        component = r.intent.resolveActivity(</span><br><span class="line">            mInitialApplication.getPackageManager());</span><br><span class="line">        r.intent.setComponent(component);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (r.activityInfo.targetActivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">        component = <span class="keyword">new</span> ComponentName(r.activityInfo.packageName,</span><br><span class="line">                r.activityInfo.targetActivity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ContextImpl appContext = createBaseContextForActivity(r);<span class="comment">//关键代码一</span></span><br><span class="line">    Activity activity = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        java.lang.ClassLoader cl = appContext.getClassLoader();</span><br><span class="line">        activity = mInstrumentation.newActivity(</span><br><span class="line">                cl, component.getClassName(), r.intent);</span><br><span class="line">        StrictMode.incrementExpectedActivityCount(activity.getClass());<span class="comment">//关键代码二</span></span><br><span class="line">        r.intent.setExtrasClassLoader(cl);</span><br><span class="line">        r.intent.prepareToEnterProcess();</span><br><span class="line">        <span class="keyword">if</span> (r.state != <span class="keyword">null</span>) &#123;</span><br><span class="line">            r.state.setClassLoader(cl);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mInstrumentation.onException(activity, e)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                <span class="string">&quot;Unable to instantiate activity &quot;</span> + component</span><br><span class="line">                + <span class="string">&quot;: &quot;</span> + e.toString(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Application app = r.packageInfo.makeApplication(<span class="keyword">false</span>, mInstrumentation);<span class="comment">//关键代码三</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (localLOGV) Slog.v(TAG, <span class="string">&quot;Performing launch of &quot;</span> + r);</span><br><span class="line">        <span class="keyword">if</span> (localLOGV) Slog.v(</span><br><span class="line">                TAG, r + <span class="string">&quot;: app=&quot;</span> + app</span><br><span class="line">                + <span class="string">&quot;, appName=&quot;</span> + app.getPackageName()</span><br><span class="line">                + <span class="string">&quot;, pkg=&quot;</span> + r.packageInfo.getPackageName()</span><br><span class="line">                + <span class="string">&quot;, comp=&quot;</span> + r.intent.getComponent().toShortString()</span><br><span class="line">                + <span class="string">&quot;, dir=&quot;</span> + r.packageInfo.getAppDir());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (activity != <span class="keyword">null</span>) &#123;</span><br><span class="line">            CharSequence title = r.activityInfo.loadLabel(appContext.getPackageManager());</span><br><span class="line">            Configuration config = <span class="keyword">new</span> Configuration(mCompatConfiguration);</span><br><span class="line">            <span class="keyword">if</span> (r.overrideConfig != <span class="keyword">null</span>) &#123;</span><br><span class="line">                config.updateFrom(r.overrideConfig);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_CONFIGURATION) Slog.v(TAG, <span class="string">&quot;Launching activity &quot;</span></span><br><span class="line">                    + r.activityInfo.name + <span class="string">&quot; with config &quot;</span> + config);</span><br><span class="line">            Window window = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (r.mPendingRemoveWindow != <span class="keyword">null</span> &amp;&amp; r.mPreserveWindow) &#123;</span><br><span class="line">                window = r.mPendingRemoveWindow;<span class="comment">//关键代码四</span></span><br><span class="line">                r.mPendingRemoveWindow = <span class="keyword">null</span>;</span><br><span class="line">                r.mPendingRemoveWindowManager = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            appContext.setOuterContext(activity);</span><br><span class="line">            activity.attach(appContext, <span class="keyword">this</span>, getInstrumentation(), r.token,</span><br><span class="line">                    r.ident, app, r.intent, r.activityInfo, title, r.parent,</span><br><span class="line">                    r.embeddedID, r.lastNonConfigurationInstances, config,</span><br><span class="line">                    r.referrer, r.voiceInteractor, window, r.configCallback,</span><br><span class="line">                    r.assistToken);<span class="comment">//关键代码五</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (customIntent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                activity.mIntent = customIntent;</span><br><span class="line">            &#125;</span><br><span class="line">            r.lastNonConfigurationInstances = <span class="keyword">null</span>;</span><br><span class="line">            checkAndBlockForNetworkAccess();</span><br><span class="line">            activity.mStartedActivity = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">int</span> theme = r.activityInfo.getThemeResource();</span><br><span class="line">            <span class="keyword">if</span> (theme != <span class="number">0</span>) &#123;</span><br><span class="line">                activity.setTheme(theme);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            activity.mCalled = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (r.isPersistable()) &#123;<span class="comment">//关键代码六</span></span><br><span class="line">                mInstrumentation.callActivityOnCreate(activity, r.state, r.persistentState);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                mInstrumentation.callActivityOnCreate(activity, r.state);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!activity.mCalled) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> SuperNotCalledException(</span><br><span class="line">                    <span class="string">&quot;Activity &quot;</span> + r.intent.getComponent().toShortString() +</span><br><span class="line">                    <span class="string">&quot; did not call through to super.onCreate()&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            r.activity = activity;</span><br><span class="line">        &#125;</span><br><span class="line">        r.setState(ON_CREATE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// updatePendingActivityConfiguration() reads from mActivities to update</span></span><br><span class="line">        <span class="comment">// ActivityClientRecord which runs in a different thread. Protect modifications to</span></span><br><span class="line">        <span class="comment">// mActivities to avoid race.</span></span><br><span class="line">        <span class="keyword">synchronized</span> (mResourcesManager) &#123;</span><br><span class="line">            mActivities.put(r.token, r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (SuperNotCalledException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> e;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mInstrumentation.onException(activity, e)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                <span class="string">&quot;Unable to start activity &quot;</span> + component</span><br><span class="line">                + <span class="string">&quot;: &quot;</span> + e.toString(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> activity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法的主要作用就是（1）创建一个Context实例（2）创建一个Activity实例（3）获取一个Application实例（4）保存该Activity相关信息到 mActivities （5）调用attach实现Activity、Context之间的绑定及窗口、WMS的创建 。</p><p><strong>1）关键代码一</strong></p><p>ContextImpl appContext = createBaseContextForActivity(r);//关键代码一</p><p>通过createBaseContextForActivity方法用来创建Activity的ContextImpl对象，ContextImpl是Context的实现类。Context的功能可以参考##AndroidContext理解#。</p><p><strong>2）关键代码二</strong></p><p>创建一个activity对象。</p><p>activity = mInstrumentation.newActivity(<br>                cl, component.getClassName(), r.intent);<br>        StrictMode.incrementExpectedActivityCount(activity.getClass());//关键代码二</p><p><strong>3）关键代码三</strong></p><p>创建一个Application 对象</p><p>Application app = r.packageInfo.makeApplication(false, mInstrumentation);//关键代码三</p><p><strong>4）关键代码四</strong></p><p>每个activity都有一个显示窗口，这个窗口就是PhoneWindow，这里给就是关联activity中的window，但是此时window并没有具体的值。</p><p>Window window = null;<br>        if (r.mPendingRemoveWindow != null &amp;&amp; r.mPreserveWindow) {<br>                window = r.mPendingRemoveWindow;//关键代码四<br>                r.mPendingRemoveWindow = null;<br>                r.mPendingRemoveWindowManager = null;<br>        }</p><p><strong>5）关键代码五</strong></p><p>attach方法大部分都是在做成员变量的赋值操作，比如上下文，主线程和UI线程。</p><p>appContext.setOuterContext(activity);<br>       activity.attach(appContext, this, getInstrumentation(), r.token,<br>                    r.ident, app, r.intent, r.activityInfo, title, r.parent,<br>                    r.embeddedID, r.lastNonConfigurationInstances, config,<br>                    r.referrer, r.voiceInteractor, <strong>window</strong>, r.configCallback,<br>                    r.assistToken);//关键代码五</p><p><strong>在attach函数中，给window赋值，创建出PhoneWindow</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">attach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    .............</span><br><span class="line">    mWindow = <span class="keyword">new</span> PhoneWindow(<span class="keyword">this</span>, window, activityConfigCallback);<span class="comment">//创建PhoneWindow对象</span></span><br><span class="line">    mWindow.setWindowControllerCallback(<span class="keyword">this</span>);</span><br><span class="line">    mWindow.setCallback(<span class="keyword">this</span>);</span><br><span class="line">    mWindow.setOnWindowDismissedCallback(<span class="keyword">this</span>);</span><br><span class="line">    mWindow.getLayoutInflater().setPrivateFactory(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (info.softInputMode != WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED) &#123;</span><br><span class="line">        mWindow.setSoftInputMode(info.softInputMode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (info.uiOptions != <span class="number">0</span>) &#123;</span><br><span class="line">        mWindow.setUiOptions(info.uiOptions);</span><br><span class="line">    &#125;</span><br><span class="line">    mUiThread = Thread.currentThread();</span><br><span class="line"></span><br><span class="line">    mMainThread = aThread;</span><br><span class="line">    mInstrumentation = instr;</span><br><span class="line">    mToken = token;</span><br><span class="line">    mAssistToken = assistToken;</span><br><span class="line">    mIdent = ident;</span><br><span class="line">    mApplication = application;</span><br><span class="line">    mIntent = intent;</span><br><span class="line">    mReferrer = referrer;</span><br><span class="line">    mComponent = intent.getComponent();</span><br><span class="line">    mActivityInfo = info;</span><br><span class="line">    mTitle = title;</span><br><span class="line">    mParent = parent;</span><br><span class="line">    mEmbeddedID = id;</span><br><span class="line">    mLastNonConfigurationInstances = lastNonConfigurationInstances;</span><br><span class="line">    <span class="keyword">if</span> (voiceInteractor != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (lastNonConfigurationInstances != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mVoiceInteractor = lastNonConfigurationInstances.voiceInteractor;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mVoiceInteractor = <span class="keyword">new</span> VoiceInteractor(voiceInteractor, <span class="keyword">this</span>, <span class="keyword">this</span>,</span><br><span class="line">                    Looper.myLooper());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ..........</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6）关键代码六</strong></p><p>在attach完成后，会执行Activity的onCreate方法。</p><p>if (r.isPersistable()) {//关键代码六<br>                mInstrumentation.callActivityOnCreate(activity, r.state, r.persistentState);<br>            } else {<br>                mInstrumentation.callActivityOnCreate(activity, r.state);<br>            }</p><p>这里就完成了activity与window的创建：</p><p><img src="/images/CustomizeView-03/image-20201002180233050.png" alt="image-20201002180233050"></p><h2 id="1-2-创建DecorView并填充布局"><a href="#1-2-创建DecorView并填充布局" class="headerlink" title="1.2 创建DecorView并填充布局"></a>1.2 创建DecorView并填充布局</h2><p>当应用的MainActivity的onCreate方法被调用时，会执行setContentView（）方法，给activity创建View树。</p><p>因此从setContentView（）开始分析是如何将整个View创建出来的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContentView</span><span class="params">(<span class="keyword">int</span> layoutResID)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Note: FEATURE_CONTENT_TRANSITIONS may be set in the process of installing the window</span></span><br><span class="line">    <span class="comment">// decor, when theme attributes and the like are crystalized. Do not check the feature</span></span><br><span class="line">    <span class="comment">// before this happens.</span></span><br><span class="line">    <span class="keyword">if</span> (mContentParent == <span class="keyword">null</span>) &#123;<span class="comment">//mContentParent即为上面提到的ContentView的父容器，若为空则调用installDecor()生成</span></span><br><span class="line">        installDecor();<span class="comment">//关键代码一</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!hasFeature(FEATURE_CONTENT_TRANSITIONS)) &#123;</span><br><span class="line">        mContentParent.removeAllViews();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hasFeature(FEATURE_CONTENT_TRANSITIONS)) &#123;</span><br><span class="line">        <span class="keyword">final</span> Scene newScene = Scene.getSceneForLayout(mContentParent, layoutResID,</span><br><span class="line">                getContext());</span><br><span class="line">        transitionTo(newScene);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">// 一般情况会来到这里，调用mLayoutInflater.inflate()方法来填充布局</span></span><br><span class="line">    <span class="comment">// 填充布局也就是把我们设置的ContentView加入到mContentParent中</span></span><br><span class="line">        mLayoutInflater.inflate(layoutResID, mContentParent);<span class="comment">//关键代码二</span></span><br><span class="line">    &#125;</span><br><span class="line">    mContentParent.requestApplyInsets();</span><br><span class="line">    <span class="keyword">final</span> Callback cb = getCallback();</span><br><span class="line">    <span class="keyword">if</span> (cb != <span class="keyword">null</span> &amp;&amp; !isDestroyed()) &#123;</span><br><span class="line">        cb.onContentChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    mContentParentExplicitlySet = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>setContentView主要做了两件事，1）给window安装DecorView，2）对布局文件进行解析。</p><h3 id="1-2-1-创建DecorView"><a href="#1-2-1-创建DecorView" class="headerlink" title="1.2.1 创建DecorView"></a>1.2.1 创建DecorView</h3><p>我们先看第一件事：给window安装DecorView</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">installDecor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mForceDecorInstall = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (mDecor == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mDecor = generateDecor(-<span class="number">1</span>);<span class="comment">//关键代码一</span></span><br><span class="line">        ..........</span><br><span class="line">        ..........</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mDecor.setWindow(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mContentParent == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mContentParent = generateLayout(mDecor);<span class="comment">//关键代码二</span></span><br><span class="line">        <span class="comment">// Set up decor part of UI to ignore fitsSystemWindows if appropriate.</span></span><br><span class="line">        mDecor.makeOptionalFitsSystemWindows();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DecorContentParent decorContentParent = (DecorContentParent) mDecor.findViewById(</span><br><span class="line">                R.id.decor_content_parent);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (decorContentParent != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mDecorContentParent = decorContentParent;</span><br><span class="line">            mDecorContentParent.setWindowCallback(getCallback());</span><br><span class="line">            <span class="keyword">if</span> (mDecorContentParent.getTitle() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                mDecorContentParent.setWindowTitle(mTitle);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> localFeatures = getLocalFeatures();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; FEATURE_MAX; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((localFeatures &amp; (<span class="number">1</span> &lt;&lt; i)) != <span class="number">0</span>) &#123;</span><br><span class="line">                    mDecorContentParent.initFeature(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            mDecorContentParent.setUiOptions(mUiOptions);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((mResourcesSetFlags &amp; FLAG_RESOURCE_SET_ICON) != <span class="number">0</span> ||</span><br><span class="line">                    (mIconRes != <span class="number">0</span> &amp;&amp; !mDecorContentParent.hasIcon())) &#123;</span><br><span class="line">                mDecorContentParent.setIcon(mIconRes);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((mResourcesSetFlags &amp; FLAG_RESOURCE_SET_ICON) == <span class="number">0</span> &amp;&amp;</span><br><span class="line">                    mIconRes == <span class="number">0</span> &amp;&amp; !mDecorContentParent.hasIcon()) &#123;</span><br><span class="line">                mDecorContentParent.setIcon(</span><br><span class="line">                        getContext().getPackageManager().getDefaultActivityIcon());</span><br><span class="line">                mResourcesSetFlags |= FLAG_RESOURCE_SET_ICON_FALLBACK;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((mResourcesSetFlags &amp; FLAG_RESOURCE_SET_LOGO) != <span class="number">0</span> ||</span><br><span class="line">                    (mLogoRes != <span class="number">0</span> &amp;&amp; !mDecorContentParent.hasLogo())) &#123;</span><br><span class="line">                mDecorContentParent.setLogo(mLogoRes);</span><br><span class="line">            &#125;</span><br><span class="line">            PanelFeatureState st = getPanelState(FEATURE_OPTIONS_PANEL, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (!isDestroyed() &amp;&amp; (st == <span class="keyword">null</span> || st.menu == <span class="keyword">null</span>) &amp;&amp; !mIsStartingWindow) &#123;</span><br><span class="line">                invalidatePanelMenu(FEATURE_ACTION_BAR);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mTitleView = findViewById(R.id.title);</span><br><span class="line">            <span class="keyword">if</span> (mTitleView != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((getLocalFeatures() &amp; (<span class="number">1</span> &lt;&lt; FEATURE_NO_TITLE)) != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> View titleContainer = findViewById(R.id.title_container);</span><br><span class="line">                    <span class="keyword">if</span> (titleContainer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        titleContainer.setVisibility(View.GONE);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        mTitleView.setVisibility(View.GONE);</span><br><span class="line">                    &#125;</span><br><span class="line">                    mContentParent.setForeground(<span class="keyword">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mTitleView.setText(mTitle);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mDecor.getBackground() == <span class="keyword">null</span> &amp;&amp; mBackgroundFallbackDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mDecor.setBackgroundFallback(mBackgroundFallbackDrawable);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Only inflate or create a new TransitionManager if the caller hasn&#x27;t</span></span><br><span class="line">        <span class="comment">// already set a custom one.</span></span><br><span class="line">        <span class="keyword">if</span> (hasFeature(FEATURE_ACTIVITY_TRANSITIONS)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mTransitionManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> transitionRes = getWindowStyle().getResourceId(</span><br><span class="line">                        R.styleable.Window_windowContentTransitionManager,</span><br><span class="line">                        <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span> (transitionRes != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> TransitionInflater inflater = TransitionInflater.from(getContext());</span><br><span class="line">                    mTransitionManager = inflater.inflateTransitionManager(transitionRes,</span><br><span class="line">                            mContentParent);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mTransitionManager = <span class="keyword">new</span> TransitionManager();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">.....................................</span><br><span class="line">            .....................................</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>installDecor主要做了以下几件事：1）创建DecorView；2）生成DecorView的布局</p><p>mDecor = generateDecor(-1);//关键代码一</p><p>内部返回了一个DecorView的实例。return new DecorView(context, featureId, this, getAttributes());</p><p>调用generateDecor()方法，返回一个DecorView对象DecorView就是<em>顶层布局</em>，他是一个<em>FrameLayout</em>，第一个父布局产生</p><p>创建完DecorView之后便有了下面的view视图了</p><p><img src="/images/CustomizeView-03/image-20201002180258287.png" alt="image-20201002180258287"></p><p>生成布局就是给DecorView添加布局，主要由 generateLayout(mDecor)实现</p><h3 id="1-2-2-给DecorView生成布局"><a href="#1-2-2-给DecorView生成布局" class="headerlink" title="1.2.2 给DecorView生成布局"></a>1.2.2 给DecorView生成布局</h3><p>mContentParent = generateLayout(mDecor);//关键代码二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> ViewGroup <span class="title">generateLayout</span><span class="params">(DecorView decor)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Apply data from current theme.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关键代码一</span></span><br><span class="line">    TypedArray a = getWindowStyle();<span class="comment">//获取 AndroidManifest.xml 中指定的 themes 主题</span></span><br><span class="line">    <span class="comment">//控件的属性是在 layout 中设置，而窗口的属性是在 AndroidManifest.xml 中配置的，通过 getWindowStyle()获取当前 Window 在 theme中定义的属性，window支持的属性可以参考\frameworks\base\core\res\res\values\attrs.xml 中的 。获取到属性值之后有与大堆代码是调用 setFlags()和 requestFeature()给当前 window 设置属性值，这就是为什么我们一般在 Activity 的 onCreate()中设置全屏等属性需要在 setContentView()之前设置，因为 setContentView()之后 installDecor()方法已经执行完毕，所以设置是没有效的。</span></span><br><span class="line"><span class="comment">//第①步执行完后，Window 的相关属性已经设置完毕，比如是否是全屏？是否有标题等等。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">false</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;From style:&quot;</span>);</span><br><span class="line">        String s = <span class="string">&quot;Attrs:&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; R.styleable.Window.length; i++) &#123;</span><br><span class="line">            s = s + <span class="string">&quot; &quot;</span> + Integer.toHexString(R.styleable.Window[i]) + <span class="string">&quot;=&quot;</span></span><br><span class="line">                    + a.getString(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mIsFloating = a.getBoolean(R.styleable.Window_windowIsFloating, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">int</span> flagsToUpdate = (FLAG_LAYOUT_IN_SCREEN|FLAG_LAYOUT_INSET_DECOR)</span><br><span class="line">            &amp; (~getForcedWindowFlags());</span><br><span class="line">    <span class="keyword">if</span> (mIsFloating) &#123;</span><br><span class="line">        setLayout(WRAP_CONTENT, WRAP_CONTENT);</span><br><span class="line">        setFlags(<span class="number">0</span>, flagsToUpdate);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        setFlags(FLAG_LAYOUT_IN_SCREEN|FLAG_LAYOUT_INSET_DECOR, flagsToUpdate);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关键代码二</span></span><br><span class="line">    <span class="comment">//Window 的各种属性，设置相应的布局文件，如果是全屏 layoutResource （布局文件 ID）是多少，如果有标题…；确定 layoutResource 之后</span></span><br><span class="line">    <span class="keyword">if</span> (a.getBoolean(R.styleable.Window_windowNoTitle, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        requestFeature(FEATURE_NO_TITLE);<span class="comment">//请求指定 Activity 窗口的风格类型</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.getBoolean(R.styleable.Window_windowActionBar, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        <span class="comment">// Don&#x27;t allow an action bar if there is no title.</span></span><br><span class="line">        requestFeature(FEATURE_ACTION_BAR);</span><br><span class="line">    &#125;</span><br><span class="line">    ................</span><br><span class="line">    ................</span><br><span class="line">    ................</span><br><span class="line">    a.getValue(R.styleable.Window_windowMinWidthMajor, mMinWidthMajor);</span><br><span class="line">    a.getValue(R.styleable.Window_windowMinWidthMinor, mMinWidthMinor);</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">&quot;Min width minor: &quot;</span> + mMinWidthMinor.coerceToString()</span><br><span class="line">            + <span class="string">&quot;, major: &quot;</span> + mMinWidthMajor.coerceToString());</span><br><span class="line">    <span class="keyword">if</span> (a.hasValue(R.styleable.Window_windowFixedWidthMajor)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mFixedWidthMajor == <span class="keyword">null</span>) mFixedWidthMajor = <span class="keyword">new</span> TypedValue();</span><br><span class="line">        a.getValue(R.styleable.Window_windowFixedWidthMajor,</span><br><span class="line">                mFixedWidthMajor);</span><br><span class="line">    &#125;</span><br><span class="line">    ................</span><br><span class="line">    ................</span><br><span class="line">    mIsTranslucent = a.getBoolean(R.styleable.Window_windowIsTranslucent, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Context context = getContext();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> targetSdk = context.getApplicationInfo().targetSdkVersion;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> targetPreHoneycomb = targetSdk &lt; android.os.Build.VERSION_CODES.HONEYCOMB;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> targetPreIcs = targetSdk &lt; android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> targetPreL = targetSdk &lt; android.os.Build.VERSION_CODES.LOLLIPOP;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> targetPreQ = targetSdk &lt; Build.VERSION_CODES.Q;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> targetHcNeedsOptions = context.getResources().getBoolean(</span><br><span class="line">            R.bool.target_honeycomb_needs_options_menu);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> noActionBar = !hasFeature(FEATURE_ACTION_BAR) || hasFeature(FEATURE_NO_TITLE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (targetPreHoneycomb || (targetPreIcs &amp;&amp; targetHcNeedsOptions &amp;&amp; noActionBar)) &#123;</span><br><span class="line">        setNeedsMenuKey(WindowManager.LayoutParams.NEEDS_MENU_SET_TRUE);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        setNeedsMenuKey(WindowManager.LayoutParams.NEEDS_MENU_SET_FALSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!mForcedStatusBarColor) &#123;</span><br><span class="line">        mStatusBarColor = a.getColor(R.styleable.Window_statusBarColor, <span class="number">0xFF000000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!mForcedNavigationBarColor) &#123;</span><br><span class="line">        mNavigationBarColor = a.getColor(R.styleable.Window_navigationBarColor, <span class="number">0xFF000000</span>);</span><br><span class="line">        mNavigationBarDividerColor = a.getColor(R.styleable.Window_navigationBarDividerColor,</span><br><span class="line">                <span class="number">0x00000000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!targetPreQ) &#123;</span><br><span class="line">        mEnsureStatusBarContrastWhenTransparent = a.getBoolean(</span><br><span class="line">                R.styleable.Window_enforceStatusBarContrast, <span class="keyword">false</span>);</span><br><span class="line">        mEnsureNavigationBarContrastWhenTransparent = a.getBoolean(</span><br><span class="line">                R.styleable.Window_enforceNavigationBarContrast, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    WindowManager.LayoutParams params = getAttributes();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Non-floating windows on high end devices must put up decor beneath the system bars and</span></span><br><span class="line">    <span class="comment">// therefore must know about visibility changes of those.</span></span><br><span class="line">    <span class="keyword">if</span> (!mIsFloating) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!targetPreL &amp;&amp; a.getBoolean(</span><br><span class="line">                R.styleable.Window_windowDrawsSystemBarBackgrounds,</span><br><span class="line">                <span class="keyword">false</span>)) &#123;</span><br><span class="line">            setFlags(FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS,</span><br><span class="line">                    FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS &amp; ~getForcedWindowFlags());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mDecor.mForceWindowDrawsBarBackgrounds) &#123;</span><br><span class="line">            params.privateFlags |= PRIVATE_FLAG_FORCE_DRAW_BAR_BACKGROUNDS;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.getBoolean(R.styleable.Window_windowLightStatusBar, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        decor.setSystemUiVisibility(</span><br><span class="line">                decor.getSystemUiVisibility() | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.getBoolean(R.styleable.Window_windowLightNavigationBar, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        decor.setSystemUiVisibility(</span><br><span class="line">                decor.getSystemUiVisibility() | View.SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.hasValue(R.styleable.Window_windowLayoutInDisplayCutoutMode)) &#123;</span><br><span class="line">        <span class="keyword">int</span> mode = a.getInt(R.styleable.Window_windowLayoutInDisplayCutoutMode, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (mode &lt; LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT</span><br><span class="line">                || mode &gt; LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">&quot;Unknown windowLayoutInDisplayCutoutMode: &quot;</span></span><br><span class="line">                    + a.getString(R.styleable.Window_windowLayoutInDisplayCutoutMode));</span><br><span class="line">        &#125;</span><br><span class="line">        params.layoutInDisplayCutoutMode = mode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mAlwaysReadCloseOnTouchAttr || getContext().getApplicationInfo().targetSdkVersion</span><br><span class="line">            &gt;= android.os.Build.VERSION_CODES.HONEYCOMB) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a.getBoolean(</span><br><span class="line">                R.styleable.Window_windowCloseOnTouchOutside,</span><br><span class="line">                <span class="keyword">false</span>)) &#123;</span><br><span class="line">            setCloseOnTouchOutsideIfNotSet(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!hasSoftInputMode()) &#123;</span><br><span class="line">        params.softInputMode = a.getInt(</span><br><span class="line">                R.styleable.Window_windowSoftInputMode,</span><br><span class="line">                params.softInputMode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.getBoolean(R.styleable.Window_backgroundDimEnabled,</span><br><span class="line">            mIsFloating)) &#123;</span><br><span class="line">        <span class="comment">/* All dialogs should have the window dimmed */</span></span><br><span class="line">        <span class="keyword">if</span> ((getForcedWindowFlags()&amp;WindowManager.LayoutParams.FLAG_DIM_BEHIND) == <span class="number">0</span>) &#123;</span><br><span class="line">            params.flags |= WindowManager.LayoutParams.FLAG_DIM_BEHIND;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!haveDimAmount()) &#123;</span><br><span class="line">            params.dimAmount = a.getFloat(</span><br><span class="line">                    android.R.styleable.Window_backgroundDimAmount, <span class="number">0.5f</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (params.windowAnimations == <span class="number">0</span>) &#123;</span><br><span class="line">        params.windowAnimations = a.getResourceId(</span><br><span class="line">                R.styleable.Window_windowAnimationStyle, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The rest are only done if this window is not embedded; otherwise,</span></span><br><span class="line">    <span class="comment">// the values are inherited from our container.</span></span><br><span class="line">    <span class="keyword">if</span> (getContainer() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mBackgroundDrawable == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mFrameResource == <span class="number">0</span>) &#123;</span><br><span class="line">                mFrameResource = a.getResourceId(R.styleable.Window_windowFrame, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (a.hasValue(R.styleable.Window_windowBackground)) &#123;</span><br><span class="line">                mBackgroundDrawable = a.getDrawable(R.styleable.Window_windowBackground);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a.hasValue(R.styleable.Window_windowBackgroundFallback)) &#123;</span><br><span class="line">            mBackgroundFallbackDrawable =</span><br><span class="line">                    a.getDrawable(R.styleable.Window_windowBackgroundFallback);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mLoadElevation) &#123;</span><br><span class="line">            mElevation = a.getDimension(R.styleable.Window_windowElevation, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mClipToOutline = a.getBoolean(R.styleable.Window_windowClipToOutline, <span class="keyword">false</span>);</span><br><span class="line">        mTextColor = a.getColor(R.styleable.Window_textColor, Color.TRANSPARENT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Inflate the window decor.关键代码三</span></span><br><span class="line"><span class="comment">//根据上面设置的窗口属性 Features, 设置相应的修饰布局文件 layoutResource，这些xml 文件位于 frameworks/base/core/res/res/layout 下</span></span><br><span class="line">    <span class="keyword">int</span> layoutResource;</span><br><span class="line">    <span class="keyword">int</span> features = getLocalFeatures();</span><br><span class="line">    <span class="comment">// System.out.println(&quot;Features: 0x&quot; + Integer.toHexString(features));</span></span><br><span class="line">    <span class="keyword">if</span> ((features &amp; (<span class="number">1</span> &lt;&lt; FEATURE_SWIPE_TO_DISMISS)) != <span class="number">0</span>) &#123;</span><br><span class="line">        layoutResource = R.layout.screen_swipe_dismiss;</span><br><span class="line">        setCloseOnSwipeEnabled(<span class="keyword">true</span>); </span><br><span class="line">        .........</span><br><span class="line">        .........</span><br><span class="line">        .........</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((features &amp; (<span class="number">1</span> &lt;&lt; FEATURE_ACTION_MODE_OVERLAY)) != <span class="number">0</span>) &#123;</span><br><span class="line">        layoutResource = R.layout.screen_simple_overlay_action_mode;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Embedded, so no decoration is needed.</span></span><br><span class="line">        layoutResource = R.layout.screen_simple;</span><br><span class="line">        <span class="comment">// System.out.println(&quot;Simple!&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mDecor.startChanging();</span><br><span class="line">    mDecor.onResourcesLoaded(mLayoutInflater, layoutResource);<span class="comment">//关键代码三</span></span><br><span class="line"></span><br><span class="line">    ViewGroup contentParent = (ViewGroup)findViewById(ID_ANDROID_CONTENT);<span class="comment">//关键代码四</span></span><br><span class="line">    <span class="keyword">if</span> (contentParent == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Window couldn&#x27;t find content container view&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((features &amp; (<span class="number">1</span> &lt;&lt; FEATURE_INDETERMINATE_PROGRESS)) != <span class="number">0</span>) &#123;</span><br><span class="line">        ProgressBar progress = getCircularProgressBar(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (progress != <span class="keyword">null</span>) &#123;</span><br><span class="line">            progress.setIndeterminate(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((features &amp; (<span class="number">1</span> &lt;&lt; FEATURE_SWIPE_TO_DISMISS)) != <span class="number">0</span>) &#123;</span><br><span class="line">        registerSwipeCallbacks(contentParent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remaining setup -- of background and title -- that only applies</span></span><br><span class="line">    <span class="comment">// to top-level windows.</span></span><br><span class="line">    <span class="keyword">if</span> (getContainer() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mDecor.setWindowBackground(mBackgroundDrawable);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Drawable frame;</span><br><span class="line">        <span class="keyword">if</span> (mFrameResource != <span class="number">0</span>) &#123;</span><br><span class="line">            frame = getContext().getDrawable(mFrameResource);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            frame = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mDecor.setWindowFrame(frame);</span><br><span class="line"></span><br><span class="line">        mDecor.setElevation(mElevation);</span><br><span class="line">        mDecor.setClipToOutline(mClipToOutline);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mTitle != <span class="keyword">null</span>) &#123;</span><br><span class="line">            setTitle(mTitle);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mTitleColor == <span class="number">0</span>) &#123;</span><br><span class="line">            mTitleColor = mTextColor;</span><br><span class="line">        &#125;</span><br><span class="line">        setTitleColor(mTitleColor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mDecor.finishChanging();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> contentParent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>generateLayout(mDecor)代码很长，但是总结起来主要是做了以下几部分的工作：</p><p>*<strong>1）获取窗口的样式、标题、窗口类型等参数</strong></p><p><strong>关键代码一、二</strong><br>        TypedArray a = getWindowStyle();//获取 AndroidManifest.xml 中指定的 themes 主题</p><p>控件的属性是在 layout 中设置，而窗口的属性是在 AndroidManifest.xml 中配置的，通过 getWindowStyle()获取当前 Window 在 theme中定义的属性，window支持的属性可以参考\frameworks\base\core\res\res\values\attrs.xml 中的 。</p><p>获取到属性值之后有与大堆代码是调用 setFlags()和 requestFeature()给当前 window 设置属性值，这就是为什么我们一般在 Activity 的 onCreate()中设置全屏等属性需要在 setContentView()之前设置，因为 setContentView()之后 installDecor()方法已经执行完毕，所以设置是没有效的。<br>第①步执行完关键代码一后，Window 的相关属性已经设置完毕，比如是否是全屏？是否有标题等等。</p><p><strong>2）设置相应的布局</strong></p><p><strong>关键代码三</strong></p><p>// Inflate the window decor.<br>    根据上面设置的窗口属性 Features, 设置相应的修饰布局文件 layoutResource，这些xml 文件位于 frameworks/base/core/res/res/layout 下，这些布局就是我们在创建应用时选择的主题决定的，如下：</p><p><img src="/images/CustomizeView-03/image-20201002182220857.png" alt="image-20201002182220857"></p><p>这里以最简单的layoutResource = R.layout.screen_simple;为例进行布局的说明：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ViewStub</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/action_mode_bar_stub&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:inflatedId</span>=<span class="string">&quot;@+id/action_mode_bar&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout</span>=<span class="string">&quot;@layout/action_mode_bar&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:id</span>=<span class="string">&quot;@android:id/content&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:foregroundInsidePadding</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:foregroundGravity</span>=<span class="string">&quot;fill_horizontal|top&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:foreground</span>=<span class="string">&quot;?android:attr/windowContentOverlay&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/CustomizeView-03/image-20201002183521869.png" alt="image-20201002183521869"></p><p>确定layoutResource之后，对布局文件进行解析、加载，得到DecorView中具体的内容。</p><p>加载的过程是通过以下函数实现的：</p><p>mDecor.onResourcesLoaded(mLayoutInflater, layoutResource);//关键代码三</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onResourcesLoaded</span><span class="params">(LayoutInflater inflater, <span class="keyword">int</span> layoutResource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBackdropFrameRenderer != <span class="keyword">null</span>) &#123;</span><br><span class="line">        loadBackgroundDrawablesIfNeeded();</span><br><span class="line">        mBackdropFrameRenderer.onResourcesLoaded(</span><br><span class="line">                <span class="keyword">this</span>, mResizingBackgroundDrawable, mCaptionBackgroundDrawable,</span><br><span class="line">                mUserCaptionBackgroundDrawable, getCurrentColor(mStatusColorViewState),</span><br><span class="line">                getCurrentColor(mNavigationColorViewState));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mDecorCaptionView:这是窗口的标题视图，包含标题和窗口控制按钮。 这种装饰的可见性取决于工作空间和窗口类型。 </span></span><br><span class="line">    <span class="comment">//如果窗口类型不需要这种视图，则此成员可能为null。</span></span><br><span class="line">    mDecorCaptionView = createDecorCaptionView(inflater);</span><br><span class="line">    <span class="keyword">final</span> View root = inflater.inflate(layoutResource, <span class="keyword">null</span>);<span class="comment">//关键代码一对布局文件进行解析</span></span><br><span class="line">    <span class="keyword">if</span> (mDecorCaptionView != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mDecorCaptionView.getParent() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            addView(mDecorCaptionView,</span><br><span class="line">                    <span class="keyword">new</span> ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));</span><br><span class="line">        &#125;</span><br><span class="line">        mDecorCaptionView.addView(root,</span><br><span class="line">                <span class="keyword">new</span> ViewGroup.MarginLayoutParams(MATCH_PARENT, MATCH_PARENT));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Put it below the color views.</span></span><br><span class="line">        addView(root, <span class="number">0</span>, <span class="keyword">new</span> ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));<span class="comment">//关键代码二</span></span><br><span class="line">    &#125;</span><br><span class="line">    mContentRoot = (ViewGroup) root;</span><br><span class="line">    initializeElevation();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>onResourcesLoaded函数主要做了以下几部分的工作：</p><p><strong>关键代码一</strong></p><p>其中最关键的是final View root = inflater.inflate(layoutResource, null);对加载的布局文件进行解析。这里的布局文件假设是layoutResource = R.layout.screen_simple;则对这个文件进行解析。</p><p><strong>关键代码二</strong></p><p>addView(root, 0, new ViewGroup.LayoutParams(MATCH_PARENT, MATCH_PARENT));//关键代码二</p><p>通过addView的方式将布局文件对应的View视图添加到DecorView中。</p><p>到目前为止，整个activity对应窗口的view如下图所示：</p><p><img src="/images/CustomizeView-03/image-20201003164911558.png" alt="image-20201003164911558"></p><h3 id="1-2-3-加载contentView布局"><a href="#1-2-3-加载contentView布局" class="headerlink" title="1.2.3 加载contentView布局"></a>1.2.3 加载contentView布局</h3><p> ViewGroup contentParent = (ViewGroup)findViewById(ID_ANDROID_CONTENT);//关键代码四</p><p>通过ID_ANDROID_CONTENT这个ID指向的布局文件，<strong>这个就是screen_simple中的FrameLayout布局</strong>。且这个布局就是最终应用的主布局文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The ID that the main layout in the XML layout file should have.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ID_ANDROID_CONTENT = com.android.internal.R.id.content;</span><br></pre></td></tr></table></figure><p>这样最终generateDecor(int featureId)生成了DecorView，并返回给得到了整个布局为：</p><p><img src="/images/CustomizeView-03/image-20201003170729428.png" alt="image-20201003170729428"></p><h3 id="1-2-4-解析应用主布局"><a href="#1-2-4-解析应用主布局" class="headerlink" title="1.2.4 解析应用主布局"></a>1.2.4 解析应用主布局</h3><p>前面已经分析完setContentView的installDecor();的整体流程</p><p>下面就是将应用的主布局进行解析，并将应用布局添加到ContentView中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContentView</span><span class="params">(<span class="keyword">int</span> layoutResID)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Note: FEATURE_CONTENT_TRANSITIONS may be set in the process of installing the window</span></span><br><span class="line">    <span class="comment">// decor, when theme attributes and the like are crystalized. Do not check the feature</span></span><br><span class="line">    <span class="comment">// before this happens.</span></span><br><span class="line">    <span class="keyword">if</span> (mContentParent == <span class="keyword">null</span>) &#123;</span><br><span class="line">        installDecor();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!hasFeature(FEATURE_CONTENT_TRANSITIONS)) &#123;</span><br><span class="line">        mContentParent.removeAllViews();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hasFeature(FEATURE_CONTENT_TRANSITIONS)) &#123;</span><br><span class="line">        <span class="keyword">final</span> Scene newScene = Scene.getSceneForLayout(mContentParent, layoutResID,</span><br><span class="line">                getContext());</span><br><span class="line">        transitionTo(newScene);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mLayoutInflater.inflate(layoutResID, mContentParent);</span><br><span class="line">    &#125;</span><br><span class="line">    mContentParent.requestApplyInsets();</span><br><span class="line">    <span class="keyword">final</span> Callback cb = getCallback();</span><br><span class="line">    <span class="keyword">if</span> (cb != <span class="keyword">null</span> &amp;&amp; !isDestroyed()) &#123;</span><br><span class="line">        cb.onContentChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    mContentParentExplicitlySet = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是通过：mLayoutInflater.inflate(layoutResID, mContentParent);完成解析的。</p><p><strong>LayoutInflater.inflate函数</strong></p><p>inflate函数有四个重载函数，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inflate(<span class="meta">@LayoutRes</span> <span class="keyword">int</span> resource, <span class="meta">@Nullable</span> ViewGroup root)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(<span class="meta">@LayoutRes</span> <span class="keyword">int</span> resource, <span class="meta">@Nullable</span> ViewGroup root, <span class="keyword">boolean</span> attachToRoot)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(XmlPullParser parser, <span class="meta">@Nullable</span> ViewGroup root)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(XmlPullParser parser, <span class="meta">@Nullable</span> ViewGroup root, <span class="keyword">boolean</span> attachToRoot)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">inflate</span><span class="params">(XmlPullParser parser, <span class="meta">@Nullable</span> ViewGroup root, <span class="keyword">boolean</span> attachToRoot)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mConstructorArgs) &#123;</span><br><span class="line">        Trace.traceBegin(Trace.TRACE_TAG_VIEW, <span class="string">&quot;inflate&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Context inflaterContext = mContext;</span><br><span class="line">        <span class="keyword">final</span> AttributeSet attrs = Xml.asAttributeSet(parser);</span><br><span class="line">        Context lastContext = (Context) mConstructorArgs[<span class="number">0</span>];</span><br><span class="line">        mConstructorArgs[<span class="number">0</span>] = inflaterContext;</span><br><span class="line">        View result = root;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            advanceToRootNode(parser);</span><br><span class="line">            <span class="keyword">final</span> String name = parser.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;**************************&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;Creating root view: &quot;</span></span><br><span class="line">                        + name);</span><br><span class="line">                System.out.println(<span class="string">&quot;**************************&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (TAG_MERGE.equals(name)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (root == <span class="keyword">null</span> || !attachToRoot) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> InflateException(<span class="string">&quot;&lt;merge /&gt; can be used only with a valid &quot;</span></span><br><span class="line">                            + <span class="string">&quot;ViewGroup root and attachToRoot=true&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                rInflate(parser, root, inflaterContext, attrs, <span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Temp is the root view that was found in the xml</span></span><br><span class="line">                <span class="keyword">final</span> View temp = createViewFromTag(root, name, inflaterContext, attrs);</span><br><span class="line"></span><br><span class="line">                ViewGroup.LayoutParams params = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;Creating params from root: &quot;</span> +</span><br><span class="line">                                root);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// Create layout params that match root, if supplied</span></span><br><span class="line">                    params = root.generateLayoutParams(attrs);</span><br><span class="line">                    <span class="keyword">if</span> (!attachToRoot) &#123;</span><br><span class="line">                        <span class="comment">// Set the layout params for temp if we are not</span></span><br><span class="line">                        <span class="comment">// attaching. (If we are, we use addView, below)</span></span><br><span class="line">                        temp.setLayoutParams(params);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;-----&gt; start inflating children&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Inflate all children under temp against its context.</span></span><br><span class="line">                rInflateChildren(parser, temp, attrs, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;-----&gt; done inflating children&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// We are supposed to attach all the views we found (int temp)</span></span><br><span class="line">                <span class="comment">// to root. Do that now.</span></span><br><span class="line">                <span class="keyword">if</span> (root != <span class="keyword">null</span> &amp;&amp; attachToRoot) &#123;</span><br><span class="line">                    root.addView(temp, params);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Decide whether to return the root that was passed in or the</span></span><br><span class="line">                <span class="comment">// top view found in xml.</span></span><br><span class="line">                <span class="keyword">if</span> (root == <span class="keyword">null</span> || !attachToRoot) &#123;</span><br><span class="line">                    result = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (XmlPullParserException e) &#123;</span><br><span class="line">            <span class="keyword">final</span> InflateException ie = <span class="keyword">new</span> InflateException(e.getMessage(), e);</span><br><span class="line">            ie.setStackTrace(EMPTY_STACK_TRACE);</span><br><span class="line">            <span class="keyword">throw</span> ie;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">final</span> InflateException ie = <span class="keyword">new</span> InflateException(</span><br><span class="line">                    getParserStateDescription(inflaterContext, attrs)</span><br><span class="line">                    + <span class="string">&quot;: &quot;</span> + e.getMessage(), e);</span><br><span class="line">            ie.setStackTrace(EMPTY_STACK_TRACE);</span><br><span class="line">            <span class="keyword">throw</span> ie;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// Don&#x27;t retain static reference on context.</span></span><br><span class="line">            mConstructorArgs[<span class="number">0</span>] = lastContext;</span><br><span class="line">            mConstructorArgs[<span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            Trace.traceEnd(Trace.TRACE_TAG_VIEW);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这四个函数最终都会返回一个view</p><p>虽然inflater函数有四个，但是最终调用的都是View inflate(XmlPullParser parser, @Nullable ViewGroup root, boolean attachToRoot)函数。</p><p>参数理解：</p><p>resource：表示加载的xml布局文件的资源ID</p><p>root：可选视图作为生成的层次结构的父级，是一个ViewGroup对象，这个对象就用来保存当前布局中的子view。而当前布局的root布局是否也成为了root的元素得看attachToRoot参数。</p><p>attachToRoot：inflate后的层次结构是否应附加到root参数？ 如果为false，则root仅用于为XML中的根视图创建LayoutParams的正确子类。简单来说，就是用于决定inflater返回的view跟root是否存在父子布局关系。true：表示存在父子关系，系统会将inflate方法返回的View添加到root的子view中。false则不添加。</p><p>XmlPullParser：包含视图层次结构描述的XML dom节点。简单来说，就是对传入的xml资源文件转化为XmlPullParser对象，用于解析布局。</p><p>总结来说：我们要新建一个view保证是要有布局支撑的，root可以为null，但是如果为null就代表inflate返回的view没有容器支撑，那么parser布局你写的宽高等数值可能不会起作用，所以必须传一个root容器，attachToRoot当你想创建的view直接为root的子view就设置为true，如果你想创建的view只是需要一个容器，那么就设置attachToRoot为false。</p><p>inflate的解析过程</p><p>1）root == null</p><p>构建的View将是一个独立的个体，属性无效</p><p>2）root != null</p><p>又可以分为两种情况：</p><p>①attachToRoot = false</p><ul><li>属性值会依托于root构建，所以此时的xml根布局的属性有效</li><li>根布局产生的view不是root的子布局,不会</li></ul><p>②attachToRoot = true</p><ul><li>属性值会依托于root构建，所以此时的xml根布局的属性有效</li><li>根布局产生的view是root的子布局，<strong>通过addView实现。</strong></li></ul><p><img src="/images/CustomizeView-03/pares-1601633006094.jpg" alt="pares"></p><p>关键代码一：</p><p>final View temp = createViewFromTag(root, name, inflaterContext, attrs);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">createViewFromTag</span><span class="params">(View parent, String name, Context context, AttributeSet attrs,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> ignoreThemeAttr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (name.equals(<span class="string">&quot;view&quot;</span>)) &#123;</span><br><span class="line">        name = attrs.getAttributeValue(<span class="keyword">null</span>, <span class="string">&quot;class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Apply a theme wrapper, if allowed and one is specified.</span></span><br><span class="line">    <span class="keyword">if</span> (!ignoreThemeAttr) &#123;</span><br><span class="line">        <span class="keyword">final</span> TypedArray ta = context.obtainStyledAttributes(attrs, ATTRS_THEME);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> themeResId = ta.getResourceId(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (themeResId != <span class="number">0</span>) &#123;</span><br><span class="line">            context = <span class="keyword">new</span> ContextThemeWrapper(context, themeResId);</span><br><span class="line">        &#125;</span><br><span class="line">        ta.recycle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        View view = tryCreateView(parent, name, context, attrs);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> Object lastContext = mConstructorArgs[<span class="number">0</span>];</span><br><span class="line">            mConstructorArgs[<span class="number">0</span>] = context;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (-<span class="number">1</span> == name.indexOf(<span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                    view = onCreateView(context, parent, name, attrs);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    view = createView(context, name, <span class="keyword">null</span>, attrs);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                mConstructorArgs[<span class="number">0</span>] = lastContext;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InflateException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> e;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        <span class="keyword">final</span> InflateException ie = <span class="keyword">new</span> InflateException(</span><br><span class="line">                getParserStateDescription(context, attrs)</span><br><span class="line">                + <span class="string">&quot;: Error inflating class &quot;</span> + name, e);</span><br><span class="line">        ie.setStackTrace(EMPTY_STACK_TRACE);</span><br><span class="line">        <span class="keyword">throw</span> ie;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">final</span> InflateException ie = <span class="keyword">new</span> InflateException(</span><br><span class="line">                getParserStateDescription(context, attrs)</span><br><span class="line">                + <span class="string">&quot;: Error inflating class &quot;</span> + name, e);</span><br><span class="line">        ie.setStackTrace(EMPTY_STACK_TRACE);</span><br><span class="line">        <span class="keyword">throw</span> ie;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是根据xml布局文件中的标签，创建出控件的实例对象。</p><p>关键代码二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Inflate all children under temp against its context.</span></span><br><span class="line">rInflateChildren(parser, temp, attrs, <span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rInflate</span><span class="params">(XmlPullParser parser, View parent, Context context,</span></span></span><br><span class="line"><span class="function"><span class="params">        AttributeSet attrs, <span class="keyword">boolean</span> finishInflate)</span> <span class="keyword">throws</span> XmlPullParserException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> depth = parser.getDepth();</span><br><span class="line">    <span class="keyword">int</span> type;</span><br><span class="line">    <span class="keyword">boolean</span> pendingRequestFocus = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (((type = parser.next()) != XmlPullParser.END_TAG ||</span><br><span class="line">            parser.getDepth() &gt; depth) &amp;&amp; type != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type != XmlPullParser.START_TAG) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> String name = parser.getName();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TAG_REQUEST_FOCUS.equals(name)) &#123;</span><br><span class="line">            pendingRequestFocus = <span class="keyword">true</span>;</span><br><span class="line">            consumeChildElements(parser);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TAG_TAG.equals(name)) &#123;</span><br><span class="line">            parseViewTag(parser, parent, attrs);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TAG_INCLUDE.equals(name)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parser.getDepth() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InflateException(<span class="string">&quot;&lt;include /&gt; cannot be the root element&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            parseInclude(parser, context, parent, attrs);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TAG_MERGE.equals(name)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InflateException(<span class="string">&quot;&lt;merge /&gt; must be the root element&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> View view = createViewFromTag(parent, name, context, attrs);</span><br><span class="line">            <span class="keyword">final</span> ViewGroup viewGroup = (ViewGroup) parent;</span><br><span class="line">            <span class="keyword">final</span> ViewGroup.LayoutParams params = viewGroup.generateLayoutParams(attrs);</span><br><span class="line">            rInflateChildren(parser, view, attrs, <span class="keyword">true</span>);</span><br><span class="line">            viewGroup.addView(view, params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pendingRequestFocus) &#123;</span><br><span class="line">        parent.restoreDefaultFocus();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (finishInflate) &#123;</span><br><span class="line">        parent.onFinishInflate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rInflateChildren方法会遍历xml文件中的所有标签，同样采用createViewFromTag方法将所有的控件创建出来。</p><p>最终setContentView就完成了整个view视图的生成：</p><p><img src="/images/CustomizeView-03/image-20201003172009114.png" alt="image-20201003172009114"></p><h1 id="2-view创建流程关键类分析"><a href="#2-view创建流程关键类分析" class="headerlink" title="2.view创建流程关键类分析"></a>2.view创建流程关键类分析</h1><h2 id="2-1-类关系图"><a href="#2-1-类关系图" class="headerlink" title="2.1 类关系图"></a>2.1 类关系图</h2><p>通过前面的分析，一个activity的View创建过程中，涉及到以下类：</p><p><img src="/images/CustomizeView-03/Activity.bmp"></p><h2 id="2-2-时序图"><a href="#2-2-时序图" class="headerlink" title="2.2 时序图"></a>2.2 时序图</h2><p><img src="/images/CustomizeView-03/viewCreator.bmp" alt="viewCreator"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-布局文件xxx-xml生成view树&quot;&gt;&lt;a href=&quot;#1-布局文件xxx-xml生成view树&quot; class=&quot;headerlink&quot; title=&quot;1.布局文件xxx.xml生成view树&quot;&gt;&lt;/a&gt;1.布局文件xxx.xml生成view树&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="CustomizeView" scheme="http://example.com/categories/CustomizeView/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/10/02/AndroidContext%E7%90%86%E8%A7%A3/"/>
    <id>http://example.com/2020/10/02/AndroidContext%E7%90%86%E8%A7%A3/</id>
    <published>2020-10-02T03:58:49.978Z</published>
    <updated>2020-10-02T09:39:19.911Z</updated>
    
    <content type="html"><![CDATA[<p>什么是Context</p><p>Android系统的角度来理解：Context是一个场景，代表与操作系统的交互的一种过程。从程序的角度上来理解：Context就是一个抽象类，里面定义了各种抽象方法，包括获取系统资源，获取系统服务，发送广播，启动Activity,Service等，而Activity、Service、Application等都是该类的一个实现。</p><p><strong>Context的功能</strong></p><table><thead><tr><th><strong>Context行为分类</strong></th><th><strong>常用函数</strong></th></tr></thead><tbody><tr><td>使用系统提供的服务</td><td>getPackageManager()、getSystemService()……</td></tr><tr><td>基本功能</td><td>startActivity()、sendBroadcast()、registerReceiver()、startService()、bindService()、getContentResolver()……【内部基本上是和AMS打交道】</td></tr><tr><td>访问资源</td><td>getAssets()、getResources()、getString()、getColor()、getClassLoader()……</td></tr><tr><td>和当前所寄身的进程之间的联系</td><td>getMainLooper()、getApplicationContext()……</td></tr><tr><td>和信息存储相关</td><td>getSharedPreferences()、openFileInput()、openFileOutput()、deleteFile()、openOrCreateDatabase()、deleteDatabase()……</td></tr></tbody></table><p>Android系统中Context的继承关系</p><p><img src="../images/AndroidContext%E7%90%86%E8%A7%A3/StaticView.bmp" alt="StaticView"></p><p>Context类是一个抽象类，具体实现在ContextImpl类中；而ContextWrapper是Context的一个包装类，其里面所有的方法实现都是调用其内部mBase变量的方法，而mBase就是ContextImpl对象。然而ContextWrapper还有一个ContextThemeWrapper子类，该类中扩展了主题相关的方法。有继承关系图可以看出，Application和Service是继承自ContextWrapper，而Activity是继承自ContextThemeWrapper，Activity在启动的时候系统都会加载一个主题，也就是我们平时在AndroidManifest.xml文件里面写的android:theme=”@style/AppTheme”属性，然而Service和Applicaton都和UI界面没有关系，他们继承自ContextWrapper。所以Activity，Application，Service其实都关联着一个mBase变量，而mBase变量是ContextImpl对象的赋值，也是真正实现抽象类Context的地方。</p><p>Context的创建以及使用可以参考以下博客：</p><p><a href="https://blog.csdn.net/qq_35427437/article/details/79534257?utm_source=app">https://blog.csdn.net/qq_35427437/article/details/79534257?utm_source=app</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;什么是Context&lt;/p&gt;
&lt;p&gt;Android系统的角度来理解：Context是一个场景，代表与操作系统的交互的一种过程。从程序的角度上来理解：Context就是一个抽象类，里面定义了各种抽象方法，包括获取系统资源，获取系统服务，发送广播，启动Activity,Serv</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo搭建问题记录</title>
    <link href="http://example.com/2020/10/01/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2020/10/01/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-10-01T13:45:53.000Z</published>
    <updated>2020-10-01T15:29:55.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-本地网址无法显示网页"><a href="#1-本地网址无法显示网页" class="headerlink" title="1.本地网址无法显示网页"></a>1.本地网址无法显示网页</h1><p>测查是否是由于没有设置主题，即检查themes目录下是否为空，如果为空，则是由于没有主题，导致无法显示网页。</p><p>git clone <a href="https://github.com/iissnan/hexo-theme-next.git">https://github.com/iissnan/hexo-theme-next.git</a> themes/next</p><p>并将blog目录下_config.yml里theme的名称由landscape修改为next</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001221437236.png" alt="image-20201001221437236"></p><h1 id="2-github-io网页无法访问"><a href="#2-github-io网页无法访问" class="headerlink" title="2.github.io网页无法访问"></a>2.github.io网页无法访问</h1><p>将DNS设置如下：</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001220505749.png" alt="image-20201001220505749"></p><h1 id="3-hexo-Typora无法显示图片"><a href="#3-hexo-Typora无法显示图片" class="headerlink" title="3.hexo+Typora无法显示图片"></a>3.hexo+Typora无法显示图片</h1><p>事先声明，所有博客文件均保存在 <code>hexo/_posts/</code>文件夹下</p><p>首先在 <code>hexo &gt; source</code>目录下建一个文件夹叫images，用来保存博客中的图片。</p><p>然后打开Typora的 <code>文件 &gt; 偏好设置</code>，进行如下设置。</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001215844300.png" alt="image-20201001215844300"></p><p>这样的话所有的博客中的图片都将会保存到 <code>/source/images/该博客md文件名/图片名称</code></p><p>但是仅仅这样设置还不够，这样设置在typora中倒是能看图片了，但是使用的却是相对于当前md文件的相对路径，可是如果启动hexo，是要用服务器访问的，而服务器显然无法根据这个相对路径正确访问到图片，因此还需要在typora中进行进一步设置。</p><p>在typora菜单栏点击 <code>格式-&gt;图像-&gt;设置图片根目录</code>，将<code>hexo/source</code>作为其根目录即可。</p><p>设置完成之后就可以插入图片了，且插入的图片自动保存在 `/source/images/该博客md文件名/目录下</p><h1 id="4-主题更换"><a href="#4-主题更换" class="headerlink" title="4.主题更换"></a>4.主题更换</h1><p>Hexo更改主题后启动服务器，界面显如下字符:</p><p>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial</p><h5 id="问题-一般为缺少hexo所需的插件-可通过查看-npm-安装各-hexo-插件的情况"><a href="#问题-一般为缺少hexo所需的插件-可通过查看-npm-安装各-hexo-插件的情况" class="headerlink" title="问题:一般为缺少hexo所需的插件,可通过查看 npm 安装各 hexo 插件的情况"></a>问题:一般为缺少hexo所需的插件,可通过查看 npm 安装各 hexo 插件的情况</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-本地网址无法显示网页&quot;&gt;&lt;a href=&quot;#1-本地网址无法显示网页&quot; class=&quot;headerlink&quot; title=&quot;1.本地网址无法显示网页&quot;&gt;&lt;/a&gt;1.本地网址无法显示网页&lt;/h1&gt;&lt;p&gt;测查是否是由于没有设置主题，即检查themes目录下是否为空</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/10/01/Activity%E7%9A%84%E5%B8%83%E5%B1%80%E5%85%A5%E5%8F%A3/"/>
    <id>http://example.com/2020/10/01/Activity%E7%9A%84%E5%B8%83%E5%B1%80%E5%85%A5%E5%8F%A3/</id>
    <published>2020-10-01T10:41:30.486Z</published>
    <updated>2020-10-01T10:41:30.681Z</updated>
    
    <content type="html"><![CDATA[<p>Activity的布局入口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Activity的布局入口&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自定义 Flowlayout 思路分析</title>
    <link href="http://example.com/2020/10/01/CustomizeView-02/"/>
    <id>http://example.com/2020/10/01/CustomizeView-02/</id>
    <published>2020-10-01T05:59:24.000Z</published>
    <updated>2020-10-02T10:04:25.917Z</updated>
    
    <content type="html"><![CDATA[<p>自定义FlowLayout</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;自定义FlowLayout&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CustomizeView</title>
    <link href="http://example.com/2020/09/30/CustomizeView/"/>
    <id>http://example.com/2020/09/30/CustomizeView/</id>
    <published>2020-09-30T11:19:50.000Z</published>
    <updated>2020-10-02T02:37:11.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-自定义View"><a href="#1-自定义View" class="headerlink" title="1.自定义View"></a>1.自定义View</h1><h2 id="1-1什么是自定义View"><a href="#1-1什么是自定义View" class="headerlink" title="1.1什么是自定义View"></a>1.1什么是自定义View</h2><h2 id="1-2自定义View的分类"><a href="#1-2自定义View的分类" class="headerlink" title="1.2自定义View的分类"></a>1.2自定义View的分类</h2><h3 id="1-2-1View的分类"><a href="#1-2-1View的分类" class="headerlink" title="1.2.1View的分类"></a>1.2.1View的分类</h3><p><strong>1）视图View主要分为两类</strong></p><table><thead><tr><th>类别</th><th>解释</th><th>特点</th></tr></thead><tbody><tr><td>单一视图（View）</td><td>即单个的View控件，比如Button、TextView等</td><td>不包含子view</td></tr><tr><td>视图组（ViewGroup）</td><td>即多个View组成的ViewGroup，比如LinearLayout等。</td><td>包含子View</td></tr></tbody></table><p><img src="/images/CustomizeView/view-1601559345905.jpg" alt="view"></p><p><strong>2）自定义View可分为以下两种类型：</strong></p><p><strong>自定义View</strong>：这种是单个的View，例如自定义Button、TextView等。只需要重写onMeasure()和onDraw()</p><p><strong>自定义Viewgroup</strong>：ViewGroup是一个容器，可以容纳多种类型的View，也包括ViewGroup。需要重写onMeasure()与onLayout()方法。</p><h2 id="1-2自定义View的流程分析"><a href="#1-2自定义View的流程分析" class="headerlink" title="1.2自定义View的流程分析"></a>1.2自定义View的流程分析</h2><h3 id="1-2-1-onMeasure方法"><a href="#1-2-1-onMeasure方法" class="headerlink" title="1.2.1 onMeasure方法"></a>1.2.1 onMeasure方法</h3><p>在进行自定义ViewGroup时，需要重写onMeasure方法，onMeasure方法主要是为了确定，ViewGroup中每个孩子的大小以及在测量完每个孩子的大小之后需要根据所有孩子的大小，来测量ViewGroup自身的尺寸。</p><p>因此在进行onMeasure时，会涉及到两个部分的工作，测量child view的尺寸，以及测量ViewGroup自身的尺寸。</p><p>总体流程为：</p><p>1）将自身的MeasureSpec参数传递给child View，让childView根据MeasureSpec进行自身的测量。</p><p>2）child view拿到father view的MeasureSpec参数，再结合自身的LayoutParams参数进行测绘。</p><p>child View的测绘过程主要包括：</p><p>①获取father view的MeasureSpec参数、padding参数</p><p>②获取自身的LayoutParams参数，即布局文件中的layout_width、layout_height</p><p>③根据以上三个参数，可以得到child view的MeasureSpec参数。</p><p>④根据自身的MeasureSpec参数，可以得到自身真实的尺寸。</p><p>3）child View测量完毕之后，father view会根据child View得到的时间尺寸，对自己进行测绘。</p><p>测绘主要包括：</p><p>①对比自身的MeasureSpec参数与ViewGroup（自身）的father的MeasureSpec参数。确定下来自己的真实参数</p><p>②得到自己真实的参数之后，就可以进行测绘了。</p><h3 id="1-2-2onLayout-方法"><a href="#1-2-2onLayout-方法" class="headerlink" title="1.2.2onLayout()方法"></a>1.2.2onLayout()方法</h3><p>在进行自定义时</p><h1 id="2-关键类分析"><a href="#2-关键类分析" class="headerlink" title="2.关键类分析"></a>2.关键类分析</h1><h2 id="2-1MeasureSpec"><a href="#2-1MeasureSpec" class="headerlink" title="2.1MeasureSpec"></a>2.1MeasureSpec</h2><p>MeasureSpec参数：封装了father View传递给child View的布局规则。它很大程度上决定了一个View尺寸规格，因为view还受自身的LayoutParams参数影响。</p><p>MeasureSpec是一个int类型的数据结构，它主要分为SpecMode与SpecSize；</p><p>SpecMode：用高2位表示测量的模式。</p><p>SpecSize：用低30位表示在某种模式下的规格大小</p><p>SpecMode又有三类：</p><p>UNSPECIFIED：不对View的大小做限制，一般用于系统内部</p><p>EXACTLY：表示精确的布局尺寸，比如100dp，这就表示father 布局已经给出了精确的尺寸，子布局可以根据这个布局参数进行测量，child view可以比father 的尺寸大，但是大的部分是不会显示出来的。</p><p> AT_MOST：表示father布局指定了一个给定的大小，child view的尺寸不能比这个值大。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A MeasureSpec encapsulates the layout requirements passed from parent to child.</span></span><br><span class="line"><span class="comment"> * Each MeasureSpec represents a requirement for either the width or the height.</span></span><br><span class="line"><span class="comment"> * A MeasureSpec is comprised of a size and a mode. There are three possible</span></span><br><span class="line"><span class="comment"> * modes:</span></span><br><span class="line"><span class="comment"> * &lt;dl&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;UNSPECIFIED&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The parent has not imposed any constraint on the child. It can be whatever size</span></span><br><span class="line"><span class="comment"> * it wants.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;EXACTLY&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The parent has determined an exact size for the child. The child is going to be</span></span><br><span class="line"><span class="comment"> * given those bounds regardless of how big it wants to be.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;AT_MOST&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The child can be as large as it wants up to the specified size.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/dl&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * MeasureSpecs are implemented as ints to reduce object allocation. This class</span></span><br><span class="line"><span class="comment"> * is provided to pack and unpack the &amp;lt;size, mode&amp;gt; tuple into the int.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MeasureSpec</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MODE_SHIFT = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MODE_MASK  = <span class="number">0x3</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="meta">@IntDef(&#123;UNSPECIFIED, EXACTLY, AT_MOST&#125;)</span></span><br><span class="line">    <span class="meta">@Retention(RetentionPolicy.SOURCE)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@interface</span> MeasureSpecMode &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The parent has not imposed any constraint</span></span><br><span class="line"><span class="comment">     * on the child. It can be whatever size it wants.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UNSPECIFIED = <span class="number">0</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The parent has determined an exact size</span></span><br><span class="line"><span class="comment">     * for the child. The child is going to be given those bounds regardless</span></span><br><span class="line"><span class="comment">     * of how big it wants to be.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> EXACTLY     = <span class="number">1</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The child can be as large as it wants up</span></span><br><span class="line"><span class="comment">     * to the specified size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> AT_MOST     = <span class="number">2</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a measure specification based on the supplied size and mode.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The mode must always be one of the following:</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#UNSPECIFIED&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#EXACTLY&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#AT_MOST&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On API level 17 and lower, makeMeasureSpec&#x27;s</span></span><br><span class="line"><span class="comment">     * implementation was such that the order of arguments did not matter</span></span><br><span class="line"><span class="comment">     * and overflow in either value could impact the resulting MeasureSpec.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> android.widget.RelativeLayout&#125; was affected by this bug.</span></span><br><span class="line"><span class="comment">     * Apps targeting API levels greater than 17 will get the fixed, more strict</span></span><br><span class="line"><span class="comment">     * behavior.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size the size of the measure specification</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mode the mode of the measure specification</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the measure specification based on size and mode</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">makeMeasureSpec</span><span class="params">(<span class="meta">@IntRange(from = 0, to = (1 &lt;&lt; MeasureSpec.MODE_SHIFT) - 1)</span> <span class="keyword">int</span> size,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="meta">@MeasureSpecMode</span> <span class="keyword">int</span> mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sUseBrokenMakeMeasureSpec) &#123;</span><br><span class="line">            <span class="keyword">return</span> size + mode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (size &amp; ~MODE_MASK) | (mode &amp; MODE_MASK);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Like &#123;<span class="doctag">@link</span> #makeMeasureSpec(int, int)&#125;, but any spec with a mode of UNSPECIFIED</span></span><br><span class="line"><span class="comment">     * will automatically get a size of 0. Older apps expect this.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span> internal use only for compatibility with system widgets and older apps</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">makeSafeMeasureSpec</span><span class="params">(<span class="keyword">int</span> size, <span class="keyword">int</span> mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sUseZeroUnspecifiedMeasureSpec &amp;&amp; mode == UNSPECIFIED) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> makeMeasureSpec(size, mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the mode from the supplied measure specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to extract the mode from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#UNSPECIFIED&#125;,</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#AT_MOST&#125; or</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#EXACTLY&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@MeasureSpecMode</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMode</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//noinspection ResourceType</span></span><br><span class="line">        <span class="keyword">return</span> (measureSpec &amp; MODE_MASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the size from the supplied measure specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to extract the size from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the size in pixels defined in the supplied measure specification</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (measureSpec &amp; ~MODE_MASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">adjust</span><span class="params">(<span class="keyword">int</span> measureSpec, <span class="keyword">int</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> mode = getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> size = getSize(measureSpec);</span><br><span class="line">        <span class="keyword">if</span> (mode == UNSPECIFIED) &#123;</span><br><span class="line">            <span class="comment">// No need to adjust size for UNSPECIFIED mode.</span></span><br><span class="line">            <span class="keyword">return</span> makeMeasureSpec(size, UNSPECIFIED);</span><br><span class="line">        &#125;</span><br><span class="line">        size += delta;</span><br><span class="line">        <span class="keyword">if</span> (size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            Log.e(VIEW_LOG_TAG, <span class="string">&quot;MeasureSpec.adjust: new size would be negative! (&quot;</span> + size +</span><br><span class="line">                    <span class="string">&quot;) spec: &quot;</span> + toString(measureSpec) + <span class="string">&quot; delta: &quot;</span> + delta);</span><br><span class="line">            size = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> makeMeasureSpec(size, mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns a String representation of the specified measure</span></span><br><span class="line"><span class="comment">     * specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to convert to a String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String with the following format: &quot;MeasureSpec: MODE SIZE&quot;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> mode = getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> size = getSize(measureSpec);</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;MeasureSpec: &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mode == UNSPECIFIED)</span><br><span class="line">            sb.append(<span class="string">&quot;UNSPECIFIED &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mode == EXACTLY)</span><br><span class="line">            sb.append(<span class="string">&quot;EXACTLY &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mode == AT_MOST)</span><br><span class="line">            sb.append(<span class="string">&quot;AT_MOST &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sb.append(mode).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        sb.append(size);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2LayoutParams"><a href="#2-2LayoutParams" class="headerlink" title="2.2LayoutParams"></a>2.2LayoutParams</h2><p>LayoutParams表示一个布局的参数，可以理解为在xml中的layout_width、layout_height两个属性的值；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LayoutParams are used by views to tell their parents how they want to be</span></span><br><span class="line"><span class="comment"> * laid out. See</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> android.R.styleable#ViewGroup_Layout ViewGroup Layout Attributes&#125;</span></span><br><span class="line"><span class="comment"> * for a list of all child view attributes that this class supports.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The base LayoutParams class just describes how big the view wants to be</span></span><br><span class="line"><span class="comment"> * for both width and height. For each dimension, it can specify one of:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;FILL_PARENT (renamed MATCH_PARENT in API Level 8 and higher), which</span></span><br><span class="line"><span class="comment"> * means that the view wants to be as big as its parent (minus padding)</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; WRAP_CONTENT, which means that the view wants to be just big enough</span></span><br><span class="line"><span class="comment"> * to enclose its content (plus padding)</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; an exact number</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * There are subclasses of LayoutParams for different subclasses of</span></span><br><span class="line"><span class="comment"> * ViewGroup. For example, AbsoluteLayout has its own subclass of</span></span><br><span class="line"><span class="comment"> * LayoutParams which adds an X and Y value.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;div class=&quot;special reference&quot;&gt;</span></span><br><span class="line"><span class="comment"> * &lt;h3&gt;Developer Guides&lt;/h3&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;For more information about creating user interface layouts, read the</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;&#123;<span class="doctag">@docRoot</span>&#125;guide/topics/ui/declaring-layout.html&quot;&gt;XML Layouts&lt;/a&gt; developer</span></span><br><span class="line"><span class="comment"> * guide.&lt;/p&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#ViewGroup_Layout_layout_height</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#ViewGroup_Layout_layout_width</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LayoutParams</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * FILL_PARENT means that the view wants to be as big as its parent,</span></span><br><span class="line"><span class="comment">     * minus the parent&#x27;s padding, if any. This value is deprecated</span></span><br><span class="line"><span class="comment">     * starting in API Level 8 and replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;UnusedDeclaration&quot;&#125;)</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> FILL_PARENT = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * MATCH_PARENT means that the view wants to be as big as its parent,</span></span><br><span class="line"><span class="comment">     * minus the parent&#x27;s padding, if any. Introduced in API Level 8.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MATCH_PARENT = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * WRAP_CONTENT means that the view wants to be just large enough to fit</span></span><br><span class="line"><span class="comment">     * its own internal content, taking its own padding into account.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WRAP_CONTENT = -<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Information about how wide the view wants to be. Can be one of the</span></span><br><span class="line"><span class="comment">     * constants FILL_PARENT (replaced by MATCH_PARENT</span></span><br><span class="line"><span class="comment">     * in API Level 8) or WRAP_CONTENT, or an exact size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ViewDebug</span>.ExportedProperty(category = <span class="string">&quot;layout&quot;</span>, mapping = &#123;</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = MATCH_PARENT, to = <span class="string">&quot;MATCH_PARENT&quot;</span>),</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = WRAP_CONTENT, to = <span class="string">&quot;WRAP_CONTENT&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@InspectableProperty(name = &quot;layout_width&quot;, enumMapping = &#123;</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;match_parent&quot;, value = MATCH_PARENT),</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;wrap_content&quot;, value = WRAP_CONTENT)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> width;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Information about how tall the view wants to be. Can be one of the</span></span><br><span class="line"><span class="comment">     * constants FILL_PARENT (replaced by MATCH_PARENT</span></span><br><span class="line"><span class="comment">     * in API Level 8) or WRAP_CONTENT, or an exact size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ViewDebug</span>.ExportedProperty(category = <span class="string">&quot;layout&quot;</span>, mapping = &#123;</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = MATCH_PARENT, to = <span class="string">&quot;MATCH_PARENT&quot;</span>),</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = WRAP_CONTENT, to = <span class="string">&quot;WRAP_CONTENT&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@InspectableProperty(name = &quot;layout_height&quot;, enumMapping = &#123;</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;match_parent&quot;, value = MATCH_PARENT),</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;wrap_content&quot;, value = WRAP_CONTENT)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used to animate layouts.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> LayoutAnimationController.AnimationParameters layoutAnimationParameters;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new set of layout parameters. The values are extracted from</span></span><br><span class="line"><span class="comment">     * the supplied attributes set and context. The XML attributes mapped</span></span><br><span class="line"><span class="comment">     * to this set of layout parameters are:</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     *   &lt;li&gt;&lt;code&gt;layout_width&lt;/code&gt;: the width, either an exact value,</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;, or &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in API Level 8)&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *   &lt;li&gt;&lt;code&gt;layout_height&lt;/code&gt;: the height, either an exact value,</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;, or &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in API Level 8)&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c the application environment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> attrs the set of attributes from which to extract the layout</span></span><br><span class="line"><span class="comment">     *              parameters&#x27; values</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(Context c, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.ViewGroup_Layout);</span><br><span class="line">        setBaseAttributes(a,</span><br><span class="line">                R.styleable.ViewGroup_Layout_layout_width,</span><br><span class="line">                R.styleable.ViewGroup_Layout_layout_height);</span><br><span class="line">        a.recycle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new set of layout parameters with the specified width</span></span><br><span class="line"><span class="comment">     * and height.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width the width, either &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;,</span></span><br><span class="line"><span class="comment">     *        &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in</span></span><br><span class="line"><span class="comment">     *        API Level 8), or a fixed size in pixels</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height the height, either &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;,</span></span><br><span class="line"><span class="comment">     *        &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in</span></span><br><span class="line"><span class="comment">     *        API Level 8), or a fixed size in pixels</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Copy constructor. Clones the width and height values of the source.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source The layout params to copy from.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(LayoutParams source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = source.width;</span><br><span class="line">        <span class="keyword">this</span>.height = source.height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used internally by MarginLayoutParams.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    LayoutParams() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the layout parameters from the supplied attributes.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a the style attributes to extract the parameters from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> widthAttr the identifier of the width attribute</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> heightAttr the identifier of the height attribute</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">setBaseAttributes</span><span class="params">(TypedArray a, <span class="keyword">int</span> widthAttr, <span class="keyword">int</span> heightAttr)</span> </span>&#123;</span><br><span class="line">        width = a.getLayoutDimension(widthAttr, <span class="string">&quot;layout_width&quot;</span>);</span><br><span class="line">        height = a.getLayoutDimension(heightAttr, <span class="string">&quot;layout_height&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Resolve layout parameters depending on the layout direction. Subclasses that care about</span></span><br><span class="line"><span class="comment">     * layoutDirection changes should override this method. The default implementation does</span></span><br><span class="line"><span class="comment">     * nothing.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> layoutDirection the direction of the layout</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> View#LAYOUT_DIRECTION_LTR&#125;</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> View#LAYOUT_DIRECTION_RTL&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resolveLayoutDirection</span><span class="params">(<span class="keyword">int</span> layoutDirection)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns a String representation of this set of layout parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> output the String to prepend to the internal representation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String with the following format: output +</span></span><br><span class="line"><span class="comment">     *         &quot;ViewGroup.LayoutParams=&#123; width=WIDTH, height=HEIGHT &#125;&quot;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">debug</span><span class="params">(String output)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> output + <span class="string">&quot;ViewGroup.LayoutParams=&#123; width=&quot;</span></span><br><span class="line">                + sizeToString(width) + <span class="string">&quot;, height=&quot;</span> + sizeToString(height) + <span class="string">&quot; &#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use &#123;<span class="doctag">@code</span> canvas&#125; to draw suitable debugging annotations for these LayoutParameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view the view that contains these layout parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> canvas the canvas on which to draw</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDebugDraw</span><span class="params">(View view, Canvas canvas, Paint paint)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts the specified size to a readable String.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size the size to convert</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String instance representing the supplied size</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">static</span> String <span class="title">sizeToString</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (size == WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;wrap-content&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (size == MATCH_PARENT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;match-parent&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(<span class="meta">@NonNull</span> ViewHierarchyEncoder encoder)</span> </span>&#123;</span><br><span class="line">        encoder.beginObject(<span class="keyword">this</span>);</span><br><span class="line">        encodeProperties(encoder);</span><br><span class="line">        encoder.endObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">encodeProperties</span><span class="params">(<span class="meta">@NonNull</span> ViewHierarchyEncoder encoder)</span> </span>&#123;</span><br><span class="line">        encoder.addProperty(<span class="string">&quot;width&quot;</span>, width);</span><br><span class="line">        encoder.addProperty(<span class="string">&quot;height&quot;</span>, height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3ViewGroup"><a href="#2-3ViewGroup" class="headerlink" title="2.3ViewGroup"></a>2.3ViewGroup</h2><p>getChildMeasureSpec函数的作用就是计算出child view的MeasureSpec参数。最终child view根据这个参数得到自身测量的尺寸。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Does the hard part of measureChildren: figuring out the MeasureSpec to</span></span><br><span class="line"><span class="comment"> * pass to a particular child. This method figures out the right MeasureSpec</span></span><br><span class="line"><span class="comment"> * for one dimension (height or width) of one child view.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The goal is to combine information from our MeasureSpec with the</span></span><br><span class="line"><span class="comment"> * LayoutParams of the child to get the best possible results. For example,</span></span><br><span class="line"><span class="comment"> * if the this view knows its size (because its MeasureSpec has a mode of</span></span><br><span class="line"><span class="comment"> * EXACTLY), and the child has indicated in its LayoutParams that it wants</span></span><br><span class="line"><span class="comment"> * to be the same size as the parent, the parent should ask the child to</span></span><br><span class="line"><span class="comment"> * layout given an exact size.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> spec The requirements for this view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> padding The padding of this view for the current dimension and</span></span><br><span class="line"><span class="comment"> *        margins, if applicable</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> childDimension How big the child wants to be in the current</span></span><br><span class="line"><span class="comment"> *        dimension</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> a MeasureSpec integer for the child</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getChildMeasureSpec</span><span class="params">(<span class="keyword">int</span> spec, <span class="keyword">int</span> padding, <span class="keyword">int</span> childDimension)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> specMode = MeasureSpec.getMode(spec);</span><br><span class="line">    <span class="keyword">int</span> specSize = MeasureSpec.getSize(spec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> size = Math.max(<span class="number">0</span>, specSize - padding);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> resultSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> resultMode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (specMode) &#123;</span><br><span class="line">    <span class="comment">// Parent has imposed an exact size on us</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.EXACTLY:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size. So be it.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size. It can&#x27;t be</span></span><br><span class="line">            <span class="comment">// bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parent has imposed a maximum size on us</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.AT_MOST:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Child wants a specific size... so be it</span></span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size, but our size is not fixed.</span></span><br><span class="line">            <span class="comment">// Constrain child to not be bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size. It can&#x27;t be</span></span><br><span class="line">            <span class="comment">// bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parent asked to see how big we want to be</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Child wants a specific size... let him have it</span></span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size... find out how big it should</span></span><br><span class="line">            <span class="comment">// be</span></span><br><span class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">            resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size.... find out how</span></span><br><span class="line">            <span class="comment">// big it should be</span></span><br><span class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">            resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//noinspection ResourceType</span></span><br><span class="line">    <span class="keyword">return</span> MeasureSpec.makeMeasureSpec(resultSize, resultMode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对参数的理解</p><p>spec：表示father view传递给child view的MeasureSpec参数，因为child view要测量自身的尺寸需要根据father view的规则来测量</p><p>int padding：child view放置在father 布局中，会与father 的边界有一定的距离，这个距离就是padding。红色与绿色之间的部分为padding</p><p><img src="/images/CustomizeView/image-20201001213757594.png" alt="image-20201001213757594"></p><p> int childDimension：child vIew的布局参数，即在xml文件中layout_width、layout_height两个属性的值。</p><p>要得到child View的MeasureSpec参数，需要以上的三个参数值。</p><h2 id="2-4-MeasureSpec与LayoutParams的关系"><a href="#2-4-MeasureSpec与LayoutParams的关系" class="headerlink" title="2.4 MeasureSpec与LayoutParams的关系"></a>2.4 MeasureSpec与LayoutParams的关系</h2><p>系统会将LayoutParams在父容器的约束下转化成对应的MeasureSpec；然后再根据这个MeasureSpec参数来确定View的高、宽；在确定MeasureSpec参数时，分顶层DecorView以及子View：</p><p><img src="/images/CustomizeView/image-20201002101410896.png" alt="image-20201002101410896"></p><p>那么childView具体是何种模式，在这个函数内部进行了判定，总结下来为一下9种情况：</p><p><img src="/images/CustomizeView/image-20201001213908239.png" alt="image-20201001213908239"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-自定义View&quot;&gt;&lt;a href=&quot;#1-自定义View&quot; class=&quot;headerlink&quot; title=&quot;1.自定义View&quot;&gt;&lt;/a&gt;1.自定义View&lt;/h1&gt;&lt;h2 id=&quot;1-1什么是自定义View&quot;&gt;&lt;a href=&quot;#1-1什么是自定义Vie</summary>
      
    
    
    
    <category term="CustomizeView" scheme="http://example.com/categories/CustomizeView/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/09/30/displayStrategy/"/>
    <id>http://example.com/2020/09/30/displayStrategy/</id>
    <published>2020-09-30T09:03:29.954Z</published>
    <updated>2020-09-30T10:43:36.504Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AVNT屏幕相关的软硬件方案"><a href="#AVNT屏幕相关的软硬件方案" class="headerlink" title="AVNT屏幕相关的软硬件方案"></a>AVNT屏幕相关的软硬件方案</h1><h1 id="1-屏幕控制方案"><a href="#1-屏幕控制方案" class="headerlink" title="1. 屏幕控制方案"></a>1. 屏幕控制方案</h1><h2 id="1-1-屏幕内置MCU的控制方案"><a href="#1-1-屏幕内置MCU的控制方案" class="headerlink" title="1.1 屏幕内置MCU的控制方案"></a>1.1 屏幕内置MCU的控制方案</h2><h2 id="1-2-屏幕无内置MCU方案"><a href="#1-2-屏幕无内置MCU方案" class="headerlink" title="1.2 屏幕无内置MCU方案"></a>1.2 屏幕无内置MCU方案</h2><img src="/.com//09/30/displayStrategy/1.png" class title="This is an image"><p><img src="/.com//1.png" alt="屏幕硬件连接图"></p><p><strong>1）屏幕相关硬件模块说明</strong></p><table><thead><tr><th align="left">模块</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td align="left">LVDS Serializer</td><td></td><td></td></tr><tr><td align="left">LVDS Deserializer</td><td></td><td></td></tr><tr><td align="left">ADC</td><td></td><td></td></tr><tr><td align="left">Backlight driver</td><td></td><td></td></tr><tr><td align="left">Touch Panel</td><td></td><td></td></tr><tr><td align="left">LDO</td><td></td><td></td></tr><tr><td align="left">TFT</td><td></td><td></td></tr></tbody></table><p><strong>2）屏幕通信信号说明</strong></p><table><thead><tr><th>引脚信号</th><th>连接方式</th><th>通信协议</th><th>信号作用</th><th>备注</th></tr></thead><tbody><tr><td>video</td><td>连接SOC与加串器对应引脚</td><td>DSI协议</td><td>传输RGB888/Sync/field</td><td></td></tr><tr><td>I2C(main)</td><td>连接SOC与加串器对应引脚</td><td>I2C协议</td><td>主要用于传输控制信号，包括屏幕的初始化信号，屏幕的亮灭控制信号</td><td></td></tr><tr><td>I2C(pass through)</td><td>连接SOC与加串器对应引脚</td><td>I2C协议</td><td>主要用于触摸的初始化，以及接收触摸事件</td><td></td></tr><tr><td>GPIO_PWM</td><td>连接VIP与加串器引脚</td><td>GPIO数据</td><td></td><td></td></tr><tr><td>Coax.</td><td>双绞同轴线，连接加串器与解串器</td><td></td><td>传输加串数据，包括I2C控制指令、RGB数据等</td><td></td></tr><tr><td>Batt</td><td>外部电源接口</td><td></td><td>用于给屏幕供电</td><td></td></tr><tr><td>ACC Control</td><td>连接VIP的GPIO与加串器GPIO引脚</td><td>GPIO数据</td><td>用于控制屏幕上下电，有Batt供电，但是需要ACC Control来控制屏幕的上下电，高电平上电，低电平下电</td><td></td></tr><tr><td>BL_ON</td><td>解串器GPIO与BL驱动器GPIO相连</td><td>GPIO数据</td><td>用于控制屏幕背光的亮、灭</td><td></td></tr><tr><td>BL_PWM</td><td>解串器GPIO与BL驱动器GPIO相连</td><td>GPIO数据</td><td>用于控制屏幕的背光亮度</td><td></td></tr></tbody></table><h2 id="1-3-屏幕控制软件方案"><a href="#1-3-屏幕控制软件方案" class="headerlink" title="1.3 屏幕控制软件方案"></a>1.3 屏幕控制软件方案</h2><p>屏幕软件控制主要包括屏幕的屏幕上下电、初始化、屏幕背光亮度控制、屏幕亮灭控制以及屏幕触摸事件响应。然而由于硬件设计方案的不同，屏幕软件控制方案有着一定差异，总体体现在屏幕软件控制的职责上。</p><p><strong>1）屏幕上下电</strong></p><p>当有总线唤醒信号或者ACC/IGN信号后，VIP检测到电源信号后，对屏幕进行上下电进行控制。</p><p>由于ACC Control负责屏幕的上下电，而ACC Control引脚的控制，可以由VIP控制也可以由SOC控制。</p><p><strong>2）屏幕初始化</strong></p><p>屏幕的初始化是由SOC通过I2C驱动来进行屏幕的初始化配置；</p><p><strong>3）屏幕背光亮度控制</strong></p><p>①VIP通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度</p><p><strong><em><u>②SOC通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度</u></em></strong></p><p><strong>4）屏幕亮灭控制</strong></p><p>①VIP通过控制ACC Control引脚，直接给屏幕上下电，达到屏幕亮灭的控制，但是这种方式会导致整个屏幕下电，当重新上电需要重新初始化屏幕，会存在亮屏比较慢的情况</p><p>②SOC侧通过I2C控制加串器，并将数据透传到屏幕解串器，解串器通过控制背光的BL_ON引脚，实现屏幕的亮灭控制。</p><p><strong>5）屏幕触摸事件响应</strong></p><h2 id="1-4-屏幕控制方案设计"><a href="#1-4-屏幕控制方案设计" class="headerlink" title="1.4 屏幕控制方案设计"></a>1.4 屏幕控制方案设计</h2><p><img src="/.com//.%5CdisplayStrategy%5C2.png" alt="alt"></p><p><strong>1）屏幕初始化</strong></p><p>①当有总线唤醒信号或者ACC/IGN信号后，VIP电源管理检测到电源状态信号后，会通过GPIO控制输出给屏幕上电。</p><p>②并将电源状态信号传递给SOC，QNX系统会通过I2C对屏幕进行初始化</p><p><strong>2）屏幕背光亮度控制</strong></p><p>①IVI端提供屏幕背光亮度的应用，当应用发起对屏幕背光亮度进行调节时，Android端电源管理会接收屏幕背光调节的信号，并通过VHAL，再经SOMEIP，将数据发送到QNX端</p><p>②QNX电源管理再将信号发送给VIP，VIP端的电源管理，通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度。</p><p><strong>3）屏幕亮灭控制</strong></p><p>屏幕的亮灭控制会有两种场景</p><p>①ACC ON下屏幕的亮灭控制</p><ul><li>IVI端提供屏幕亮灭的应用，当应用发起对屏幕亮灭进行调节时，Android端电源管理会接收屏幕亮灭控制的信号，并通过VHAL，再经SOMEIP，将数据发送到QNX端。</li><li>QNX端电源管理，通过I2C配置幕幕加串器，加串器透传控制数据给屏幕端解串器，解串器通过控制背光的BL_ON引脚，实现屏幕的亮灭控制。</li></ul><p>②ACC OFF时屏幕的亮灭控制</p><ul><li>VIP可以通过控制Disp_ctr来控制屏幕的上下电来实现屏幕的亮灭控制。</li><li>也可以通过ACC ON场景下，通过BL_ON管脚进行屏幕的亮灭控制。</li></ul><h1 id="2-屏幕检测方案"><a href="#2-屏幕检测方案" class="headerlink" title="2. 屏幕检测方案"></a>2. 屏幕检测方案</h1><h2 id="2-1-屏幕检测需求分析"><a href="#2-1-屏幕检测需求分析" class="headerlink" title="2.1 屏幕检测需求分析"></a>2.1 屏幕检测需求分析</h2><table><thead><tr><th></th><th>全白模式</th></tr></thead><tbody><tr><td></td><td>全黑模式</td></tr><tr><td>IVI/Cluster 屏幕检测</td><td>由黑至白模式</td></tr><tr><td></td><td>全红模式</td></tr><tr><td></td><td>全绿模式</td></tr><tr><td></td><td>全蓝模式</td></tr></tbody></table><p><strong>1）场景</strong></p><p>工厂下线时需要对屏幕坏点进行检测，通过屏幕显示不同的颜色来判断屏幕是否有坏点。</p><p><strong>2）实现</strong></p><p>应用上对于屏幕检测有两种方式</p><ul><li>工程模式应用下提供屏幕检测的界面，用于对屏幕进行检测</li></ul><p><img src="/.com//.%5CdisplayStrategy%5C3.png" alt="alt"></p><ul><li><p>采用诊断仪的方式诊断屏幕，主要是通过发送DID数据进行检测</p><p><img src="/.com//.%5CdisplayStrategy%5C4.png" alt="alt"></p></li></ul><h2 id="2-2-屏幕检测的底层实现方案"><a href="#2-2-屏幕检测的底层实现方案" class="headerlink" title="2.2 屏幕检测的底层实现方案"></a>2.2 屏幕检测的底层实现方案</h2><p><img src="/.com//.%5CdisplayStrategy%5C5.png" alt="alt"></p><p>屏幕检测主要有两种方式：</p><ul><li>解串器接收应用的RGB数据进行显示</li><li>通过I2C对加串器进行配置，使屏幕进入工程测试模式，给屏幕特定的颜色值，显示不同测试条件下的屏幕颜色。</li></ul><h2 id="2-3-屏幕检测上层软件实现方法"><a href="#2-3-屏幕检测上层软件实现方法" class="headerlink" title="2.3 屏幕检测上层软件实现方法"></a>2.3 屏幕检测上层软件实现方法</h2><p>2.3.1 单系统方案</p><p>由Android通过播放图片的方式，在屏幕上显示不同颜色的图片来进行检测。</p><p>2.3.2 双系统方案</p><p>由于双系统的存在，屏幕显示的数据输出可以有以下两种方案：</p><p>1）QNX控制数据输出显示</p><p>从IVI发起屏幕检测信号，IVI端模块将检测信号发送给QNX屏幕检测模块，QNX负责屏幕的实际显示检测</p><p>2）QNX控制Cluster屏幕的检测数据输出，Android端负责IVI屏幕的检测数据输出</p><p>从IVI发起屏幕检测信号，IVI端模块将检测Cluster的信号发送给QNX屏幕检测模块，Android负责IVI屏幕显示检测</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AVNT屏幕相关的软硬件方案&quot;&gt;&lt;a href=&quot;#AVNT屏幕相关的软硬件方案&quot; class=&quot;headerlink&quot; title=&quot;AVNT屏幕相关的软硬件方案&quot;&gt;&lt;/a&gt;AVNT屏幕相关的软硬件方案&lt;/h1&gt;&lt;h1 id=&quot;1-屏幕控制方案&quot;&gt;&lt;a href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/09/27/hello-world/"/>
    <id>http://example.com/2020/09/27/hello-world/</id>
    <published>2020-09-27T08:25:59.221Z</published>
    <updated>2020-09-27T08:25:59.221Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
