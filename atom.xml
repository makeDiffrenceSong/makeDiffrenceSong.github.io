<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Make a diffrence</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-01T14:57:20.678Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SongSong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo搭建问题记录</title>
    <link href="http://example.com/2020/10/01/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2020/10/01/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-10-01T13:45:53.000Z</published>
    <updated>2020-10-01T14:57:20.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-本地网址无法显示网页"><a href="#1-本地网址无法显示网页" class="headerlink" title="1.本地网址无法显示网页"></a>1.本地网址无法显示网页</h1><p>测查是否是由于没有设置主题，即检查themes目录下是否为空，如果为空，则是由于没有主题，导致无法显示网页。</p><p>git clone <a href="https://github.com/iissnan/hexo-theme-next.git">https://github.com/iissnan/hexo-theme-next.git</a> themes/next</p><p>并将blog目录下_config.yml里theme的名称由landscape修改为next</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001221437236.png" alt="image-20201001221437236"></p><h1 id="2-github-io网页无法访问"><a href="#2-github-io网页无法访问" class="headerlink" title="2.github.io网页无法访问"></a>2.github.io网页无法访问</h1><p>将DNS设置如下：</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001220505749.png" alt="image-20201001220505749"></p><h1 id="3-hexo-Typora无法显示图片"><a href="#3-hexo-Typora无法显示图片" class="headerlink" title="3.hexo+Typora无法显示图片"></a>3.hexo+Typora无法显示图片</h1><p>事先声明，所有博客文件均保存在 <code>hexo/_posts/</code>文件夹下</p><p>首先在 <code>hexo &gt; source</code>目录下建一个文件夹叫images，用来保存博客中的图片。</p><p>然后打开Typora的 <code>文件 &gt; 偏好设置</code>，进行如下设置。</p><p><img src="/images/hexo%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/image-20201001215844300.png" alt="image-20201001215844300"></p><p>这样的话所有的博客中的图片都将会保存到 <code>/source/images/该博客md文件名/图片名称</code></p><p>但是仅仅这样设置还不够，这样设置在typora中倒是能看图片了，但是使用的却是相对于当前md文件的相对路径，可是如果启动hexo，是要用服务器访问的，而服务器显然无法根据这个相对路径正确访问到图片，因此还需要在typora中进行进一步设置。</p><p>在typora菜单栏点击 <code>格式-&gt;图像-&gt;设置图片根目录</code>，将<code>hexo/source</code>作为其根目录即可。</p><p>设置完成之后就可以插入图片了，且插入的图片自动保存在 `/source/images/该博客md文件名/目录下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-本地网址无法显示网页&quot;&gt;&lt;a href=&quot;#1-本地网址无法显示网页&quot; class=&quot;headerlink&quot; title=&quot;1.本地网址无法显示网页&quot;&gt;&lt;/a&gt;1.本地网址无法显示网页&lt;/h1&gt;&lt;p&gt;测查是否是由于没有设置主题，即检查themes目录下是否为空</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/10/01/Activity%E7%9A%84%E5%B8%83%E5%B1%80%E5%85%A5%E5%8F%A3/"/>
    <id>http://example.com/2020/10/01/Activity%E7%9A%84%E5%B8%83%E5%B1%80%E5%85%A5%E5%8F%A3/</id>
    <published>2020-10-01T10:41:30.486Z</published>
    <updated>2020-10-01T10:41:30.681Z</updated>
    
    <content type="html"><![CDATA[<p>Activity的布局入口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Activity的布局入口&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>xml文件解析</title>
    <link href="http://example.com/2020/10/01/CustomizeView-03/"/>
    <id>http://example.com/2020/10/01/CustomizeView-03/</id>
    <published>2020-10-01T08:20:49.000Z</published>
    <updated>2020-10-01T14:54:08.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-布局文件xxx-xml是怎么生成view树，并显示"><a href="#1-布局文件xxx-xml是怎么生成view树，并显示" class="headerlink" title="1.布局文件xxx.xml是怎么生成view树，并显示"></a>1.布局文件xxx.xml是怎么生成view树，并显示</h1><p>1.1 setContentView创建View树</p><p>1.2ViewRoot绘制view</p><p>1.3</p><h1 id="2-LayoutInflater-inflate函数"><a href="#2-LayoutInflater-inflate函数" class="headerlink" title="2. LayoutInflater.inflate函数"></a>2. LayoutInflater.inflate函数</h1><p>inflate函数有四个重载函数，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inflate(<span class="meta">@LayoutRes</span> <span class="keyword">int</span> resource, <span class="meta">@Nullable</span> ViewGroup root)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(<span class="meta">@LayoutRes</span> <span class="keyword">int</span> resource, <span class="meta">@Nullable</span> ViewGroup root, <span class="keyword">boolean</span> attachToRoot)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(XmlPullParser parser, <span class="meta">@Nullable</span> ViewGroup root)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">inflate</span><span class="params">(XmlPullParser parser, <span class="meta">@Nullable</span> ViewGroup root, <span class="keyword">boolean</span> attachToRoot)</span></span></span><br></pre></td></tr></table></figure><p>这四个函数最终都会返回一个view</p><p>虽然inflater函数有四个，但是最终调用的都是View inflate(XmlPullParser parser, @Nullable ViewGroup root, boolean attachToRoot)函数。</p><p>参数理解：</p><p>resource：表示加载的xml布局文件的资源ID</p><p>root：可选视图作为生成的层次结构的父级，是一个ViewGroup对象，这个对象就用来保存当前布局中的子view。而当前布局的root布局是否也成为了root的元素得看attachToRoot参数。</p><p>attachToRoot：inflate后的层次结构是否应附加到root参数？ 如果为false，则root仅用于为XML中的根视图创建LayoutParams的正确子类。简单来说，就是用于决定inflater返回的view跟root是否存在父子布局关系。true：表示存在父子关系，系统会将inflate方法返回的View添加到root的子view中。false则不添加。</p><p>XmlPullParser：包含视图层次结构描述的XML dom节点。简单来说，就是对传入的xml资源文件转化为XmlPullParser对象，用于解析布局。</p><p>总结来说：我们要新建一个view保证是要有布局支撑的，root可以为null，但是如果为null就代表inflate返回的view没有容器支撑，那么parser布局你写的宽高等数值可能不会起作用，所以必须传一个root容器，attachToRoot当你想创建的view直接为root的子view就设置为true，如果你想创建的view只是需要一个容器，那么就设置attachToRoot为false。</p><p><img src="/images/CustomizeView-03/inflate.jpg" alt="inflate"></p><p>inflate的解析过程</p><p>1）root == null</p><p>构建的View将是一个独立的个体，属性无效</p><p>2）root != null</p><p>又可以分为两种情况：</p><p>①attachToRoot = false</p><ul><li>属性值会依托于root构建，所以此时的xml根布局的属性有效</li><li>根布局产生的view不是root的子布局,不会</li></ul><p>②attachToRoot = true</p><ul><li>属性值会依托于root构建，所以此时的xml根布局的属性有效</li><li>根布局产生的view是root的子布局，<strong>通过addView实现。</strong></li></ul><p><img src="/images/CustomizeView-03/pares.jpg" alt="pares"></p><p>动态换肤框架</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-布局文件xxx-xml是怎么生成view树，并显示&quot;&gt;&lt;a href=&quot;#1-布局文件xxx-xml是怎么生成view树，并显示&quot; class=&quot;headerlink&quot; title=&quot;1.布局文件xxx.xml是怎么生成view树，并显示&quot;&gt;&lt;/a&gt;1.布局文</summary>
      
    
    
    
    <category term="CustomizeView" scheme="http://example.com/categories/CustomizeView/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>自定义 Flowlayout 思路分析</title>
    <link href="http://example.com/2020/10/01/CustomizeView-02/"/>
    <id>http://example.com/2020/10/01/CustomizeView-02/</id>
    <published>2020-10-01T05:59:24.000Z</published>
    <updated>2020-10-01T08:20:04.559Z</updated>
    
    <content type="html"><![CDATA[<p>自定义FlowLayout</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;自定义FlowLayout&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CustomizeView</title>
    <link href="http://example.com/2020/09/30/CustomizeView/"/>
    <id>http://example.com/2020/09/30/CustomizeView/</id>
    <published>2020-09-30T11:19:50.000Z</published>
    <updated>2020-10-01T14:54:27.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-自定义View"><a href="#1-自定义View" class="headerlink" title="1.自定义View"></a>1.自定义View</h1><h2 id="1-1什么是自定义View"><a href="#1-1什么是自定义View" class="headerlink" title="1.1什么是自定义View"></a>1.1什么是自定义View</h2><h2 id="1-2自定义View的分类"><a href="#1-2自定义View的分类" class="headerlink" title="1.2自定义View的分类"></a>1.2自定义View的分类</h2><h3 id="1-2-1View的分类"><a href="#1-2-1View的分类" class="headerlink" title="1.2.1View的分类"></a>1.2.1View的分类</h3><p><strong>1）视图View主要分为两类</strong></p><table><thead><tr><th>类别</th><th>解释</th><th>特点</th></tr></thead><tbody><tr><td>单一视图（View）</td><td>即单个的View控件，比如Button、TextView等</td><td>不包含子view</td></tr><tr><td>视图组（ViewGroup）</td><td>即多个View组成的ViewGroup，比如LinearLayout等。</td><td>包含子View</td></tr></tbody></table><p><img src="/images/CustomizeView/view-1601559345905.jpg" alt="view"></p><p><strong>2）自定义View可分为以下两种类型：</strong></p><p><strong>自定义View</strong>：这种是单个的View，例如自定义Button、TextView等。只需要重写onMeasure()和onDraw()</p><p><strong>自定义Viewgroup</strong>：ViewGroup是一个容器，可以容纳多种类型的View，也包括ViewGroup。需要重写onMeasure()与onLayout()方法。</p><h2 id="1-2自定义View的流程分析"><a href="#1-2自定义View的流程分析" class="headerlink" title="1.2自定义View的流程分析"></a>1.2自定义View的流程分析</h2><h3 id="1-2-1-onMeasure方法"><a href="#1-2-1-onMeasure方法" class="headerlink" title="1.2.1 onMeasure方法"></a>1.2.1 onMeasure方法</h3><p>在进行自定义ViewGroup时，需要重写onMeasure方法，onMeasure方法主要是为了确定，ViewGroup中每个孩子的大小以及在测量完每个孩子的大小之后需要根据所有孩子的大小，来测量ViewGroup自身的尺寸。</p><p>因此在进行onMeasure时，会涉及到两个部分的工作，测量child view的尺寸，以及测量ViewGroup自身的尺寸。</p><p>总体流程为：</p><p>1）将自身的MeasureSpec参数传递给child View，让childView根据MeasureSpec进行自身的测量。</p><p>2）child view拿到father view的MeasureSpec参数，再结合自身的LayoutParams参数进行测绘。</p><p>child View的测绘过程主要包括：</p><p>①获取father view的MeasureSpec参数、padding参数</p><p>②获取自身的LayoutParams参数，即布局文件中的layout_width、layout_height</p><p>③根据以上三个参数，可以得到child view的MeasureSpec参数。</p><p>④根据自身的MeasureSpec参数，可以得到自身真实的尺寸。</p><p>3）child View测量完毕之后，father view会根据child View得到的时间尺寸，对自己进行测绘。</p><p>测绘主要包括：</p><p>①对比自身的MeasureSpec参数与ViewGroup（自身）的father的MeasureSpec参数。确定下来自己的真实参数</p><p>②得到自己真实的参数之后，就可以进行测绘了。</p><h3 id="1-2-2onLayout-方法"><a href="#1-2-2onLayout-方法" class="headerlink" title="1.2.2onLayout()方法"></a>1.2.2onLayout()方法</h3><p>在进行自定义时</p><h1 id="2-关键类分析"><a href="#2-关键类分析" class="headerlink" title="2.关键类分析"></a>2.关键类分析</h1><h2 id="2-1MeasureSpec"><a href="#2-1MeasureSpec" class="headerlink" title="2.1MeasureSpec"></a>2.1MeasureSpec</h2><p>MeasureSpec参数：封装了father View传递给child View的布局规则。它很大程度上决定了一个View尺寸规格，因为view还受自身的LayoutParams参数影响。</p><p>MeasureSpec是一个int类型的数据结构，它主要分为SpecMode与SpecSize；</p><p>SpecMode：用高2位表示测量的模式。</p><p>SpecSize：用低30位表示在某种模式下的规格大小</p><p>SpecMode又有三类：</p><p>UNSPECIFIED：不对View的大小做限制，一般用于系统内部</p><p>EXACTLY：表示精确的布局尺寸，比如100dp，这就表示father 布局已经给出了精确的尺寸，子布局可以根据这个布局参数进行测量，child view可以比father 的尺寸大，但是大的部分是不会显示出来的。</p><p> AT_MOST：表示father布局指定了一个给定的大小，child view的尺寸不能比这个值大。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A MeasureSpec encapsulates the layout requirements passed from parent to child.</span></span><br><span class="line"><span class="comment"> * Each MeasureSpec represents a requirement for either the width or the height.</span></span><br><span class="line"><span class="comment"> * A MeasureSpec is comprised of a size and a mode. There are three possible</span></span><br><span class="line"><span class="comment"> * modes:</span></span><br><span class="line"><span class="comment"> * &lt;dl&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;UNSPECIFIED&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The parent has not imposed any constraint on the child. It can be whatever size</span></span><br><span class="line"><span class="comment"> * it wants.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;EXACTLY&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The parent has determined an exact size for the child. The child is going to be</span></span><br><span class="line"><span class="comment"> * given those bounds regardless of how big it wants to be.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;dt&gt;AT_MOST&lt;/dt&gt;</span></span><br><span class="line"><span class="comment"> * &lt;dd&gt;</span></span><br><span class="line"><span class="comment"> * The child can be as large as it wants up to the specified size.</span></span><br><span class="line"><span class="comment"> * &lt;/dd&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/dl&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * MeasureSpecs are implemented as ints to reduce object allocation. This class</span></span><br><span class="line"><span class="comment"> * is provided to pack and unpack the &amp;lt;size, mode&amp;gt; tuple into the int.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MeasureSpec</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MODE_SHIFT = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MODE_MASK  = <span class="number">0x3</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="meta">@IntDef(&#123;UNSPECIFIED, EXACTLY, AT_MOST&#125;)</span></span><br><span class="line">    <span class="meta">@Retention(RetentionPolicy.SOURCE)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@interface</span> MeasureSpecMode &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The parent has not imposed any constraint</span></span><br><span class="line"><span class="comment">     * on the child. It can be whatever size it wants.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UNSPECIFIED = <span class="number">0</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The parent has determined an exact size</span></span><br><span class="line"><span class="comment">     * for the child. The child is going to be given those bounds regardless</span></span><br><span class="line"><span class="comment">     * of how big it wants to be.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> EXACTLY     = <span class="number">1</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Measure specification mode: The child can be as large as it wants up</span></span><br><span class="line"><span class="comment">     * to the specified size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> AT_MOST     = <span class="number">2</span> &lt;&lt; MODE_SHIFT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a measure specification based on the supplied size and mode.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The mode must always be one of the following:</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#UNSPECIFIED&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#EXACTLY&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#AT_MOST&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On API level 17 and lower, makeMeasureSpec&#x27;s</span></span><br><span class="line"><span class="comment">     * implementation was such that the order of arguments did not matter</span></span><br><span class="line"><span class="comment">     * and overflow in either value could impact the resulting MeasureSpec.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> android.widget.RelativeLayout&#125; was affected by this bug.</span></span><br><span class="line"><span class="comment">     * Apps targeting API levels greater than 17 will get the fixed, more strict</span></span><br><span class="line"><span class="comment">     * behavior.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size the size of the measure specification</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mode the mode of the measure specification</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the measure specification based on size and mode</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">makeMeasureSpec</span><span class="params">(<span class="meta">@IntRange(from = 0, to = (1 &lt;&lt; MeasureSpec.MODE_SHIFT) - 1)</span> <span class="keyword">int</span> size,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="meta">@MeasureSpecMode</span> <span class="keyword">int</span> mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sUseBrokenMakeMeasureSpec) &#123;</span><br><span class="line">            <span class="keyword">return</span> size + mode;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (size &amp; ~MODE_MASK) | (mode &amp; MODE_MASK);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Like &#123;<span class="doctag">@link</span> #makeMeasureSpec(int, int)&#125;, but any spec with a mode of UNSPECIFIED</span></span><br><span class="line"><span class="comment">     * will automatically get a size of 0. Older apps expect this.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span> internal use only for compatibility with system widgets and older apps</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">makeSafeMeasureSpec</span><span class="params">(<span class="keyword">int</span> size, <span class="keyword">int</span> mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sUseZeroUnspecifiedMeasureSpec &amp;&amp; mode == UNSPECIFIED) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> makeMeasureSpec(size, mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the mode from the supplied measure specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to extract the mode from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#UNSPECIFIED&#125;,</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#AT_MOST&#125; or</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#EXACTLY&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@MeasureSpecMode</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMode</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//noinspection ResourceType</span></span><br><span class="line">        <span class="keyword">return</span> (measureSpec &amp; MODE_MASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the size from the supplied measure specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to extract the size from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the size in pixels defined in the supplied measure specification</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (measureSpec &amp; ~MODE_MASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">adjust</span><span class="params">(<span class="keyword">int</span> measureSpec, <span class="keyword">int</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> mode = getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> size = getSize(measureSpec);</span><br><span class="line">        <span class="keyword">if</span> (mode == UNSPECIFIED) &#123;</span><br><span class="line">            <span class="comment">// No need to adjust size for UNSPECIFIED mode.</span></span><br><span class="line">            <span class="keyword">return</span> makeMeasureSpec(size, UNSPECIFIED);</span><br><span class="line">        &#125;</span><br><span class="line">        size += delta;</span><br><span class="line">        <span class="keyword">if</span> (size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            Log.e(VIEW_LOG_TAG, <span class="string">&quot;MeasureSpec.adjust: new size would be negative! (&quot;</span> + size +</span><br><span class="line">                    <span class="string">&quot;) spec: &quot;</span> + toString(measureSpec) + <span class="string">&quot; delta: &quot;</span> + delta);</span><br><span class="line">            size = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> makeMeasureSpec(size, mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns a String representation of the specified measure</span></span><br><span class="line"><span class="comment">     * specification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> measureSpec the measure specification to convert to a String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String with the following format: &quot;MeasureSpec: MODE SIZE&quot;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> mode = getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> size = getSize(measureSpec);</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;MeasureSpec: &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mode == UNSPECIFIED)</span><br><span class="line">            sb.append(<span class="string">&quot;UNSPECIFIED &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mode == EXACTLY)</span><br><span class="line">            sb.append(<span class="string">&quot;EXACTLY &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mode == AT_MOST)</span><br><span class="line">            sb.append(<span class="string">&quot;AT_MOST &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sb.append(mode).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        sb.append(size);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2LayoutParams"><a href="#2-2LayoutParams" class="headerlink" title="2.2LayoutParams"></a>2.2LayoutParams</h2><p>LayoutParams表示一个布局的参数，可以理解为在xml中的layout_width、layout_height两个属性的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LayoutParams are used by views to tell their parents how they want to be</span></span><br><span class="line"><span class="comment"> * laid out. See</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> android.R.styleable#ViewGroup_Layout ViewGroup Layout Attributes&#125;</span></span><br><span class="line"><span class="comment"> * for a list of all child view attributes that this class supports.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The base LayoutParams class just describes how big the view wants to be</span></span><br><span class="line"><span class="comment"> * for both width and height. For each dimension, it can specify one of:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;FILL_PARENT (renamed MATCH_PARENT in API Level 8 and higher), which</span></span><br><span class="line"><span class="comment"> * means that the view wants to be as big as its parent (minus padding)</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; WRAP_CONTENT, which means that the view wants to be just big enough</span></span><br><span class="line"><span class="comment"> * to enclose its content (plus padding)</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; an exact number</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * There are subclasses of LayoutParams for different subclasses of</span></span><br><span class="line"><span class="comment"> * ViewGroup. For example, AbsoluteLayout has its own subclass of</span></span><br><span class="line"><span class="comment"> * LayoutParams which adds an X and Y value.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;div class=&quot;special reference&quot;&gt;</span></span><br><span class="line"><span class="comment"> * &lt;h3&gt;Developer Guides&lt;/h3&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;For more information about creating user interface layouts, read the</span></span><br><span class="line"><span class="comment"> * &lt;a href=&quot;&#123;<span class="doctag">@docRoot</span>&#125;guide/topics/ui/declaring-layout.html&quot;&gt;XML Layouts&lt;/a&gt; developer</span></span><br><span class="line"><span class="comment"> * guide.&lt;/p&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#ViewGroup_Layout_layout_height</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#ViewGroup_Layout_layout_width</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LayoutParams</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * FILL_PARENT means that the view wants to be as big as its parent,</span></span><br><span class="line"><span class="comment">     * minus the parent&#x27;s padding, if any. This value is deprecated</span></span><br><span class="line"><span class="comment">     * starting in API Level 8 and replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;UnusedDeclaration&quot;&#125;)</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> FILL_PARENT = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * MATCH_PARENT means that the view wants to be as big as its parent,</span></span><br><span class="line"><span class="comment">     * minus the parent&#x27;s padding, if any. Introduced in API Level 8.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MATCH_PARENT = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special value for the height or width requested by a View.</span></span><br><span class="line"><span class="comment">     * WRAP_CONTENT means that the view wants to be just large enough to fit</span></span><br><span class="line"><span class="comment">     * its own internal content, taking its own padding into account.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WRAP_CONTENT = -<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Information about how wide the view wants to be. Can be one of the</span></span><br><span class="line"><span class="comment">     * constants FILL_PARENT (replaced by MATCH_PARENT</span></span><br><span class="line"><span class="comment">     * in API Level 8) or WRAP_CONTENT, or an exact size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ViewDebug</span>.ExportedProperty(category = <span class="string">&quot;layout&quot;</span>, mapping = &#123;</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = MATCH_PARENT, to = <span class="string">&quot;MATCH_PARENT&quot;</span>),</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = WRAP_CONTENT, to = <span class="string">&quot;WRAP_CONTENT&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@InspectableProperty(name = &quot;layout_width&quot;, enumMapping = &#123;</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;match_parent&quot;, value = MATCH_PARENT),</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;wrap_content&quot;, value = WRAP_CONTENT)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> width;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Information about how tall the view wants to be. Can be one of the</span></span><br><span class="line"><span class="comment">     * constants FILL_PARENT (replaced by MATCH_PARENT</span></span><br><span class="line"><span class="comment">     * in API Level 8) or WRAP_CONTENT, or an exact size.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ViewDebug</span>.ExportedProperty(category = <span class="string">&quot;layout&quot;</span>, mapping = &#123;</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = MATCH_PARENT, to = <span class="string">&quot;MATCH_PARENT&quot;</span>),</span><br><span class="line">        <span class="meta">@ViewDebug</span>.IntToString(from = WRAP_CONTENT, to = <span class="string">&quot;WRAP_CONTENT&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@InspectableProperty(name = &quot;layout_height&quot;, enumMapping = &#123;</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;match_parent&quot;, value = MATCH_PARENT),</span></span><br><span class="line"><span class="meta">            @EnumEntry(name = &quot;wrap_content&quot;, value = WRAP_CONTENT)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used to animate layouts.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> LayoutAnimationController.AnimationParameters layoutAnimationParameters;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new set of layout parameters. The values are extracted from</span></span><br><span class="line"><span class="comment">     * the supplied attributes set and context. The XML attributes mapped</span></span><br><span class="line"><span class="comment">     * to this set of layout parameters are:</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     *   &lt;li&gt;&lt;code&gt;layout_width&lt;/code&gt;: the width, either an exact value,</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;, or &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in API Level 8)&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     *   &lt;li&gt;&lt;code&gt;layout_height&lt;/code&gt;: the height, either an exact value,</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;, or &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by</span></span><br><span class="line"><span class="comment">     *   &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in API Level 8)&lt;/li&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c the application environment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> attrs the set of attributes from which to extract the layout</span></span><br><span class="line"><span class="comment">     *              parameters&#x27; values</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(Context c, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.ViewGroup_Layout);</span><br><span class="line">        setBaseAttributes(a,</span><br><span class="line">                R.styleable.ViewGroup_Layout_layout_width,</span><br><span class="line">                R.styleable.ViewGroup_Layout_layout_height);</span><br><span class="line">        a.recycle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new set of layout parameters with the specified width</span></span><br><span class="line"><span class="comment">     * and height.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width the width, either &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;,</span></span><br><span class="line"><span class="comment">     *        &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in</span></span><br><span class="line"><span class="comment">     *        API Level 8), or a fixed size in pixels</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height the height, either &#123;<span class="doctag">@link</span> #WRAP_CONTENT&#125;,</span></span><br><span class="line"><span class="comment">     *        &#123;<span class="doctag">@link</span> #FILL_PARENT&#125; (replaced by &#123;<span class="doctag">@link</span> #MATCH_PARENT&#125; in</span></span><br><span class="line"><span class="comment">     *        API Level 8), or a fixed size in pixels</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Copy constructor. Clones the width and height values of the source.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source The layout params to copy from.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LayoutParams</span><span class="params">(LayoutParams source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = source.width;</span><br><span class="line">        <span class="keyword">this</span>.height = source.height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used internally by MarginLayoutParams.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    LayoutParams() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts the layout parameters from the supplied attributes.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a the style attributes to extract the parameters from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> widthAttr the identifier of the width attribute</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> heightAttr the identifier of the height attribute</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">setBaseAttributes</span><span class="params">(TypedArray a, <span class="keyword">int</span> widthAttr, <span class="keyword">int</span> heightAttr)</span> </span>&#123;</span><br><span class="line">        width = a.getLayoutDimension(widthAttr, <span class="string">&quot;layout_width&quot;</span>);</span><br><span class="line">        height = a.getLayoutDimension(heightAttr, <span class="string">&quot;layout_height&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Resolve layout parameters depending on the layout direction. Subclasses that care about</span></span><br><span class="line"><span class="comment">     * layoutDirection changes should override this method. The default implementation does</span></span><br><span class="line"><span class="comment">     * nothing.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> layoutDirection the direction of the layout</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> View#LAYOUT_DIRECTION_LTR&#125;</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> View#LAYOUT_DIRECTION_RTL&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resolveLayoutDirection</span><span class="params">(<span class="keyword">int</span> layoutDirection)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns a String representation of this set of layout parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> output the String to prepend to the internal representation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String with the following format: output +</span></span><br><span class="line"><span class="comment">     *         &quot;ViewGroup.LayoutParams=&#123; width=WIDTH, height=HEIGHT &#125;&quot;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">debug</span><span class="params">(String output)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> output + <span class="string">&quot;ViewGroup.LayoutParams=&#123; width=&quot;</span></span><br><span class="line">                + sizeToString(width) + <span class="string">&quot;, height=&quot;</span> + sizeToString(height) + <span class="string">&quot; &#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use &#123;<span class="doctag">@code</span> canvas&#125; to draw suitable debugging annotations for these LayoutParameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view the view that contains these layout parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> canvas the canvas on which to draw</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDebugDraw</span><span class="params">(View view, Canvas canvas, Paint paint)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts the specified size to a readable String.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size the size to convert</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a String instance representing the supplied size</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">static</span> String <span class="title">sizeToString</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (size == WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;wrap-content&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (size == MATCH_PARENT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;match-parent&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(<span class="meta">@NonNull</span> ViewHierarchyEncoder encoder)</span> </span>&#123;</span><br><span class="line">        encoder.beginObject(<span class="keyword">this</span>);</span><br><span class="line">        encodeProperties(encoder);</span><br><span class="line">        encoder.endObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">encodeProperties</span><span class="params">(<span class="meta">@NonNull</span> ViewHierarchyEncoder encoder)</span> </span>&#123;</span><br><span class="line">        encoder.addProperty(<span class="string">&quot;width&quot;</span>, width);</span><br><span class="line">        encoder.addProperty(<span class="string">&quot;height&quot;</span>, height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3ViewGroup"><a href="#2-3ViewGroup" class="headerlink" title="2.3ViewGroup"></a>2.3ViewGroup</h2><p>getChildMeasureSpec函数的作用就是计算出child view的MeasureSpec参数。最终child view根据这个参数得到自身测量的尺寸。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Does the hard part of measureChildren: figuring out the MeasureSpec to</span></span><br><span class="line"><span class="comment"> * pass to a particular child. This method figures out the right MeasureSpec</span></span><br><span class="line"><span class="comment"> * for one dimension (height or width) of one child view.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The goal is to combine information from our MeasureSpec with the</span></span><br><span class="line"><span class="comment"> * LayoutParams of the child to get the best possible results. For example,</span></span><br><span class="line"><span class="comment"> * if the this view knows its size (because its MeasureSpec has a mode of</span></span><br><span class="line"><span class="comment"> * EXACTLY), and the child has indicated in its LayoutParams that it wants</span></span><br><span class="line"><span class="comment"> * to be the same size as the parent, the parent should ask the child to</span></span><br><span class="line"><span class="comment"> * layout given an exact size.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> spec The requirements for this view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> padding The padding of this view for the current dimension and</span></span><br><span class="line"><span class="comment"> *        margins, if applicable</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> childDimension How big the child wants to be in the current</span></span><br><span class="line"><span class="comment"> *        dimension</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> a MeasureSpec integer for the child</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getChildMeasureSpec</span><span class="params">(<span class="keyword">int</span> spec, <span class="keyword">int</span> padding, <span class="keyword">int</span> childDimension)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> specMode = MeasureSpec.getMode(spec);</span><br><span class="line">    <span class="keyword">int</span> specSize = MeasureSpec.getSize(spec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> size = Math.max(<span class="number">0</span>, specSize - padding);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> resultSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> resultMode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (specMode) &#123;</span><br><span class="line">    <span class="comment">// Parent has imposed an exact size on us</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.EXACTLY:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size. So be it.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size. It can&#x27;t be</span></span><br><span class="line">            <span class="comment">// bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parent has imposed a maximum size on us</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.AT_MOST:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Child wants a specific size... so be it</span></span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size, but our size is not fixed.</span></span><br><span class="line">            <span class="comment">// Constrain child to not be bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size. It can&#x27;t be</span></span><br><span class="line">            <span class="comment">// bigger than us.</span></span><br><span class="line">            resultSize = size;</span><br><span class="line">            resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parent asked to see how big we want to be</span></span><br><span class="line">    <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</span><br><span class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Child wants a specific size... let him have it</span></span><br><span class="line">            resultSize = childDimension;</span><br><span class="line">            resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to be our size... find out how big it should</span></span><br><span class="line">            <span class="comment">// be</span></span><br><span class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">            resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">            <span class="comment">// Child wants to determine its own size.... find out how</span></span><br><span class="line">            <span class="comment">// big it should be</span></span><br><span class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">            resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//noinspection ResourceType</span></span><br><span class="line">    <span class="keyword">return</span> MeasureSpec.makeMeasureSpec(resultSize, resultMode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对参数的理解</p><p>spec：表示father view传递给child view的MeasureSpec参数，因为child view要测量自身的尺寸需要根据father view的规则来测量</p><p>int padding：child view放置在father 布局中，会与father 的边界有一定的距离，这个距离就是padding。红色与绿色之间的部分为padding</p><p><img src="/images/CustomizeView/image-20201001213757594.png" alt="image-20201001213757594"></p><p> int childDimension：child vIew的布局参数，即在xml文件中layout_width、layout_height两个属性的值。</p><p>要得到child View的MeasureSpec参数，需要以上的三个参数值。</p><p>那么childView具体是何种模式，在这个函数内部进行了判定，总结下来为一下9种情况：</p><p><img src="/images/CustomizeView/image-20201001213908239.png" alt="image-20201001213908239"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-自定义View&quot;&gt;&lt;a href=&quot;#1-自定义View&quot; class=&quot;headerlink&quot; title=&quot;1.自定义View&quot;&gt;&lt;/a&gt;1.自定义View&lt;/h1&gt;&lt;h2 id=&quot;1-1什么是自定义View&quot;&gt;&lt;a href=&quot;#1-1什么是自定义Vie</summary>
      
    
    
    
    <category term="CustomizeView" scheme="http://example.com/categories/CustomizeView/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/09/30/displayStrategy/"/>
    <id>http://example.com/2020/09/30/displayStrategy/</id>
    <published>2020-09-30T09:03:29.954Z</published>
    <updated>2020-09-30T10:43:36.504Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AVNT屏幕相关的软硬件方案"><a href="#AVNT屏幕相关的软硬件方案" class="headerlink" title="AVNT屏幕相关的软硬件方案"></a>AVNT屏幕相关的软硬件方案</h1><h1 id="1-屏幕控制方案"><a href="#1-屏幕控制方案" class="headerlink" title="1. 屏幕控制方案"></a>1. 屏幕控制方案</h1><h2 id="1-1-屏幕内置MCU的控制方案"><a href="#1-1-屏幕内置MCU的控制方案" class="headerlink" title="1.1 屏幕内置MCU的控制方案"></a>1.1 屏幕内置MCU的控制方案</h2><h2 id="1-2-屏幕无内置MCU方案"><a href="#1-2-屏幕无内置MCU方案" class="headerlink" title="1.2 屏幕无内置MCU方案"></a>1.2 屏幕无内置MCU方案</h2><img src="/.com//09/30/displayStrategy/1.png" class title="This is an image"><p><img src="/.com//1.png" alt="屏幕硬件连接图"></p><p><strong>1）屏幕相关硬件模块说明</strong></p><table><thead><tr><th align="left">模块</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td align="left">LVDS Serializer</td><td></td><td></td></tr><tr><td align="left">LVDS Deserializer</td><td></td><td></td></tr><tr><td align="left">ADC</td><td></td><td></td></tr><tr><td align="left">Backlight driver</td><td></td><td></td></tr><tr><td align="left">Touch Panel</td><td></td><td></td></tr><tr><td align="left">LDO</td><td></td><td></td></tr><tr><td align="left">TFT</td><td></td><td></td></tr></tbody></table><p><strong>2）屏幕通信信号说明</strong></p><table><thead><tr><th>引脚信号</th><th>连接方式</th><th>通信协议</th><th>信号作用</th><th>备注</th></tr></thead><tbody><tr><td>video</td><td>连接SOC与加串器对应引脚</td><td>DSI协议</td><td>传输RGB888/Sync/field</td><td></td></tr><tr><td>I2C(main)</td><td>连接SOC与加串器对应引脚</td><td>I2C协议</td><td>主要用于传输控制信号，包括屏幕的初始化信号，屏幕的亮灭控制信号</td><td></td></tr><tr><td>I2C(pass through)</td><td>连接SOC与加串器对应引脚</td><td>I2C协议</td><td>主要用于触摸的初始化，以及接收触摸事件</td><td></td></tr><tr><td>GPIO_PWM</td><td>连接VIP与加串器引脚</td><td>GPIO数据</td><td></td><td></td></tr><tr><td>Coax.</td><td>双绞同轴线，连接加串器与解串器</td><td></td><td>传输加串数据，包括I2C控制指令、RGB数据等</td><td></td></tr><tr><td>Batt</td><td>外部电源接口</td><td></td><td>用于给屏幕供电</td><td></td></tr><tr><td>ACC Control</td><td>连接VIP的GPIO与加串器GPIO引脚</td><td>GPIO数据</td><td>用于控制屏幕上下电，有Batt供电，但是需要ACC Control来控制屏幕的上下电，高电平上电，低电平下电</td><td></td></tr><tr><td>BL_ON</td><td>解串器GPIO与BL驱动器GPIO相连</td><td>GPIO数据</td><td>用于控制屏幕背光的亮、灭</td><td></td></tr><tr><td>BL_PWM</td><td>解串器GPIO与BL驱动器GPIO相连</td><td>GPIO数据</td><td>用于控制屏幕的背光亮度</td><td></td></tr></tbody></table><h2 id="1-3-屏幕控制软件方案"><a href="#1-3-屏幕控制软件方案" class="headerlink" title="1.3 屏幕控制软件方案"></a>1.3 屏幕控制软件方案</h2><p>屏幕软件控制主要包括屏幕的屏幕上下电、初始化、屏幕背光亮度控制、屏幕亮灭控制以及屏幕触摸事件响应。然而由于硬件设计方案的不同，屏幕软件控制方案有着一定差异，总体体现在屏幕软件控制的职责上。</p><p><strong>1）屏幕上下电</strong></p><p>当有总线唤醒信号或者ACC/IGN信号后，VIP检测到电源信号后，对屏幕进行上下电进行控制。</p><p>由于ACC Control负责屏幕的上下电，而ACC Control引脚的控制，可以由VIP控制也可以由SOC控制。</p><p><strong>2）屏幕初始化</strong></p><p>屏幕的初始化是由SOC通过I2C驱动来进行屏幕的初始化配置；</p><p><strong>3）屏幕背光亮度控制</strong></p><p>①VIP通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度</p><p><strong><em><u>②SOC通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度</u></em></strong></p><p><strong>4）屏幕亮灭控制</strong></p><p>①VIP通过控制ACC Control引脚，直接给屏幕上下电，达到屏幕亮灭的控制，但是这种方式会导致整个屏幕下电，当重新上电需要重新初始化屏幕，会存在亮屏比较慢的情况</p><p>②SOC侧通过I2C控制加串器，并将数据透传到屏幕解串器，解串器通过控制背光的BL_ON引脚，实现屏幕的亮灭控制。</p><p><strong>5）屏幕触摸事件响应</strong></p><h2 id="1-4-屏幕控制方案设计"><a href="#1-4-屏幕控制方案设计" class="headerlink" title="1.4 屏幕控制方案设计"></a>1.4 屏幕控制方案设计</h2><p><img src="/.com//.%5CdisplayStrategy%5C2.png" alt="alt"></p><p><strong>1）屏幕初始化</strong></p><p>①当有总线唤醒信号或者ACC/IGN信号后，VIP电源管理检测到电源状态信号后，会通过GPIO控制输出给屏幕上电。</p><p>②并将电源状态信号传递给SOC，QNX系统会通过I2C对屏幕进行初始化</p><p><strong>2）屏幕背光亮度控制</strong></p><p>①IVI端提供屏幕背光亮度的应用，当应用发起对屏幕背光亮度进行调节时，Android端电源管理会接收屏幕背光调节的信号，并通过VHAL，再经SOMEIP，将数据发送到QNX端</p><p>②QNX电源管理再将信号发送给VIP，VIP端的电源管理，通过控制GPIO_PWM引脚，将数据传输给加串器，加串器透传数据到屏幕的解串器，解串器再根据信号控制BL的亮度。</p><p><strong>3）屏幕亮灭控制</strong></p><p>屏幕的亮灭控制会有两种场景</p><p>①ACC ON下屏幕的亮灭控制</p><ul><li>IVI端提供屏幕亮灭的应用，当应用发起对屏幕亮灭进行调节时，Android端电源管理会接收屏幕亮灭控制的信号，并通过VHAL，再经SOMEIP，将数据发送到QNX端。</li><li>QNX端电源管理，通过I2C配置幕幕加串器，加串器透传控制数据给屏幕端解串器，解串器通过控制背光的BL_ON引脚，实现屏幕的亮灭控制。</li></ul><p>②ACC OFF时屏幕的亮灭控制</p><ul><li>VIP可以通过控制Disp_ctr来控制屏幕的上下电来实现屏幕的亮灭控制。</li><li>也可以通过ACC ON场景下，通过BL_ON管脚进行屏幕的亮灭控制。</li></ul><h1 id="2-屏幕检测方案"><a href="#2-屏幕检测方案" class="headerlink" title="2. 屏幕检测方案"></a>2. 屏幕检测方案</h1><h2 id="2-1-屏幕检测需求分析"><a href="#2-1-屏幕检测需求分析" class="headerlink" title="2.1 屏幕检测需求分析"></a>2.1 屏幕检测需求分析</h2><table><thead><tr><th></th><th>全白模式</th></tr></thead><tbody><tr><td></td><td>全黑模式</td></tr><tr><td>IVI/Cluster 屏幕检测</td><td>由黑至白模式</td></tr><tr><td></td><td>全红模式</td></tr><tr><td></td><td>全绿模式</td></tr><tr><td></td><td>全蓝模式</td></tr></tbody></table><p><strong>1）场景</strong></p><p>工厂下线时需要对屏幕坏点进行检测，通过屏幕显示不同的颜色来判断屏幕是否有坏点。</p><p><strong>2）实现</strong></p><p>应用上对于屏幕检测有两种方式</p><ul><li>工程模式应用下提供屏幕检测的界面，用于对屏幕进行检测</li></ul><p><img src="/.com//.%5CdisplayStrategy%5C3.png" alt="alt"></p><ul><li><p>采用诊断仪的方式诊断屏幕，主要是通过发送DID数据进行检测</p><p><img src="/.com//.%5CdisplayStrategy%5C4.png" alt="alt"></p></li></ul><h2 id="2-2-屏幕检测的底层实现方案"><a href="#2-2-屏幕检测的底层实现方案" class="headerlink" title="2.2 屏幕检测的底层实现方案"></a>2.2 屏幕检测的底层实现方案</h2><p><img src="/.com//.%5CdisplayStrategy%5C5.png" alt="alt"></p><p>屏幕检测主要有两种方式：</p><ul><li>解串器接收应用的RGB数据进行显示</li><li>通过I2C对加串器进行配置，使屏幕进入工程测试模式，给屏幕特定的颜色值，显示不同测试条件下的屏幕颜色。</li></ul><h2 id="2-3-屏幕检测上层软件实现方法"><a href="#2-3-屏幕检测上层软件实现方法" class="headerlink" title="2.3 屏幕检测上层软件实现方法"></a>2.3 屏幕检测上层软件实现方法</h2><p>2.3.1 单系统方案</p><p>由Android通过播放图片的方式，在屏幕上显示不同颜色的图片来进行检测。</p><p>2.3.2 双系统方案</p><p>由于双系统的存在，屏幕显示的数据输出可以有以下两种方案：</p><p>1）QNX控制数据输出显示</p><p>从IVI发起屏幕检测信号，IVI端模块将检测信号发送给QNX屏幕检测模块，QNX负责屏幕的实际显示检测</p><p>2）QNX控制Cluster屏幕的检测数据输出，Android端负责IVI屏幕的检测数据输出</p><p>从IVI发起屏幕检测信号，IVI端模块将检测Cluster的信号发送给QNX屏幕检测模块，Android负责IVI屏幕显示检测</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AVNT屏幕相关的软硬件方案&quot;&gt;&lt;a href=&quot;#AVNT屏幕相关的软硬件方案&quot; class=&quot;headerlink&quot; title=&quot;AVNT屏幕相关的软硬件方案&quot;&gt;&lt;/a&gt;AVNT屏幕相关的软硬件方案&lt;/h1&gt;&lt;h1 id=&quot;1-屏幕控制方案&quot;&gt;&lt;a href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/09/27/hello-world/"/>
    <id>http://example.com/2020/09/27/hello-world/</id>
    <published>2020-09-27T08:25:59.221Z</published>
    <updated>2020-09-27T08:25:59.221Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
